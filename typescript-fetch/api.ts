/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Official Assignee Service Information System v4 (OASIS4)
 *  ____ # Version 1.4.7 - Date finalised: 13-Feb-2018 ____    ### Change log: | Version| Thing | Notes | Classification | |----|-----|------| ----| | 1.4.3 | Added /creditor-claims/{claim_number}/claim-registration resource | missing resource  | bug | | 1.4.3 | Addtional creditor-claims search criteria added  | ui mismatch | bug | | 1.4.3 | Added ui mappings to creditor-claims search | clarity / documentation | enhancement | | 1.4.3 | Changed name of Claim Application to Claim Registration | ui mismatch| enhancement | | 1.4.4 | Removed allOf: containers | codegen didn't like it | bug | | 1.4.5 | added /organisaions/claims resource | missing path | bug | | 1.4.5 | re-ordered claims paths | improving swagger readability | enhancement | | 1.4.5 | Changed claim-applications/modify to /save | semantically more accurate | enahncement | | 1.4.6 | Added assets HATEOAS links and placeholders | future-proofing | enhancement | | 1.4.6 | Added resticted search contacts implementation for creditors | semantically clearer |  enhancement | | 1.4.6 | Wrapped enums in double quotes |stop codegen from escaping | bug, kind of | | 1.4.6 | Backed out allOf change  | incorrect defninition | bug |  | 1.4.6 | Tidied up RegistrationRecord Model | enhanced understanding of audit and some incomplete definitions | bug |   <br /> **** <br />  ### Future version backlog *THings that need to be changed for future iteration.*   | Thing I should do |  Likelihood it will ever get done | Version implemented | |----|:----:|:-----:| | Add distinct link models for everything - would allow more accurate HATEOAS examples | **Somewhat likely** |  nope  | | Refactor out claim notifcation options| **Possible but later** |  not needed  | | Refactor out the estate details from the claims resources (so the read only stuff for creditors)| **Possible but later** |  nope  | | Modify style of claims to include  a /new activity | **Almost definitely** |  done.. right or wrong| | Add audit resources / actions for all_the_things | **Definitely** but not just yet. |  nope  | | Add NZBN as search critea to estates, claims & contacts| **definitely** | |   **** <br /> 
 *
 * OpenAPI spec version: 1.4.7
 * Contact: sam@pxp.nz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


import * as url from "url";
import * as portableFetch from "portable-fetch";
import { Configuration } from "./configuration";

const BASE_PATH = "https://virtserver.swaggerhub.com/v1/oasis4".replace(/\/+$/, "");

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|",
};

/**
 *
 * @export
 * @interface FetchAPI
 */
export interface FetchAPI {
    (url: string, init?: any): Promise<Response>;
}

/**
 *  
 * @export
 * @interface FetchArgs
 */
export interface FetchArgs {
    url: string;
    options: any;
}

/**
 * 
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
    protected configuration: Configuration;

    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected fetch: FetchAPI = portableFetch) {
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
};

/**
 * 
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
    name: "RequiredError"
    constructor(public field: string, msg?: string) {
        super(msg);
    }
}

/**
 * This is the detailed claim resource that is attached to 1 and only 1 estate. 
 * @export
 * @interface Address
 */
export interface Address {
}

/**
 * A claim that has in some stage of it's lifecycle been 'accepted' - this is the detailed claim resource that is attached to 1 and only 1^ estate.  ^ the edge / compensating case here is a linked claim - see HATEOS links. 
 * @export
 * @interface ClaimRecord
 */
export interface ClaimRecord {
    /**
     * The primary key of the claim & claim id used by the estate  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimId?: number;
    /**
     * The account that created the claim - could be created from the initial statement of affairs, the insolvency officer or the creditor (or agent).  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCreatedBy?: string;
    /**
     * The name of the persn creating the claim  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCreatedName?: string;
    /**
     * The user id that created the claim.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimCteId?: number;
    /**
     * Transaction code.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimTcId?: number;
    /**
     * UU  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimClsId?: number;
    /**
     * The type of claim: used in the process to determine priority  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimType?: string;
    /**
     * The date that the claim was created  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCreated?: string;
    /**
     * The person (user account) that last update the claim record.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimLastUpdatedBy?: string;
    /**
     * The user name of the person who last update the claim.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimLastUpdatedName?: string;
    /**
     * The dateTime the claim was last updated.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimLastUpdated?: string;
    /**
     * The version (aka revision) of the claim.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimVersion?: number;
    /**
     * The date on which the (current) status for the claim became current.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimStatusDate?: string;
    /**
     * Unknown  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimManualSourceCode?: string;
    /**
     * Boolean indicating whether claim is being appealed in the courts.  
     * @type {boolean}
     * @memberof ClaimRecord
     */
    claimUnderAppeal?: boolean;
    /**
     * The (payment) priority of the claim (once claim becomes part of the estate).  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimPriority?: number;
    /**
     * The reference supplied by the creditor for the claim. Not necessarily unique (many claims may well have the same reference).  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCreditorReference?: string;
    /**
     * The value of the claim as notified by the debtor.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimNotifiedValue?: number;
    /**
     * The value to be paid on the claim by the estate.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimClaimValue?: number;
    /**
     * Unknown, mandatory  
     * @type {boolean}
     * @memberof ClaimRecord
     */
    claimContractInterestYn?: boolean;
    /**
     * Unknown, mandatory 
     * @type {boolean}
     * @memberof ClaimRecord
     */
    claimClaimValueTbaYn?: boolean;
    /**
     * The IRD number of the claimant  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimIrdNumber?: string;
    /**
     * Does the claim include GST for the Official Assignee?  
     * @type {boolean}
     * @memberof ClaimRecord
     */
    claimIncludeOaGstYn?: boolean;
    /**
     * The calculated amount of GST that needs to be paid on the claim for the OA.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimOaGstAmount?: number;
    /**
     * The tax rate payable on a claim for wages.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimWagesTaxRate?: number;
    /**
     * Comments from the case officer(s) about the claim  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimComments?: string;
    /**
     * The date that the case officer was made aware of the claim??  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimItsAwareDate?: string;
    /**
     * The date the claim was lodged with ITS.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimLodgedWithItsDate?: string;
    /**
     * Unknown  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimAdmittedValue?: number;
    /**
     * If a claim was withdrawn (can only be don as the creditor) the reason for this action.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimWithdrawnReason?: string;
    /**
     * The user account that withdrew the claim.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimWithdrawnBy?: string;
    /**
     * The name of the user that withdrew the claim.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimWithdrawnByName?: string;
    /**
     * The data the creditor withdrew the claim.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimWithdrawnDate?: string;
    /**
     * The currency (code) if the claim. Loosely mapped to the ISO4217 country codes. Currently updated infrequently  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCurCode?: string;
    /**
     * Unknown  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimWtcId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimCttId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimKcrId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimOncId?: number;
    /**
     * Where claims are linked to multiple estates, both estate journals need to be kept in synch. This shows the last date that either claim was paid by either estate.  
     * @type {number}
     * @memberof ClaimRecord
     */
    claimJointPaidToDate?: number;
    /**
     * The tenancy or \"ringfence\" that the estate and claims belong to. Effectively an enumerator.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimRingfenceTypeCode?: ClaimRecord.ClaimRingfenceTypeCodeEnum;
    /**
     * Comment from insolvency officer when changing claim meta-data  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimReasonForChange?: string;
    /**
     * Boolean flag recoding if alert has been sent.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimLargeClmFiledAlertSent?: string;
    /**
     * Flag recording if a creditor report has been sent.  
     * @type {string}
     * @memberof ClaimRecord
     */
    claimCredRptSent?: string;
    /**
     * 
     * @type {Array&lt;Link&gt;}
     * @memberof ClaimRecord
     */
    links?: Array<Link>;
}

/**
 * @export
 * @namespace ClaimRecord
 */
export namespace ClaimRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimRingfenceTypeCodeEnum {
        ITS = <any> 'ITS',
        CP = <any> 'CP',
        IE = <any> 'IE'
    }
}

/**
 * Representation of generic error response
 * @export
 * @interface ClaimRegistration410
 */
export interface ClaimRegistration410 {
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistration410
     */
    errorMessage: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistration410
     */
    errorCode: string;
    /**
     * 
     * @type {Array&lt;string&gt;}
     * @memberof ClaimRegistration410
     */
    replacementResources: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistration410
     */
    help?: string;
}

/**
 * The claim application record potentially contains many claims so... claimRegistration is 1:n with claims. ___ **Business Rules** * *Rule 1:* This is an example ___ 
 * @export
 * @interface ClaimRegistrationRecord
 */
export interface ClaimRegistrationRecord {
    /**
     * The email address of the claimant. 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    creditorEmail?: string;
    /**
     * The primary identifier of a claim application.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    claimRegistrationId?: number;
    /**
     * The creditor's reference to be used for this claim application.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    creditorReference?: string;
    /**
     * Notification options - boolean preference for notification frequency. 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    notficationThreeMonthly?: boolean;
    /**
     * Notificationoptions - boolean preference for notification frequency. 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    notficationSixMonthly?: boolean;
    /**
     * Unknown 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    estateAdminComplete?: boolean;
    /**
     * Unknown 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    estateAdminReopened?: boolean;
    /**
     * Boolean used to determine the ultimate claim type & priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    outstandingAmountSecured?: boolean;
    /**
     * Notificationoptions - boolean preference for alert when a large claim is filed. 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    notificationFilingClaimLargeClaim?: boolean;
    /**
     * Adjudication and Applicationcosts awarded by the courts. Boolean used to determine the ultimate claim type & priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    adjAppCosts?: boolean;
    /**
     * Boolean used to determine the ultimate claim type & priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    wagesHolidayPay?: boolean;
    /**
     * Boolean used to determine the claim type & priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    unpaidTaxesLevies?: boolean;
    /**
     * Boolean used to determine the claim type and priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    outstandingAmountNotSecured?: boolean;
    /**
     * Boolean indicating whether the claim is subject to court action, used to determine the claim type and priority.  
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    subjectToCourtActionYn?: boolean;
    /**
     * The userID that created the claim application.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    createdBy?: string;
    /**
     * The version number of the claim application.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    version?: number;
    /**
     * If the claim is not filed by the actual claimant, the name of the person completing the application. Note: this seems redundant as we already know who is logged in.   Question for Jenny: Shouldn't it be name of actual claimant?  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    personEnteringApp?: string;
    /**
     * Unknown. Appears to be roles, But also free text. Hard to say where this comes from.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    designation?: string;
    /**
     * The amount claimed in relation to any adjudication / application costs for the estate  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    adjAppCostsAmountClaimed?: number;
    /**
     * The amount claimed, in words. Used as a manual checksum.   ___ * PROPOSED TO REMOVE THIS  ___ 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    adjAppCostsAmountClaimedInWords?: string;
    /**
     * Enum - how the evidence was provided. POS, FAX or DRM. Relating to Postal, Online attachment or Fax evidence.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    appEvidenceCode?: ClaimRegistrationRecord.AppEvidenceCodeEnum;
    /**
     * 
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    wagesAmountClaimed?: number;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    wagesAmountInWords?: string;
    /**
     * The start for the time period for which wages are claimed.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    wagesFromDate?: string;
    /**
     * The end date for the time period for which wages are claimed.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    wagesToDate?: string;
    /**
     * Description of the circumstances & particulars for the wages claim.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    wagesDescription?: string;
    /**
     * Enum:  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    wagesEvidenceCode?: ClaimRegistrationRecord.WagesEvidenceCodeEnum;
    /**
     * The amount claimed in relation to wages.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    taxesAmountClaimed?: number;
    /**
     * The amount claimed in relation to taxes owed, in words.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    taxesAmountInWords?: string;
    /**
     * The GST content of the taxes owed.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    taxesGstContent?: number;
    /**
     * The start date to which the tax claim relates.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    taxesFromDate?: string;
    /**
     * The end date to which the tax claim relates.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    taxesToDate?: string;
    /**
     * A description of the Tax claim.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    taxesDescription?: string;
    /**
     * Enum:  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    taxesEvidenceCode?: string;
    /**
     * The amount claimed for other types of debt.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    outAmountClaimed?: number;
    /**
     * T  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    outAmountInWords?: string;
    /**
     * The GST content of claims under other in the claim application.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    outGstContent?: number;
    /**
     * The start date for claims under other.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    outFromDate?: string;
    /**
     * The end date for claims under other.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    outToDate?: string;
    /**
     * Description of claims under other.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    outDescription?: string;
    /**
     * Enum  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    outEvidenceCode?: string;
    /**
     * The value of securities claimed as part of the application.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    secValue?: number;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    secValueInWords?: string;
    /**
     * Description of the securities claimed in the application.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    secDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    secEvidenceCode?: string;
    /**
     * Description of any court actions relation to any of the claims in the application.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    courtActionDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    coutActionCode?: string;
    /**
     * The link to the evidence of court action supplied with the application.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    courtActionEvidence?: string;
    /**
     * Boolean indicating whether the application includes court awarded interest or interest agreed in a contract. Mandatory . 
     * @type {boolean}
     * @memberof ClaimRegistrationRecord
     */
    claimIncludeInterestYn?: boolean;
    /**
     * Enum  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    interestEvidenceCode?: string;
    /**
     * Currency code for??  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    curCode?: string;
    /**
     * Currency code for claims relating to tax.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    curCodeTaxes?: string;
    /**
     * Currency code for amounts relating to securities claimed.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    curCodeSecurity?: string;
    /**
     * Currency code relating to amounts clamed under other.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    curCodeOutstanding?: string;
    /**
     * The unique contact ID relating to the account that created the claim.  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    cttId?: number;
    /**
     * The key creditor id - MAP AS A MULTIPLE TO ABOVE RECORD  
     * @type {number}
     * @memberof ClaimRegistrationRecord
     */
    orgId?: number;
    /**
     * The currency code for adjudicated or application costs.  
     * @type {string}
     * @memberof ClaimRegistrationRecord
     */
    codeApp?: string;
}

/**
 * @export
 * @namespace ClaimRegistrationRecord
 */
export namespace ClaimRegistrationRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum AppEvidenceCodeEnum {
        FAX = <any> 'FAX',
        POS = <any> 'POS',
        DRM = <any> 'DRM'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum WagesEvidenceCodeEnum {
        FAX = <any> 'FAX',
        POS = <any> 'POS',
        DRM = <any> 'DRM'
    }
}

/**
 * A single claim application search summary result
 * @export
 * @interface ClaimRegistrationSearchResult
 */
export interface ClaimRegistrationSearchResult {
    /**
     * Concatenation of estate number and estate name
     * @type {string}
     * @memberof ClaimRegistrationSearchResult
     */
    estate?: string;
    /**
     * Somewhat redundant: the name of the searcher. 
     * @type {string}
     * @memberof ClaimRegistrationSearchResult
     */
    creditorName?: string;
    /**
     * The name of the individual that created the claim.
     * @type {string}
     * @memberof ClaimRegistrationSearchResult
     */
    createdBy?: string;
    /**
     * The date the claim was created.
     * @type {string}
     * @memberof ClaimRegistrationSearchResult
     */
    createdOn?: string;
    /**
     * Boolean indicating whether the claim has a joint estate.
     * @type {boolean}
     * @memberof ClaimRegistrationSearchResult
     */
    jointEstate?: boolean;
    /**
     * Boolean indicating whether the claim is an SIO claim
     * @type {boolean}
     * @memberof ClaimRegistrationSearchResult
     */
    sio?: boolean;
    /**
     * 
     * @type {Link}
     * @memberof ClaimRegistrationSearchResult
     */
    links?: Link;
}

/**
 * Paged collection of the results returned for an oasis search for external users (creditors). 
 * @export
 * @interface ClaimRegistrationSearchResults
 */
export interface ClaimRegistrationSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof ClaimRegistrationSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;ClaimRegistrationSearchResult&gt;}
     * @memberof ClaimRegistrationSearchResults
     */
    items?: Array<ClaimRegistrationSearchResult>;
}

/**
 * @export
 * @namespace ClaimRegistrationSearchResults
 */
export namespace ClaimRegistrationSearchResults {
}

/**
 * A single claim search summary result
 * @export
 * @interface ClaimSearchResult
 */
export interface ClaimSearchResult {
    /**
     * The unique claim number.
     * @type {string}
     * @memberof ClaimSearchResult
     */
    claimNumber?: string;
    /**
     * The type of claim: used in the process to determine priority  
     * @type {string}
     * @memberof ClaimSearchResult
     */
    claimType?: string;
    /**
     * The name of the creditor. 
     * @type {string}
     * @memberof ClaimSearchResult
     */
    creditorName?: string;
    /**
     * Other names applicable to Individual.
     * @type {Array&lt;string&gt;}
     * @memberof ClaimSearchResult
     */
    created?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ClaimSearchResult
     */
    status?: ClaimSearchResult.StatusEnum;
    /**
     * 
     * @type {Link}
     * @memberof ClaimSearchResult
     */
    links?: Link;
}

/**
 * @export
 * @namespace ClaimSearchResult
 */
export namespace ClaimSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum StatusEnum {
        Potential = <any> 'potential',
        Received = <any> 'received',
        Suspended = <any> 'suspended',
        Admitted = <any> 'admitted',
        Duplicate = <any> 'duplicate',
        Vetted = <any> 'vetted',
        Error = <any> 'error',
        Withdrawn = <any> 'withdrawn',
        Rejected = <any> 'rejected'
    }
}

/**
 * Paged collection of the results returned for an oasis search. 
 * @export
 * @interface ClaimSearchResults
 */
export interface ClaimSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof ClaimSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;ClaimSearchResult&gt;}
     * @memberof ClaimSearchResults
     */
    items?: Array<ClaimSearchResult>;
}

/**
 * @export
 * @namespace ClaimSearchResults
 */
export namespace ClaimSearchResults {
}

/**
 * Metadata associated with a paginated collection
 * @export
 * @interface CollectionMetadata
 */
export interface CollectionMetadata {
    /**
     * The property the collection is sorted on. This is optional and may not be supported by all collections 
     * @type {string}
     * @memberof CollectionMetadata
     */
    sortBy?: string;
    /**
     * The page in the collection
     * @type {number}
     * @memberof CollectionMetadata
     */
    page: number;
    /**
     * The order the collection is sorted in. This is optional and may not be supported by all collections. Valid values are 'asc', 'desc' 
     * @type {string}
     * @memberof CollectionMetadata
     */
    sortOrder?: CollectionMetadata.SortOrderEnum;
    /**
     * The total number of results/items in this collection
     * @type {number}
     * @memberof CollectionMetadata
     */
    totalItems: number;
    /**
     * The number of results/items returned per page of results
     * @type {number}
     * @memberof CollectionMetadata
     */
    pageSize: number;
    /**
     * The list of links to navigate this collection
     * @type {Array&lt;Link&gt;}
     * @memberof CollectionMetadata
     */
    links: Array<Link>;
    /**
     * The number of pages in the collection given the current pageSize.  Note this will have the value ceiling(totalItems / pageSize). 
     * @type {number}
     * @memberof CollectionMetadata
     */
    totalPages: number;
}

/**
 * @export
 * @namespace CollectionMetadata
 */
export namespace CollectionMetadata {
    /**
     * @export
     * @enum {string}
     */
    export enum SortOrderEnum {
        Asc = <any> 'asc',
        Desc = <any> 'desc'
    }
}

/**
 * 
 * @export
 * @interface ContactName
 */
export interface ContactName {
    /**
     * 
     * @type {string}
     * @memberof ContactName
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactName
     */
    homePage?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactName
     */
    phone?: string;
}

/**
 * Records the payment details associated with a contact record. 
 * @export
 * @interface ContactPaymentDetailRecord
 */
export interface ContactPaymentDetailRecord {
    /**
     * 
     * @type {number}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailId?: number;
    /**
     * 
     * @type {number}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailCttId?: number;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailType?: string;
    /**
     * 
     * @type {number}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailCreated?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailCreatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailCreatedName?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailLastUpdated?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailLastUpdatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailLastUpdatedName?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailAccountName?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailBank?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailBranch?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailAccount?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailSuffix?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailEnteredBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailVerifiedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailVerified?: string;
    /**
     * 
     * @type {string}
     * @memberof ContactPaymentDetailRecord
     */
    contactPaymentDetailNotes?: string;
}

/**
 * Contact search summary results - intended to be served from SOLR - the graphs returned by the SOLR service as part of the typeahead search.  
 * @export
 * @interface ContactSearchResult
 */
export interface ContactSearchResult {
    /**
     * The unique identifier for a contact record.  
     * @type {number}
     * @memberof ContactSearchResult
     */
    contactId?: number;
    /**
     * The 'main' contact name.  
     * @type {number}
     * @memberof ContactSearchResult
     */
    contactName?: number;
    /**
     * The unique identifier for a contact record.  
     * @type {Array&lt;ContactName&gt;}
     * @memberof ContactSearchResult
     */
    contactAliases?: Array<ContactName>;
    /**
     * The 'main' contact address.
     * @type {number}
     * @memberof ContactSearchResult
     */
    contactAddress?: number;
    /**
     * Array of address records.
     * @type {Array&lt;Address&gt;}
     * @memberof ContactSearchResult
     */
    contactAddresses?: Array<Address>;
    /**
     * The date that the contact record was created.  
     * @type {string}
     * @memberof ContactSearchResult
     */
    created?: string;
    /**
     * The 'type' of contact indicating whther human  or not.
     * @type {string}
     * @memberof ContactSearchResult
     */
    type?: ContactSearchResult.TypeEnum;
    /**
     * Link to the actual contact record.
     * @type {Link}
     * @memberof ContactSearchResult
     */
    contactRecord?: Link;
}

/**
 * @export
 * @namespace ContactSearchResult
 */
export namespace ContactSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        Contact = <any> 'Contact',
        Branch = <any> 'Branch',
        Organisation = <any> 'Organisation'
    }
}

/**
 * Paged collection of the results returned for an oasis contacts search. 
 * @export
 * @interface ContactSearchResults
 */
export interface ContactSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof ContactSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;ContactSearchResult&gt;}
     * @memberof ContactSearchResults
     */
    searchResults?: Array<ContactSearchResult>;
}

/**
 * @export
 * @namespace ContactSearchResults
 */
export namespace ContactSearchResults {
}

/**
 * The creditor's view of a claim that has at some point been submitted/ received. 
 * @export
 * @interface CreditorClaimRecord
 */
export interface CreditorClaimRecord {
    /**
     * The primary key of the claim & claim id used by the estate  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimId?: number;
    /**
     * The account that created the claim - could be created from the initial statement of affairs, the insolvency officer or the creditor (or agent).  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimCreatedBy?: string;
    /**
     * The name of the person creating the claim  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimCreatedName?: string;
    /**
     * The type of claim: used in the process to determine priority  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimType?: CreditorClaimRecord.ClaimTypeEnum;
    /**
     * The date that the claim was created  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimCreated?: string;
    /**
     * The person (user account) that last update the claim record.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimLastUpdatedBy?: string;
    /**
     * The user name of the person who last update the claim.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimLastUpdatedName?: string;
    /**
     * The dateTime the claim was last updated.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimLastUpdated?: string;
    /**
     * The version (aka revision) of the claim.  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimVersion?: number;
    /**
     * The date on which the (current) status for the claim became current.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimStatusDate?: string;
    /**
     * The reference supplied by the creditor for the claim. Not necessarily unique (many claims may well have the same reference).  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimCreditorReference?: string;
    /**
     * The value of the claim as notified by the debtor.  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimNotifiedValue?: number;
    /**
     * The value to be paid on the claim by the estate.  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimClaimValue?: number;
    /**
     * Boolean indicating whether the claim is subject to court action, used to determine the claim type and priority.  
     * @type {boolean}
     * @memberof CreditorClaimRecord
     */
    subjectToCourtActionYn?: boolean;
    /**
     * Unknown  
     * @type {boolean}
     * @memberof CreditorClaimRecord
     */
    claimContractInterestYn?: boolean;
    /**
     * The IRD number of the claimant  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimIrdNumber?: string;
    /**
     * If a claim was withdrawn (can only be done as the creditor) the reason for this action.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimWithdrawnReason?: string;
    /**
     * The user account that withdrew the claim.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimWithdrawnBy?: string;
    /**
     * The name of the user that withdrew the claim.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimWithdrawnByName?: string;
    /**
     * The data the creditor withdrew the claim.  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimWithdrawnDate?: string;
    /**
     * The currency (code) if the claim. Loosely mapped to the ISO4217 country codes. Currently updated infrequently  
     * @type {string}
     * @memberof CreditorClaimRecord
     */
    claimCurCode?: string;
    /**
     * Unknown  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimWtcId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimCttId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimKcrId?: number;
    /**
     * Unknown  
     * @type {number}
     * @memberof CreditorClaimRecord
     */
    claimOncId?: number;
    /**
     * 
     * @type {Array&lt;Link&gt;}
     * @memberof CreditorClaimRecord
     */
    links?: Array<Link>;
}

/**
 * @export
 * @namespace CreditorClaimRecord
 */
export namespace CreditorClaimRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimTypeEnum {
        Bankrupt = <any> 'Bankrupt',
        ChattelSecurity = <any> 'Chattel Security',
        Contributory = <any> 'Contributory',
        DebentureInterest = <any> 'Debenture interest',
        DeferredDebtCreditor = <any> 'Deferred debt creditor',
        FixedDebentureHolder = <any> 'Fixed debenture holder',
        FloatingDebentureHolder = <any> 'Floating debenture holder',
        InstrumentByWayOfSecurity = <any> 'Instrument by way of security',
        Mortgage = <any> 'Mortgage',
        OfficialAssigneeBasicIncome = <any> 'Official Assignee basic income',
        OtherCreditorWithwithoutPOD = <any> 'Other creditor with/without POD',
        PetitioningCreditorsCosts = <any> 'Petitioning creditor\\'s costs',
        PreferentialUnsecuredCreditor = <any> 'Preferential unsecured creditor',
        SecurityInterest = <any> 'Security Interest',
        SupportingCreditorCosts = <any> 'Supporting Creditor Costs',
        UnsecuredCreditorWithPOD = <any> 'Unsecured creditor with POD'
    }
}

/**
 * A single claim search summary result
 * @export
 * @interface CreditorClaimSearchResult
 */
export interface CreditorClaimSearchResult {
    /**
     * Concatenation of estate number and estate name
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    estate?: string;
    /**
     * 
     * @type {Link}
     * @memberof CreditorClaimSearchResult
     */
    estates?: Link;
    /**
     * The creditor's reference 
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    reference?: string;
    /**
     * Somewhat redundant: the name of the searcher. 
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    creditorName?: string;
    /**
     * Somewhat redundant: the name of the searcher. 
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    claimType?: CreditorClaimSearchResult.ClaimTypeEnum;
    /**
     * The name of the individual that created the claim.
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    createdBy?: string;
    /**
     * The date the claim was created.
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    createdOn?: string;
    /**
     * Boolean indicating whether the claim has a joint estate.
     * @type {boolean}
     * @memberof CreditorClaimSearchResult
     */
    jointEstate?: boolean;
    /**
     * Boolean indicating whether the claim is an SIO claim
     * @type {boolean}
     * @memberof CreditorClaimSearchResult
     */
    sio?: boolean;
    /**
     * Dividends paid to date.
     * @type {number}
     * @memberof CreditorClaimSearchResult
     */
    dividend?: number;
    /**
     * The submitted value of the claim.
     * @type {number}
     * @memberof CreditorClaimSearchResult
     */
    claimValue?: number;
    /**
     * Claim value as entered by ITS
     * @type {number}
     * @memberof CreditorClaimSearchResult
     */
    admittedValue?: number;
    /**
     * 
     * @type {string}
     * @memberof CreditorClaimSearchResult
     */
    claimStatus?: CreditorClaimSearchResult.ClaimStatusEnum;
}

/**
 * @export
 * @namespace CreditorClaimSearchResult
 */
export namespace CreditorClaimSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimTypeEnum {
        Bankrupt = <any> 'Bankrupt',
        ChattelSecurity = <any> 'Chattel Security',
        Contributory = <any> 'Contributory',
        DebentureInterest = <any> 'Debenture interest',
        DeferredDebtCreditor = <any> 'Deferred debt creditor',
        FixedDebentureHolder = <any> 'Fixed debenture holder',
        FloatingDebentureHolder = <any> 'Floating debenture holder',
        InstrumentByWayOfSecurity = <any> 'Instrument by way of security',
        Mortgage = <any> 'Mortgage',
        OfficialAssigneeBasicIncome = <any> 'Official Assignee basic income',
        OtherCreditorWithwithoutPOD = <any> 'Other creditor with/without POD',
        PetitioningCreditorsCosts = <any> 'Petitioning creditor\\'s costs',
        PreferentialUnsecuredCreditor = <any> 'Preferential unsecured creditor',
        SecurityInterest = <any> 'Security Interest',
        SupportingCreditorCosts = <any> 'Supporting Creditor Costs',
        UnsecuredCreditorWithPOD = <any> 'Unsecured creditor with POD'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimStatusEnum {
        Admitted = <any> 'Admitted',
        Potential = <any> 'Potential',
        Received = <any> 'Received',
        Withdrawn = <any> 'Withdrawn',
        Rejected = <any> 'Rejected'
    }
}

/**
 * Paged collection of the results returned for an oasis search for external users (creditors). 
 * @export
 * @interface CreditorClaimSearchResults
 */
export interface CreditorClaimSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof CreditorClaimSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;CreditorClaimSearchResult&gt;}
     * @memberof CreditorClaimSearchResults
     */
    items?: Array<CreditorClaimSearchResult>;
}

/**
 * @export
 * @namespace CreditorClaimSearchResults
 */
export namespace CreditorClaimSearchResults {
}

/**
 * 
 * @export
 * @interface DataProtectionRuleRecord
 */
export interface DataProtectionRuleRecord {
    /**
     * The primary identifier for the rule
     * @type {number}
     * @memberof DataProtectionRuleRecord
     */
    ruleId?: number;
    /**
     * The primary identifier for the rule
     * @type {number}
     * @memberof DataProtectionRuleRecord
     */
    ruleCode?: number;
    /**
     * The type of restriction being enforced
     * @type {string}
     * @memberof DataProtectionRuleRecord
     */
    ruleType?: DataProtectionRuleRecord.RuleTypeEnum;
    /**
     * Human readable note on the business motivation for the rule.
     * @type {number}
     * @memberof DataProtectionRuleRecord
     */
    rulePurpose?: number;
    /**
     * The resource value to be restricted.
     * @type {string}
     * @memberof DataProtectionRuleRecord
     */
    targetResource?: string;
    /**
     * Human readable note on the operation of the rule.
     * @type {string}
     * @memberof DataProtectionRuleRecord
     */
    ruleDescription?: string;
    /**
     * The list of roles that are exluded from this rule.
     * @type {Array&lt;RoleRecord&gt;}
     * @memberof DataProtectionRuleRecord
     */
    excludedRoles?: Array<RoleRecord>;
    /**
     * The list of HATEOAS links to navigate from this resource.
     * @type {Array&lt;Link&gt;}
     * @memberof DataProtectionRuleRecord
     */
    links?: Array<Link>;
}

/**
 * @export
 * @namespace DataProtectionRuleRecord
 */
export namespace DataProtectionRuleRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum RuleTypeEnum {
        StateChangeRestriction = <any> 'State change restriction',
        FieldEditRestriction = <any> 'Field edit restriction',
        Other = <any> 'Other'
    }
}

/**
 * Returns a search result of organisations
 * @export
 * @interface DataProtectionRuleSearchResult
 */
export interface DataProtectionRuleSearchResult {
    /**
     * The primary identifier for the rule
     * @type {number}
     * @memberof DataProtectionRuleSearchResult
     */
    ruleId?: number;
    /**
     * The primary identifier for the rule
     * @type {number}
     * @memberof DataProtectionRuleSearchResult
     */
    ruleCode?: number;
    /**
     * The type of restriction being enforced
     * @type {string}
     * @memberof DataProtectionRuleSearchResult
     */
    ruleType?: DataProtectionRuleSearchResult.RuleTypeEnum;
    /**
     * Human readable note on the business motivation for the rule.
     * @type {number}
     * @memberof DataProtectionRuleSearchResult
     */
    rulePurpose?: number;
    /**
     * The primary identifier for the rule.
     * @type {string}
     * @memberof DataProtectionRuleSearchResult
     */
    targetResource?: string;
    /**
     * Human readable note on the operation of the rule.
     * @type {string}
     * @memberof DataProtectionRuleSearchResult
     */
    ruleDescription?: string;
}

/**
 * @export
 * @namespace DataProtectionRuleSearchResult
 */
export namespace DataProtectionRuleSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum RuleTypeEnum {
        StateChangeRestriction = <any> 'State change restriction',
        FieldEditRestriction = <any> 'Field edit restriction',
        Other = <any> 'Other'
    }
}

/**
 * Paged collection of the results returned for the search. 
 * @export
 * @interface DataProtectionRuleSearchResults
 */
export interface DataProtectionRuleSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof DataProtectionRuleSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;DataProtectionRuleSearchResult&gt;}
     * @memberof DataProtectionRuleSearchResults
     */
    items?: Array<DataProtectionRuleSearchResult>;
}

/**
 * @export
 * @namespace DataProtectionRuleSearchResults
 */
export namespace DataProtectionRuleSearchResults {
}

/**
 * Representation of generic error response
 * @export
 * @interface ErrorDescription
 */
export interface ErrorDescription {
    /**
     * 
     * @type {string}
     * @memberof ErrorDescription
     */
    errorMessage: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorDescription
     */
    errorCode: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorDescription
     */
    errorDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorDescription
     */
    help?: string;
}

/**
 * 
 * @export
 * @interface EstateDetail
 */
export interface EstateDetail {
    /**
     * 
     * @type {string}
     * @memberof EstateDetail
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EstateDetail
     */
    homePage?: string;
    /**
     * 
     * @type {string}
     * @memberof EstateDetail
     */
    phone?: string;
}

/**
 * PLACEHOLDER record for online file stuff which I dont have time for right now.
 * @export
 * @interface EvidenceRecord
 */
export interface EvidenceRecord {
    /**
     * Placeholder.
     * @type {any}
     * @memberof EvidenceRecord
     */
    binaryContent?: any;
}

/**
 * A single claim search summary result
 * @export
 * @interface EvidenceSearchResult
 */
export interface EvidenceSearchResult {
    /**
     * The Folio ID contactenated with the sequence
     * @type {string}
     * @memberof EvidenceSearchResult
     */
    item?: string;
    /**
     * Giraffe Bank Unsecured creditor with POD
     * @type {string}
     * @memberof EvidenceSearchResult
     */
    type?: EvidenceSearchResult.TypeEnum;
    /**
     * 
     * @type {EvidenceRecord}
     * @memberof EvidenceSearchResult
     */
    links?: EvidenceRecord;
}

/**
 * @export
 * @namespace EvidenceSearchResult
 */
export namespace EvidenceSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        Folio = <any> 'Folio',
        Claim = <any> 'Claim'
    }
}

/**
 * Paged collection of the results returned for an evidence search. 
 * @export
 * @interface EvidenceSearchResults
 */
export interface EvidenceSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof EvidenceSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;EvidenceSearchResult&gt;}
     * @memberof EvidenceSearchResults
     */
    items?: Array<EvidenceSearchResult>;
}

/**
 * @export
 * @namespace EvidenceSearchResults
 */
export namespace EvidenceSearchResults {
}

/**
 * Metadata about files stored in DRM against folios. --INCOMPLETE-- 
 * @export
 * @interface FileMetadataRecord
 */
export interface FileMetadataRecord {
    /**
     * 
     * @type {number}
     * @memberof FileMetadataRecord
     */
    fodId?: number;
    /**
     * 
     * @type {number}
     * @memberof FileMetadataRecord
     */
    fodFolId?: number;
    /**
     * 
     * @type {number}
     * @memberof FileMetadataRecord
     */
    fodDocumentStorageId?: number;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodFilename?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodLastUpdatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodLastUpdatedName?: string;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodLastUpdated?: string;
    /**
     * 
     * @type {number}
     * @memberof FileMetadataRecord
     */
    fodVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof FileMetadataRecord
     */
    fodLinkedFrom?: string;
    /**
     * 
     * @type {number}
     * @memberof FileMetadataRecord
     */
    fodLinkedFromFolioId?: number;
}

/**
 * 
 * @export
 * @interface FolioRecord
 */
export interface FolioRecord {
    /**
     * Boolean indicating whether the folio has been saved to linked estates.
     * @type {boolean}
     * @memberof FolioRecord
     */
    folioSavedToLinkedEstatesYn?: boolean;
    /**
     * The primary identifier of the folio record.
     * @type {number}
     * @memberof FolioRecord
     */
    folioId?: number;
    /**
     * The sub-number of the folio.
     * @type {number}
     * @memberof FolioRecord
     */
    foiolSequence?: number;
    /**
     * 
     * @type {string}
     * @memberof FolioRecord
     */
    folioType?: FolioRecord.FolioTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof FolioRecord
     */
    folioStatus?: FolioRecord.FolioStatusEnum;
    /**
     * The id of the online file
     * @type {number}
     * @memberof FolioRecord
     */
    foiolOlfId?: number;
    /**
     * Defaults to mirror document type, but may be edited by the user.
     * @type {string}
     * @memberof FolioRecord
     */
    folioOnlineDescription?: string;
    /**
     * Defaults to mirror document type, but may be edited by the user.
     * @type {string}
     * @memberof FolioRecord
     */
    folioReference?: string;
    /**
     * Control visibility for the purposes OIA requests
     * @type {string}
     * @memberof FolioRecord
     */
    folioProtectionStatus?: FolioRecord.FolioProtectionStatusEnum;
    /**
     * The version / revision number of the folio.
     * @type {number}
     * @memberof FolioRecord
     */
    folioVersion?: number;
    /**
     * The user account that last updated the record.
     * @type {string}
     * @memberof FolioRecord
     */
    folioLastUpdatedBy?: string;
    /**
     * The name of the user that last updated the folio.
     * @type {string}
     * @memberof FolioRecord
     */
    folLastUpdatedName?: string;
    /**
     * The datetime dd-mmm-yyyy hh:mm that the folio was last updated 
     * @type {Date}
     * @memberof FolioRecord
     */
    folioLastUpdated?: Date;
    /**
     * The datetime dd-mmm-yyyy hh:mm that the folio was created
     * @type {Date}
     * @memberof FolioRecord
     */
    folioCreated?: Date;
    /**
     * The username of the user that created the folio.
     * @type {string}
     * @memberof FolioRecord
     */
    folioCreatedBy?: string;
    /**
     * The name of the user that created the folio.
     * @type {string}
     * @memberof FolioRecord
     */
    folioCreatedName?: string;
    /**
     * Is required for Outbound correspondence but optional for Inbound and Internal
     * @type {number}
     * @memberof FolioRecord
     */
    folioDtpId?: number;
    /**
     * barcode - applicable to physical files
     * @type {number}
     * @memberof FolioRecord
     */
    folioBarcode?: number;
    /**
     * box number - applicable to physical files
     * @type {number}
     * @memberof FolioRecord
     */
    folioBoxNumber?: number;
    /**
     * ??
     * @type {number}
     * @memberof FolioRecord
     */
    folioAdId?: number;
    /**
     * Comments about the folio.
     * @type {string}
     * @memberof FolioRecord
     */
    folioComments?: string;
    /**
     * If marked as confidential, the reason for doing so.
     * @type {string}
     * @memberof FolioRecord
     */
    folConfidentialityReason?: string;
    /**
     * Whether the folio is confidential or not - could actually be a boolean
     * @type {string}
     * @memberof FolioRecord
     */
    folioConfidentialityStatus?: FolioRecord.FolioConfidentialityStatusEnum;
    /**
     * ??
     * @type {number}
     * @memberof FolioRecord
     */
    folioBliId?: number;
    /**
     * ??
     * @type {number}
     * @memberof FolioRecord
     */
    folioPreId?: number;
    /**
     * ??
     * @type {string}
     * @memberof FolioRecord
     */
    folioPrimaryCspSetCode?: string;
    /**
     * ??
     * @type {number}
     * @memberof FolioRecord
     */
    folioPflId?: number;
    /**
     * 
     * @type {string}
     * @memberof FolioRecord
     */
    folioSmsText?: string;
    /**
     * Date phisical files were destroyed
     * @type {string}
     * @memberof FolioRecord
     */
    folioDestructionDate?: string;
    /**
     * ??
     * @type {boolean}
     * @memberof FolioRecord
     */
    folioRecipientReceiverYn?: boolean;
    /**
     * ??
     * @type {boolean}
     * @memberof FolioRecord
     */
    folioRecipientCreditorYn?: boolean;
    /**
     * ??
     * @type {boolean}
     * @memberof FolioRecord
     */
    folioRecipientDbtShldrDirYn?: boolean;
}

/**
 * @export
 * @namespace FolioRecord
 */
export namespace FolioRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum FolioTypeEnum {
        OUTBOUND = <any> 'OUTBOUND',
        INTERNAL = <any> 'INTERNAL',
        INBOUND = <any> 'INBOUND'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum FolioStatusEnum {
        Ongoing = <any> 'Ongoing',
        Removed = <any> 'Removed',
        Pending = <any> 'Pending',
        Secure = <any> 'Secure'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum FolioProtectionStatusEnum {
        Discoverable = <any> 'Discoverable',
        Withheld = <any> 'Withheld'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum FolioConfidentialityStatusEnum {
        Discoverable = <any> 'Discoverable',
        Withheld = <any> 'Withheld'
    }
}

/**
 * A single claim search summary result
 * @export
 * @interface FolioSearchResult
 */
export interface FolioSearchResult {
    /**
     * The Folio ID contactenated with the sequence
     * @type {string}
     * @memberof FolioSearchResult
     */
    item?: string;
    /**
     * Giraffe Bank Unsecured creditor with POD
     * @type {string}
     * @memberof FolioSearchResult
     */
    type?: FolioSearchResult.TypeEnum;
    /**
     * 
     * @type {FolioRecord}
     * @memberof FolioSearchResult
     */
    links?: FolioRecord;
}

/**
 * @export
 * @namespace FolioSearchResult
 */
export namespace FolioSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum TypeEnum {
        Folio = <any> 'Folio',
        Claim = <any> 'Claim'
    }
}

/**
 * Paged collection of the results returned for an oasis search for external users (creditors). 
 * @export
 * @interface FolioSearchResults
 */
export interface FolioSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof FolioSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;FolioSearchResult&gt;}
     * @memberof FolioSearchResults
     */
    items?: Array<FolioSearchResult>;
}

/**
 * @export
 * @namespace FolioSearchResults
 */
export namespace FolioSearchResults {
}

/**
 * Contact resource. Essentially intended to be a 'traditional' CRM implementation of contact. So a contact is a person in your nieghbourhood, in your neighbourhood, in your neigh-bour-hood. Or a company. 
 * @export
 * @interface FullContactRecord
 */
export interface FullContactRecord {
    /**
     * Boolean indicating unknown? 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    mainContactYn?: boolean;
    /**
     * Flag to indicate whether the contact wished to recieve a creditor report (if applicable) **Candidate for refactor into preferences**  
     * @type {boolean}
     * @memberof FullContactRecord
     */
    emailCreditorReprt?: boolean;
    /**
     * The unique identifier for a contact record.  
     * @type {number}
     * @memberof FullContactRecord
     */
    contactId?: number;
    /**
     * The type of contact  
     * @type {string}
     * @memberof FullContactRecord
     */
    contactType?: FullContactRecord.ContactTypeEnum;
    /**
     * Link to the key creditors resource: essentially simply used as a  **Candidate for refactoring** - key creditors table is just a bunch of booleans for bank, credit card, trusted, locked in and secured. 
     * @type {number}
     * @memberof FullContactRecord
     */
    keyCreditorId?: number;
    /**
     * **Candidate for refactor: Probably redundant.** May \"eliminate\" in favour of the new audit capability. The only issue here is that we need to keep populating the oracle schema so as not to break trust accouting. 
     * @type {number}
     * @memberof FullContactRecord
     */
    contactVersion?: number;
    /**
     * Date the  contact record was created. 
     * @type {string}
     * @memberof FullContactRecord
     */
    createdDate?: string;
    /**
     * The unique user_account name that created the contact 
     * @type {string}
     * @memberof FullContactRecord
     */
    createdBy?: string;
    /**
     * The full name of the user that created the contact record.  
     * @type {string}
     * @memberof FullContactRecord
     */
    createdName?: string;
    /**
     * The date the contact record was last updated. 
     * @type {string}
     * @memberof FullContactRecord
     */
    lastUpdatedDate?: string;
    /**
     * The username of the user that last updated the contact record. **Candidate for refactor** 
     * @type {string}
     * @memberof FullContactRecord
     */
    lastUpdatedBy?: string;
    /**
     * The full name of the user that last updated the contact record.   **Candidate for refactor** 
     * @type {string}
     * @memberof FullContactRecord
     */
    lastUpdatedName?: string;
    /**
     * Is an address known for this contact? 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    addressKnown?: boolean;
    /**
     * Is the contact in use? **Not sure how this is determined**   
     * @type {boolean}
     * @memberof FullContactRecord
     */
    inUse?: boolean;
    /**
     * Flag indicating whether address may appear on public registers and search results. 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    withholdAddress?: boolean;
    /**
     * Flag indicating whether higher priviledge level is needed to modify this record. 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    protectFromEdit?: boolean;
    /**
     * Flag indicating whether the contact is knwn to be deceased. 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    isDeceased?: boolean;
    /**
     * Date of birth if known.     
     * @type {string}
     * @memberof FullContactRecord
     */
    dateOfBirth?: string;
    /**
     * New Zealand driver's licence number if known. 
     * @type {string}
     * @memberof FullContactRecord
     */
    nzDriversLicence?: string;
    /**
     * **To be dreprecated** 
     * @type {boolean}
     * @memberof FullContactRecord
     */
    enableBranchCreation?: boolean;
    /**
     * **To be deprecated** 
     * @type {string}
     * @memberof FullContactRecord
     */
    companyNumber?: string;
    /**
     * New Zealand Business Number. If the contact is a company and if the NZBN is known. 
     * @type {number}
     * @memberof FullContactRecord
     */
    nzbn?: number;
    /**
     * **Refactor: Could import this from NZBN or alternatively link directly to the resource on the NZBN web service** 
     * @type {string}
     * @memberof FullContactRecord
     */
    incorporationDate?: string;
    /**
     * The full name of the contact. **Refactor** 
     * @type {string}
     * @memberof FullContactRecord
     */
    contactName?: string;
    /**
     * Notes about the contact. 
     * @type {string}
     * @memberof FullContactRecord
     */
    notes?: string;
    /**
     * 
     * @type {Array&lt;ContactName&gt;}
     * @memberof FullContactRecord
     */
    alternateNames?: Array<ContactName>;
    /**
     * 
     * @type {Array&lt;Link&gt;}
     * @memberof FullContactRecord
     */
    links?: Array<Link>;
}

/**
 * @export
 * @namespace FullContactRecord
 */
export namespace FullContactRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum ContactTypeEnum {
        Person = <any> 'Person',
        Organisation = <any> 'Organisation'
    }
}

/**
 * Returns a search result of organisations
 * @export
 * @interface IdentitySearchResult
 */
export interface IdentitySearchResult {
    /**
     * The human redable name of the (ultimate) IdP - all federated via WSO2 Identity Server.
     * @type {string}
     * @memberof IdentitySearchResult
     */
    identityProviderName?: IdentitySearchResult.IdentityProviderNameEnum;
    /**
     * The name of the person (provided by the IdP)
     * @type {string}
     * @memberof IdentitySearchResult
     */
    accountName?: string;
    /**
     * The email address associted with the identity
     * @type {string}
     * @memberof IdentitySearchResult
     */
    emailAddress?: string;
    /**
     * The \"Medsec User Id\" that this identity is known by in WSO2 identity server and the OASIS security schema (along with its associated tokens).
     * @type {string}
     * @memberof IdentitySearchResult
     */
    muid?: string;
}

/**
 * @export
 * @namespace IdentitySearchResult
 */
export namespace IdentitySearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum IdentityProviderNameEnum {
        RealMe = <any> 'RealMe',
        ActiveDirectory = <any> 'Active Directory',
        Facebook = <any> 'Facebook',
        Microsoft = <any> 'Microsoft',
        Google = <any> 'Google'
    }
}

/**
 * Paged collection of the results returned for the search. 
 * @export
 * @interface IdentitySearchResults
 */
export interface IdentitySearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof IdentitySearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;IdentitySearchResult&gt;}
     * @memberof IdentitySearchResults
     */
    items?: Array<IdentitySearchResult>;
}

/**
 * @export
 * @namespace IdentitySearchResults
 */
export namespace IdentitySearchResults {
}

/**
 * JSON representation of the ATOM pub link format
 * @export
 * @interface Link
 */
export interface Link {
    /**
     * The rel attribute specifies the relationship between the current resource and the linked resource. 
     * @type {string}
     * @memberof Link
     */
    rel: string;
    /**
     * Specifies the URL of the resource the link goes to
     * @type {string}
     * @memberof Link
     */
    href: string;
    /**
     * Specifies the HTTP method used
     * @type {string}
     * @memberof Link
     */
    method: Link.MethodEnum;
}

/**
 * @export
 * @namespace Link
 */
export namespace Link {
    /**
     * @export
     * @enum {string}
     */
    export enum MethodEnum {
        HEAD = <any> 'HEAD',
        GET = <any> 'GET',
        PUT = <any> 'PUT',
        POST = <any> 'POST',
        PATCH = <any> 'PATCH',
        DELETE = <any> 'DELETE'
    }
}

/**
 * The subset of the claim record that may be modified / maintained. 
 * @export
 * @interface MaintainClaimRecord
 */
export interface MaintainClaimRecord {
    /**
     * Transaction code.  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimTcId?: MaintainClaimRecord.ClaimTcIdEnum;
    /**
     * The type of claim: used in the process to determine priority.  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimType?: MaintainClaimRecord.ClaimTypeEnum;
    /**
     * Unknown  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimManualSourceCode?: string;
    /**
     * Boolean indicating whether claim is being appealed in the courts.  
     * @type {boolean}
     * @memberof MaintainClaimRecord
     */
    claimUnderAppeal?: boolean;
    /**
     * The (payment) priority of the claim (once claim becomes part of the estate).  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimPriority?: number;
    /**
     * The reference supplied by the creditor for the claim. Not necessarily unique (many claims may well have the same reference).  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimCreditorReference?: string;
    /**
     * The value of the claim as notified by the debtor.  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimNotifiedValue?: number;
    /**
     * The value to be paid on the claim by the estate.  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimClaimValue?: number;
    /**
     * Unknown  
     * @type {boolean}
     * @memberof MaintainClaimRecord
     */
    claimContractInterest?: boolean;
    /**
     * Unknown  
     * @type {boolean}
     * @memberof MaintainClaimRecord
     */
    claimClaimValueTba?: boolean;
    /**
     * The IRD number of the claimant  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimIrdNumber?: string;
    /**
     * Does the claim include GST for the Official Assignee?  
     * @type {boolean}
     * @memberof MaintainClaimRecord
     */
    claimIncludeOaGst?: boolean;
    /**
     * The calculated amount of GST that needs to be paid on the claim for the OA.  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimOaGstAmount?: number;
    /**
     * The tax rate payable on a claim for wages.  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimWagesTaxRate?: number;
    /**
     * Comments from the case officer(s) about the claim  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimComments?: string;
    /**
     * The date that the case officer was made aware of the claim??  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimItsAwareDate?: string;
    /**
     * The date the claim was lodged with ITS.  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimLodgedWithItsDate?: string;
    /**
     * Treat this as an enumerator.  The currency (code) of the claim. Loosely mapped to the ISO4217 country codes. Currently updated infrequently.   **Suggested UI implementation:** Implement as typeahead search. Big lists of enums suck. 
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimCurCode?: string;
    /**
     * Wages tax code unique id  * NOTE: There are 0 rows in the database where this is not null. 
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimWtcId?: number;
    /**
     * The unique contact id of the creditor (org or person).  
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimCttId?: number;
    /**
     * Key creditor id. 
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimKcrId?: number;
    /**
     * \"Online Claim Id\" a.k.a The Claim Application Id 
     * @type {number}
     * @memberof MaintainClaimRecord
     */
    claimRegistrationId?: number;
    /**
     * Comment from insolvency officer when changing claim meta-data  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimReasonForChange?: string;
    /**
     * Boolean flag recoding if alert has been sent.  
     * @type {boolean}
     * @memberof MaintainClaimRecord
     */
    claimLargeClmFiledAlertSent?: boolean;
    /**
     * Flag recording if a creditor report has been sent.  
     * @type {string}
     * @memberof MaintainClaimRecord
     */
    claimCredRptSent?: string;
    /**
     * 
     * @type {Array&lt;Link&gt;}
     * @memberof MaintainClaimRecord
     */
    links?: Array<Link>;
}

/**
 * @export
 * @namespace MaintainClaimRecord
 */
export namespace MaintainClaimRecord {
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimTcIdEnum {
        ACCEarnerPremium = <any> 'ACC Earner Premium',
        DividendToUnsecuredCreditors = <any> 'Dividend to unsecured creditors',
        FringeBenefitTax = <any> 'Fringe Benefit Tax',
        FundsPaidToStakeholder = <any> 'Funds paid to stakeholder'
    }
    /**
     * @export
     * @enum {string}
     */
    export enum ClaimTypeEnum {
        Bankrupt = <any> 'Bankrupt',
        ChattelSecurity = <any> 'Chattel Security',
        Contributory = <any> 'Contributory',
        DebentureInterest = <any> 'Debenture interest',
        DeferredDebtCreditor = <any> 'Deferred debt creditor',
        FixedDebentureHolder = <any> 'Fixed debenture holder',
        FloatingDebentureHolder = <any> 'Floating debenture holder',
        InstrumentByWayOfSecurity = <any> 'Instrument by way of security',
        Mortgage = <any> 'Mortgage',
        OfficialAssigneeBasicIncome = <any> 'Official Assignee basic income',
        OtherCreditorWithwithoutPOD = <any> 'Other creditor with/without POD',
        PetitioningCreditorsCosts = <any> 'Petitioning creditor\\'s costs',
        PreferentialUnsecuredCreditor = <any> 'Preferential unsecured creditor',
        SecurityInterest = <any> 'Security Interest',
        SupportingCreditorCosts = <any> 'Supporting Creditor Costs',
        UnsecuredCreditorWithPOD = <any> 'Unsecured creditor with POD'
    }
}

/**
 * Records the payment details associated with a contact record. 
 * @export
 * @interface NameRecord
 */
export interface NameRecord {
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    createdName?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    lastUpdated?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    lastUpdatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    lastUpdatedName?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    validFrom?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    typeCode?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    validTo?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    middleNames?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    titleCode?: string;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    organisationName?: string;
    /**
     * 
     * @type {number}
     * @memberof NameRecord
     */
    nameId?: number;
    /**
     * 
     * @type {number}
     * @memberof NameRecord
     */
    contactId?: number;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof NameRecord
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof NameRecord
     */
    created?: string;
}

/**
 * Returns a search result of organisations
 * @export
 * @interface NameSearchResult
 */
export interface NameSearchResult {
    /**
     * The human redable name of the (ultimate) IdP - all federated via WSO2 Identity Server.
     * @type {string}
     * @memberof NameSearchResult
     */
    identityProviderName?: NameSearchResult.IdentityProviderNameEnum;
    /**
     * The name of the person (provided by the IdP)
     * @type {string}
     * @memberof NameSearchResult
     */
    accountName?: string;
    /**
     * The email address associted with the identity
     * @type {string}
     * @memberof NameSearchResult
     */
    emailAddress?: string;
    /**
     * The \"Medsec User Id\" that this identity is known by in WSO2 identity server and the OASIS security schema (along with its associated tokens).
     * @type {string}
     * @memberof NameSearchResult
     */
    muid?: string;
}

/**
 * @export
 * @namespace NameSearchResult
 */
export namespace NameSearchResult {
    /**
     * @export
     * @enum {string}
     */
    export enum IdentityProviderNameEnum {
        RealMe = <any> 'RealMe',
        ActiveDirectory = <any> 'Active Directory',
        Facebook = <any> 'Facebook',
        Microsoft = <any> 'Microsoft',
        Google = <any> 'Google'
    }
}

/**
 * Paged collection of the results returned for a name search. 
 * @export
 * @interface NameSearchResults
 */
export interface NameSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof NameSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;NameSearchResult&gt;}
     * @memberof NameSearchResults
     */
    items?: Array<NameSearchResult>;
}

/**
 * @export
 * @namespace NameSearchResults
 */
export namespace NameSearchResults {
}

/**
 * Organisation makes use of the key creditor construct. 
 * @export
 * @interface OrganisationRecord
 */
export interface OrganisationRecord {
    /**
     * Boolean indicating whether the key creditor is a bank. 
     * @type {boolean}
     * @memberof OrganisationRecord
     */
    bankYn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationRecord
     */
    creditCardYn?: boolean;
    /**
     * Mandatory
     * @type {boolean}
     * @memberof OrganisationRecord
     */
    inUseYn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationRecord
     */
    securedYn?: boolean;
    /**
     * 
     * @type {number}
     * @memberof OrganisationRecord
     */
    organisaionId?: number;
    /**
     * 
     * @type {number}
     * @memberof OrganisationRecord
     */
    version?: number;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    createdName?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    lastUpdated?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    lastUpdatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    lastUpdatedName?: string;
    /**
     * 
     * @type {number}
     * @memberof OrganisationRecord
     */
    cttId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationRecord
     */
    trustedYn?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    lockedYn?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationRecord
     */
    comment?: string;
}

/**
 * Returns a search result of organisations
 * @export
 * @interface OrganisationSearchResult
 */
export interface OrganisationSearchResult {
    /**
     * The unique claim number.
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    organisationId?: string;
    /**
     * The date that the organisation was created
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    organisaitonCreatedDate?: string;
    /**
     * The name of the person that created the organisation record. 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    createdName?: string;
    /**
     * Unknown
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    cneOrganisationName?: string;
    /**
     * Boolean indicating whether the organisation is trusted or not.
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    organisationTrustedYn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    bankYn?: boolean;
    /**
     * mandatory
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    securedYn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    creditCardYn?: boolean;
    /**
     * mandatory
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    inUseYn?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationSearchResult
     */
    mainContactYn?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    trusted?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    bank?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    secured?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    ceditCard?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    inUse?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationSearchResult
     */
    mainContact?: string;
    /**
     * 
     * @type {Link}
     * @memberof OrganisationSearchResult
     */
    organisationRecord?: Link;
}

/**
 * Paged collection of the results returned  
 * @export
 * @interface OrganisationSearchResults
 */
export interface OrganisationSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof OrganisationSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;OrganisationSearchResult&gt;}
     * @memberof OrganisationSearchResults
     */
    items?: Array<OrganisationSearchResult>;
}

/**
 * @export
 * @namespace OrganisationSearchResults
 */
export namespace OrganisationSearchResults {
}

/**
 * This is a placeholder object for things that we wish to display is HATEOAS lin ks but are not within the scope of the current drop.
 * @export
 * @interface PlaceHolderModel
 */
export interface PlaceHolderModel {
    /**
     * This is a placeholder object for things that we wish to display is HATEOAS lin ks but are not within the scope of the current drop. 
     * @type {string}
     * @memberof PlaceHolderModel
     */
    placeholderName?: string;
}

/**
 * 
 * @export
 * @interface RoleRecord
 */
export interface RoleRecord {
    /**
     * The primary identifier for the role
     * @type {number}
     * @memberof RoleRecord
     */
    roleId?: number;
    /**
     * Short role code
     * @type {string}
     * @memberof RoleRecord
     */
    roleCode?: string;
    /**
     * The human friendly description of the role
     * @type {string}
     * @memberof RoleRecord
     */
    roleDescription?: string;
    /**
     * 
     * @type {Array&lt;Link&gt;}
     * @memberof RoleRecord
     */
    links?: Array<Link>;
}

/**
 * Returns a search result of organisations
 * @export
 * @interface RoleSearchResult
 */
export interface RoleSearchResult {
    /**
     * The primary identifier for the role
     * @type {number}
     * @memberof RoleSearchResult
     */
    roleId?: number;
    /**
     * Short role code
     * @type {string}
     * @memberof RoleSearchResult
     */
    roleCode?: string;
    /**
     * The human friendly description of the role
     * @type {string}
     * @memberof RoleSearchResult
     */
    roleDescription?: string;
}

/**
 * Paged collection of the results returned for the search. 
 * @export
 * @interface RoleSearchResults
 */
export interface RoleSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof RoleSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;RoleSearchResult&gt;}
     * @memberof RoleSearchResults
     */
    items?: Array<RoleSearchResult>;
}

/**
 * @export
 * @namespace RoleSearchResults
 */
export namespace RoleSearchResults {
}

/**
 * 
 * @export
 * @interface UserGroupRecord
 */
export interface UserGroupRecord {
    /**
     * The list of links to navigate this collection
     * @type {Array&lt;RoleRecord&gt;}
     * @memberof UserGroupRecord
     */
    roles?: Array<RoleRecord>;
    /**
     * 
     * @type {number}
     * @memberof UserGroupRecord
     */
    userGroupId?: number;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    lastUpdated?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    lastUpdatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    lastUpdatedName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    code?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserGroupRecord
     */
    lockedYn?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserGroupRecord
     */
    description?: string;
}

/**
 * Returns a search result of organisations
 * @export
 * @interface UserGroupSearchResult
 */
export interface UserGroupSearchResult {
    /**
     * 
     * @type {string}
     * @memberof UserGroupSearchResult
     */
    code?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserGroupSearchResult
     */
    lockedYn?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserGroupSearchResult
     */
    description?: string;
    /**
     * 
     * @type {Link}
     * @memberof UserGroupSearchResult
     */
    userGroupRecord?: Link;
}

/**
 * Paged collection of the results returned  
 * @export
 * @interface UserGroupSearchResults
 */
export interface UserGroupSearchResults extends CollectionMetadata {
    /**
     * The search criteria
     * @type {string}
     * @memberof UserGroupSearchResults
     */
    searchCriteria?: string;
    /**
     * The array of results
     * @type {Array&lt;UserGroupSearchResult&gt;}
     * @memberof UserGroupSearchResults
     */
    items?: Array<UserGroupSearchResult>;
}

/**
 * @export
 * @namespace UserGroupSearchResults
 */
export namespace UserGroupSearchResults {
}


/**
 * AuthorisationApi - fetch parameter creator
 * @export
 */
export const AuthorisationApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Rule record returned** |    | 
         * @summary Creates a business rule record
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDataProtectionRule(updatedDataProtectionRule: DataProtectionRuleRecord, options: any = {}): FetchArgs {
            // verify required parameter 'updatedDataProtectionRule' is not null or undefined
            if (updatedDataProtectionRule === null || updatedDataProtectionRule === undefined) {
                throw new RequiredError('updatedDataProtectionRule','Required parameter updatedDataProtectionRule was null or undefined when calling createDataProtectionRule.');
            }
            const localVarPath = `/data-protection-rules/new`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedDataProtectionRule || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRole(roleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'roleId' is not null or undefined
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId','Required parameter roleId was null or undefined when calling getRole.');
            }
            const localVarPath = `/roles/{role_id}`
                .replace(`{${"role_id"}}`, encodeURIComponent(String(roleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRule(ruleId: string, options: any = {}): FetchArgs {
            // verify required parameter 'ruleId' is not null or undefined
            if (ruleId === null || ruleId === undefined) {
                throw new RequiredError('ruleId','Required parameter ruleId was null or undefined when calling getRule.');
            }
            const localVarPath = `/data-protection-rules/{rule_id}`
                .replace(`{${"rule_id"}}`, encodeURIComponent(String(ruleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: user group record returned** |    | 
         * @summary Gets a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserGroup(userGroupId: string, options: any = {}): FetchArgs {
            // verify required parameter 'userGroupId' is not null or undefined
            if (userGroupId === null || userGroupId === undefined) {
                throw new RequiredError('userGroupId','Required parameter userGroupId was null or undefined when calling getUserGroup.');
            }
            const localVarPath = `/user-groups/{user_group_id}`
                .replace(`{${"user_group_id"}}`, encodeURIComponent(String(userGroupId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Modifies a business rule record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainDataProtectionRule(ruleId: string, updatedDataProtectionRule: DataProtectionRuleRecord, options: any = {}): FetchArgs {
            // verify required parameter 'ruleId' is not null or undefined
            if (ruleId === null || ruleId === undefined) {
                throw new RequiredError('ruleId','Required parameter ruleId was null or undefined when calling maintainDataProtectionRule.');
            }
            // verify required parameter 'updatedDataProtectionRule' is not null or undefined
            if (updatedDataProtectionRule === null || updatedDataProtectionRule === undefined) {
                throw new RequiredError('updatedDataProtectionRule','Required parameter updatedDataProtectionRule was null or undefined when calling maintainDataProtectionRule.');
            }
            const localVarPath = `/data-protection-rules/{rule_id}/maintain`
                .replace(`{${"rule_id"}}`, encodeURIComponent(String(ruleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedDataProtectionRule || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {RoleRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRole(roleId: string, updatedRole: RoleRecord, options: any = {}): FetchArgs {
            // verify required parameter 'roleId' is not null or undefined
            if (roleId === null || roleId === undefined) {
                throw new RequiredError('roleId','Required parameter roleId was null or undefined when calling maintainRole.');
            }
            // verify required parameter 'updatedRole' is not null or undefined
            if (updatedRole === null || updatedRole === undefined) {
                throw new RequiredError('updatedRole','Required parameter updatedRole was null or undefined when calling maintainRole.');
            }
            const localVarPath = `/roles/{role_id}/maintain`
                .replace(`{${"role_id"}}`, encodeURIComponent(String(roleId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedRole || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: User group record returned** |    | 
         * @summary Modifies a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRuleGroup(userGroupId: string, updatedDataProtectionRule: UserGroupRecord, options: any = {}): FetchArgs {
            // verify required parameter 'userGroupId' is not null or undefined
            if (userGroupId === null || userGroupId === undefined) {
                throw new RequiredError('userGroupId','Required parameter userGroupId was null or undefined when calling maintainRuleGroup.');
            }
            // verify required parameter 'updatedDataProtectionRule' is not null or undefined
            if (updatedDataProtectionRule === null || updatedDataProtectionRule === undefined) {
                throw new RequiredError('updatedDataProtectionRule','Required parameter updatedDataProtectionRule was null or undefined when calling maintainRuleGroup.');
            }
            const localVarPath = `/user-groups/{user_group_id}/maintain`
                .replace(`{${"user_group_id"}}`, encodeURIComponent(String(userGroupId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedDataProtectionRule || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Creeas a new role record
         * @param {RoleRecord} roleRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRole(roleRecord: RoleRecord, options: any = {}): FetchArgs {
            // verify required parameter 'roleRecord' is not null or undefined
            if (roleRecord === null || roleRecord === undefined) {
                throw new RequiredError('roleRecord','Required parameter roleRecord was null or undefined when calling newRole.');
            }
            const localVarPath = `/roles/new`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(roleRecord || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: New user group** |    | 
         * @summary Creates a new a user group record
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRuleGroup(updatedDataProtectionRule: UserGroupRecord, options: any = {}): FetchArgs {
            // verify required parameter 'updatedDataProtectionRule' is not null or undefined
            if (updatedDataProtectionRule === null || updatedDataProtectionRule === undefined) {
                throw new RequiredError('updatedDataProtectionRule','Required parameter updatedDataProtectionRule was null or undefined when calling newRuleGroup.');
            }
            const localVarPath = `/user-groups/new`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedDataProtectionRule || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRoles(roleCode: string, options: any = {}): FetchArgs {
            // verify required parameter 'roleCode' is not null or undefined
            if (roleCode === null || roleCode === undefined) {
                throw new RequiredError('roleCode','Required parameter roleCode was null or undefined when calling searchRoles.');
            }
            const localVarPath = `/roles/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (roleCode !== undefined) {
                localVarQueryParameter['role_code'] = roleCode;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rules.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRules(roleCode: string, options: any = {}): FetchArgs {
            // verify required parameter 'roleCode' is not null or undefined
            if (roleCode === null || roleCode === undefined) {
                throw new RequiredError('roleCode','Required parameter roleCode was null or undefined when calling searchRules.');
            }
            const localVarPath = `/data-protection-rules/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (roleCode !== undefined) {
                localVarQueryParameter['role_code'] = roleCode;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rule groups.
         * @param {string} groupCode *  
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchUserGroups(groupCode: string, options: any = {}): FetchArgs {
            // verify required parameter 'groupCode' is not null or undefined
            if (groupCode === null || groupCode === undefined) {
                throw new RequiredError('groupCode','Required parameter groupCode was null or undefined when calling searchUserGroups.');
            }
            const localVarPath = `/user-groups/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (groupCode !== undefined) {
                localVarQueryParameter['group_code'] = groupCode;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AuthorisationApi - functional programming interface
 * @export
 */
export const AuthorisationApiFp = function(configuration?: Configuration) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Rule record returned** |    | 
         * @summary Creates a business rule record
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDataProtectionRule(updatedDataProtectionRule: DataProtectionRuleRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DataProtectionRuleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).createDataProtectionRule(updatedDataProtectionRule, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRole(roleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).getRole(roleId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRule(ruleId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DataProtectionRuleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).getRule(ruleId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: user group record returned** |    | 
         * @summary Gets a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserGroup(userGroupId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<UserGroupRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).getUserGroup(userGroupId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Modifies a business rule record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainDataProtectionRule(ruleId: string, updatedDataProtectionRule: DataProtectionRuleRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DataProtectionRuleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).maintainDataProtectionRule(ruleId, updatedDataProtectionRule, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {RoleRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRole(roleId: string, updatedRole: RoleRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).maintainRole(roleId, updatedRole, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: User group record returned** |    | 
         * @summary Modifies a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRuleGroup(userGroupId: string, updatedDataProtectionRule: UserGroupRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<UserGroupRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).maintainRuleGroup(userGroupId, updatedDataProtectionRule, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Creeas a new role record
         * @param {RoleRecord} roleRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRole(roleRecord: RoleRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).newRole(roleRecord, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: New user group** |    | 
         * @summary Creates a new a user group record
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRuleGroup(updatedDataProtectionRule: UserGroupRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<UserGroupRecord> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).newRuleGroup(updatedDataProtectionRule, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRoles(roleCode: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleSearchResults> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).searchRoles(roleCode, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rules.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRules(roleCode: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DataProtectionRuleSearchResults> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).searchRules(roleCode, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rule groups.
         * @param {string} groupCode *  
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchUserGroups(groupCode: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<UserGroupSearchResults> {
            const localVarFetchArgs = AuthorisationApiFetchParamCreator(configuration).searchUserGroups(groupCode, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * AuthorisationApi - factory interface
 * @export
 */
export const AuthorisationApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Rule record returned** |    | 
         * @summary Creates a business rule record
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createDataProtectionRule(updatedDataProtectionRule: DataProtectionRuleRecord, options?: any) {
            return AuthorisationApiFp(configuration).createDataProtectionRule(updatedDataProtectionRule, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRole(roleId: string, options?: any) {
            return AuthorisationApiFp(configuration).getRole(roleId, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRule(ruleId: string, options?: any) {
            return AuthorisationApiFp(configuration).getRule(ruleId, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: user group record returned** |    | 
         * @summary Gets a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUserGroup(userGroupId: string, options?: any) {
            return AuthorisationApiFp(configuration).getUserGroup(userGroupId, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Modifies a business rule record
         * @param {string} ruleId * The unique identifier for the role. 
         * @param {DataProtectionRuleRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainDataProtectionRule(ruleId: string, updatedDataProtectionRule: DataProtectionRuleRecord, options?: any) {
            return AuthorisationApiFp(configuration).maintainDataProtectionRule(ruleId, updatedDataProtectionRule, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Gets a role record
         * @param {string} roleId * The unique identifier for the role. 
         * @param {RoleRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRole(roleId: string, updatedRole: RoleRecord, options?: any) {
            return AuthorisationApiFp(configuration).maintainRole(roleId, updatedRole, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: User group record returned** |    | 
         * @summary Modifies a user group record
         * @param {string} userGroupId * The unique identifier for the role. 
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainRuleGroup(userGroupId: string, updatedDataProtectionRule: UserGroupRecord, options?: any) {
            return AuthorisationApiFp(configuration).maintainRuleGroup(userGroupId, updatedDataProtectionRule, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
         * @summary Creeas a new role record
         * @param {RoleRecord} roleRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRole(roleRecord: RoleRecord, options?: any) {
            return AuthorisationApiFp(configuration).newRole(roleRecord, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: New user group** |    | 
         * @summary Creates a new a user group record
         * @param {UserGroupRecord} updatedDataProtectionRule 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newRuleGroup(updatedDataProtectionRule: UserGroupRecord, options?: any) {
            return AuthorisationApiFp(configuration).newRuleGroup(updatedDataProtectionRule, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRoles(roleCode: string, options?: any) {
            return AuthorisationApiFp(configuration).searchRoles(roleCode, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rules.
         * @param {string} roleCode * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchRules(roleCode: string, options?: any) {
            return AuthorisationApiFp(configuration).searchRules(roleCode, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of rule groups.
         * @param {string} groupCode *  
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchUserGroups(groupCode: string, options?: any) {
            return AuthorisationApiFp(configuration).searchUserGroups(groupCode, options)(fetch, basePath);
        },
    };
};

/**
 * AuthorisationApi - object-oriented interface
 * @export
 * @class AuthorisationApi
 * @extends {BaseAPI}
 */
export class AuthorisationApi extends BaseAPI {
    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Rule record returned** |    | 
     * @summary Creates a business rule record
     * @param {} updatedDataProtectionRule 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public createDataProtectionRule(updatedDataProtectionRule: DataProtectionRuleRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).createDataProtectionRule(updatedDataProtectionRule, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
     * @summary Gets a role record
     * @param {} roleId * The unique identifier for the role. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public getRole(roleId: string, options?: any) {
        return AuthorisationApiFp(this.configuration).getRole(roleId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
     * @summary Gets a role record
     * @param {} ruleId * The unique identifier for the role. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public getRule(ruleId: string, options?: any) {
        return AuthorisationApiFp(this.configuration).getRule(ruleId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: user group record returned** |    | 
     * @summary Gets a user group record
     * @param {} userGroupId * The unique identifier for the role. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public getUserGroup(userGroupId: string, options?: any) {
        return AuthorisationApiFp(this.configuration).getUserGroup(userGroupId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
     * @summary Modifies a business rule record
     * @param {} ruleId * The unique identifier for the role. 
     * @param {} updatedDataProtectionRule 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public maintainDataProtectionRule(ruleId: string, updatedDataProtectionRule: DataProtectionRuleRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).maintainDataProtectionRule(ruleId, updatedDataProtectionRule, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
     * @summary Gets a role record
     * @param {} roleId * The unique identifier for the role. 
     * @param {} updatedRole 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public maintainRole(roleId: string, updatedRole: RoleRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).maintainRole(roleId, updatedRole, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: User group record returned** |    | 
     * @summary Modifies a user group record
     * @param {} userGroupId * The unique identifier for the role. 
     * @param {} updatedDataProtectionRule 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public maintainRuleGroup(userGroupId: string, updatedDataProtectionRule: UserGroupRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).maintainRuleGroup(userGroupId, updatedDataProtectionRule, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Role record returned** |    | 
     * @summary Creeas a new role record
     * @param {} roleRecord 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public newRole(roleRecord: RoleRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).newRole(roleRecord, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: New user group** |    | 
     * @summary Creates a new a user group record
     * @param {} updatedDataProtectionRule 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public newRuleGroup(updatedDataProtectionRule: UserGroupRecord, options?: any) {
        return AuthorisationApiFp(this.configuration).newRuleGroup(updatedDataProtectionRule, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of roles.
     * @param {} roleCode * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public searchRoles(roleCode: string, options?: any) {
        return AuthorisationApiFp(this.configuration).searchRoles(roleCode, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of rules.
     * @param {} roleCode * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public searchRules(roleCode: string, options?: any) {
        return AuthorisationApiFp(this.configuration).searchRules(roleCode, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of rule groups.
     * @param {} groupCode *  
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorisationApi
     */
    public searchUserGroups(groupCode: string, options?: any) {
        return AuthorisationApiFp(this.configuration).searchUserGroups(groupCode, options)(this.fetch, this.basePath);
    }

}

/**
 * ClaimApplicationsApi - fetch parameter creator
 * @export
 */
export const ClaimApplicationsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Evidence record** | Evidence record | 
         * @summary Gets / downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidenceDocument(documentId: string, claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling claimEvidenceDocument.');
            }
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimEvidenceDocument.');
            }
            const localVarPath = `/claims/{claim_number}/claim-registrations/evidence/{document_id}`
                .replace(`{${"document_id"}}`, encodeURIComponent(String(documentId)))
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to remove a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationDelinkEstate(claimRegistrationNumber: string, estateNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling claimRegistrationDelinkEstate.');
            }
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling claimRegistrationDelinkEstate.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/delink-estate/{estate_number}`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)))
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets or downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimAppNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidenceDocument(documentId: string, claimAppNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'documentId' is not null or undefined
            if (documentId === null || documentId === undefined) {
                throw new RequiredError('documentId','Required parameter documentId was null or undefined when calling claimRegistrationEvidenceDocument.');
            }
            // verify required parameter 'claimAppNumber' is not null or undefined
            if (claimAppNumber === null || claimAppNumber === undefined) {
                throw new RequiredError('claimAppNumber','Required parameter claimAppNumber was null or undefined when calling claimRegistrationEvidenceDocument.');
            }
            const localVarPath = `/claim-registrations/{claim_app_number}/evidences/{document_id}`
                .replace(`{${"document_id"}}`, encodeURIComponent(String(documentId)))
                .replace(`{${"claim_app_number"}}`, encodeURIComponent(String(claimAppNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence associated to the claim application.
         * @param {string} claimAppNumber * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidences1(claimAppNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimAppNumber' is not null or undefined
            if (claimAppNumber === null || claimAppNumber === undefined) {
                throw new RequiredError('claimAppNumber','Required parameter claimAppNumber was null or undefined when calling claimRegistrationEvidences1.');
            }
            const localVarPath = `/claim-registrations/{claim_app_number}/evidences`
                .replace(`{${"claim_app_number"}}`, encodeURIComponent(String(claimAppNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to add a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-estate\",        \"rel\": \"claimapplication.link-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationLinkEstate(claimRegistrationNumber: string, estateNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling claimRegistrationLinkEstate.');
            }
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling claimRegistrationLinkEstate.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/link-estate/{estate_number}`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)))
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to remove a previously uploaded file from the application.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Removes the specified (evidence) file.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} fileId * The file to be removed. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationRemoveEvidence(claimRegistrationNumber: string, fileId: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling claimRegistrationRemoveEvidence.');
            }
            // verify required parameter 'fileId' is not null or undefined
            if (fileId === null || fileId === undefined) {
                throw new RequiredError('fileId','Required parameter fileId was null or undefined when calling claimRegistrationRemoveEvidence.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/remove-evidence/{file_id}`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)))
                .replace(`{${"file_id"}}`, encodeURIComponent(String(fileId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim Application  * Primarily external focussed * Could allow internal admins to view if needed, but current application does not allow this.   **Description:** Gets a pre-existing claims application. Once either submitted or withdrawn  the claim application ceases to be either viewable or editable as a distinct resource - all processing and state management transfers to the Claim object. Post submission, the concept of the claim application exists only to group claims together.  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  / not authorised to view (we don't want a 403 for this one)| | **410** | Gone  | Claim application has ascended to a higher state of being, and is now managed as a claim| | **5xx** | Server Error  | Internal / network errors|  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unsubmitted claim application** | A claim that is not yet part of the estate| | **2** | **200: Withdrawn claim application** | Previously withdrawn claim application| | **3** | **410: All other statuses** | ALL other statuses MUST result in a 410 E.g. vetted, suspended, errored only exist against the claim level and NOT at the claim application level |  <br /> ****  **Case 1** - 200: Unsubmitted claim application       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations,\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/maintain\",        \"rel\": \"claimapplications.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/withdraw\",        \"rel\": \"claimapplications.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/link-folio\",        \"rel\": \"claimapplications.link-folio\",        \"method\": \"POST\"      }            ]        <br />     **Case 2** - 200: Withdrawn claim application       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      }            ] 
         * @summary Returns the internal representation of a claim
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrations(claimRegistrationNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling claimRegistrations.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Adds a file as evidence agains the claim application.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimSupplyEvidence(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling claimSupplyEvidence.');
            }
            // verify required parameter 'claimRegistration' is not null or undefined
            if (claimRegistration === null || claimRegistration === undefined) {
                throw new RequiredError('claimRegistration','Required parameter claimRegistration was null or undefined when calling claimSupplyEvidence.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/supply-evidence`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimRegistration || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Search for claim applications related to the current user.  ****   **UC Mapping:** Search Claim Applications   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claim applications specific to the given creditor.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearchClaimRegistrations(contactId: string, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactSearchClaimRegistrations.');
            }
            const localVarPath = `/contacts/{contact_id}/claim-registrations/search`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (claimType !== undefined) {
                localVarQueryParameter['claimType'] = claimType;
            }

            if (estateType !== undefined) {
                localVarQueryParameter['estateType'] = estateType;
            }

            if (fromDate !== undefined) {
                localVarQueryParameter['fromDate'] = (fromDate as any).toISOString();
            }

            if (toDate !== undefined) {
                localVarQueryParameter['toDate'] = (toDate as any).toISOString();
            }

            if (creditorReference !== undefined) {
                localVarQueryParameter['creditorReference'] = creditorReference;
            }

            if (estateNumber !== undefined) {
                localVarQueryParameter['estateNumber'] = estateNumber;
            }

            if (claimStatus !== undefined) {
                localVarQueryParameter['claimStatus'] = claimStatus;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        modifyClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling modifyClaimRegistration.');
            }
            // verify required parameter 'claimRegistration' is not null or undefined
            if (claimRegistration === null || claimRegistration === undefined) {
                throw new RequiredError('claimRegistration','Required parameter claimRegistration was null or undefined when calling modifyClaimRegistration.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/save`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimRegistration || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Cancels an (unsubmitted) ClaimRegistration. Does not pre-suppose that Claim Applications can/will be saved - it is a way of aborting a workflow regardless of whether usubmitted claim applications are saved.   **** May only be done by the **submitting creditor**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to manage the claim application * ClaimRegistration is current / selected  * ClaimRegistration is no yet submitted ____ ### Post-conditions * claim is aborted any saved information is deleted. * no audit required (included here to avoid doubt)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Canlelled claim** | Claim cancelled / resource removed |   **** <br />        **Case 1**       \"links\":       [        {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      }      ]     
         * @summary Irretrievably cancels the application (if the creditor changes their mind, a new application is needed)
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitApplication(claimRegistrationNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling submitApplication.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/cancel`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a ClaimRegistration for processing.   **** May only be done by an **Insolvency officer**.  ****   **UC Mapping:** Submit Claim Application  ____ ### Pre-conditions * User is authenticated * ClaimRegistration is current / selected  * ClaimRegistration is complete ____ ### Post-conditions * n x PotentialClaim resources are created / or appropriate error is given(Claim Application is 1:n PotentialClaims)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Active claim |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/auditlogs\",        \"rel\": \"claimapplication.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462/maintain\",        \"rel\": \"claimapplication.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/reject\",        \"rel\": \"claimapplication.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/vet\",        \"rel\": \"claimapplication.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/receive\",        \"rel\": \"claimapplication.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claimapplication.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claimapplication.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Submits a claim, and creates n * claims into the insolvency procedure proper.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimRegistrationNumber' is not null or undefined
            if (claimRegistrationNumber === null || claimRegistrationNumber === undefined) {
                throw new RequiredError('claimRegistrationNumber','Required parameter claimRegistrationNumber was null or undefined when calling submitClaimRegistration.');
            }
            // verify required parameter 'claimRegistration' is not null or undefined
            if (claimRegistration === null || claimRegistration === undefined) {
                throw new RequiredError('claimRegistration','Required parameter claimRegistration was null or undefined when calling submitClaimRegistration.');
            }
            const localVarPath = `/claim-registrations/{claim_registration_number}/submit`
                .replace(`{${"claim_registration_number"}}`, encodeURIComponent(String(claimRegistrationNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimRegistration || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ClaimApplicationsApi - functional programming interface
 * @export
 */
export const ClaimApplicationsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Evidence record** | Evidence record | 
         * @summary Gets / downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidenceDocument(documentId: string, claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<EvidenceRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimEvidenceDocument(documentId, claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to remove a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationDelinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrationDelinkEstate(claimRegistrationNumber, estateNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets or downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimAppNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidenceDocument(documentId: string, claimAppNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<EvidenceRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrationEvidenceDocument(documentId, claimAppNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence associated to the claim application.
         * @param {string} claimAppNumber * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidences1(claimAppNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<EvidenceSearchResults> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrationEvidences1(claimAppNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to add a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-estate\",        \"rel\": \"claimapplication.link-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationLinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrationLinkEstate(claimRegistrationNumber, estateNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to remove a previously uploaded file from the application.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Removes the specified (evidence) file.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} fileId * The file to be removed. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationRemoveEvidence(claimRegistrationNumber: string, fileId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrationRemoveEvidence(claimRegistrationNumber, fileId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim Application  * Primarily external focussed * Could allow internal admins to view if needed, but current application does not allow this.   **Description:** Gets a pre-existing claims application. Once either submitted or withdrawn  the claim application ceases to be either viewable or editable as a distinct resource - all processing and state management transfers to the Claim object. Post submission, the concept of the claim application exists only to group claims together.  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  / not authorised to view (we don't want a 403 for this one)| | **410** | Gone  | Claim application has ascended to a higher state of being, and is now managed as a claim| | **5xx** | Server Error  | Internal / network errors|  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unsubmitted claim application** | A claim that is not yet part of the estate| | **2** | **200: Withdrawn claim application** | Previously withdrawn claim application| | **3** | **410: All other statuses** | ALL other statuses MUST result in a 410 E.g. vetted, suspended, errored only exist against the claim level and NOT at the claim application level |  <br /> ****  **Case 1** - 200: Unsubmitted claim application       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations,\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/maintain\",        \"rel\": \"claimapplications.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/withdraw\",        \"rel\": \"claimapplications.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/link-folio\",        \"rel\": \"claimapplications.link-folio\",        \"method\": \"POST\"      }            ]        <br />     **Case 2** - 200: Withdrawn claim application       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      }            ] 
         * @summary Returns the internal representation of a claim
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrations(claimRegistrationNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimRegistrations(claimRegistrationNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Adds a file as evidence agains the claim application.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimSupplyEvidence(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).claimSupplyEvidence(claimRegistrationNumber, claimRegistration, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Search for claim applications related to the current user.  ****   **UC Mapping:** Search Claim Applications   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claim applications specific to the given creditor.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearchClaimRegistrations(contactId: string, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationSearchResults> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).contactSearchClaimRegistrations(contactId, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        modifyClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).modifyClaimRegistration(claimRegistrationNumber, claimRegistration, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Cancels an (unsubmitted) ClaimRegistration. Does not pre-suppose that Claim Applications can/will be saved - it is a way of aborting a workflow regardless of whether usubmitted claim applications are saved.   **** May only be done by the **submitting creditor**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to manage the claim application * ClaimRegistration is current / selected  * ClaimRegistration is no yet submitted ____ ### Post-conditions * claim is aborted any saved information is deleted. * no audit required (included here to avoid doubt)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Canlelled claim** | Claim cancelled / resource removed |   **** <br />        **Case 1**       \"links\":       [        {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      }      ]     
         * @summary Irretrievably cancels the application (if the creditor changes their mind, a new application is needed)
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitApplication(claimRegistrationNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).submitApplication(claimRegistrationNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to submit a ClaimRegistration for processing.   **** May only be done by an **Insolvency officer**.  ****   **UC Mapping:** Submit Claim Application  ____ ### Pre-conditions * User is authenticated * ClaimRegistration is current / selected  * ClaimRegistration is complete ____ ### Post-conditions * n x PotentialClaim resources are created / or appropriate error is given(Claim Application is 1:n PotentialClaims)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Active claim |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/auditlogs\",        \"rel\": \"claimapplication.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462/maintain\",        \"rel\": \"claimapplication.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/reject\",        \"rel\": \"claimapplication.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/vet\",        \"rel\": \"claimapplication.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/receive\",        \"rel\": \"claimapplication.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claimapplication.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claimapplication.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Submits a claim, and creates n * claims into the insolvency procedure proper.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimApplicationsApiFetchParamCreator(configuration).submitClaimRegistration(claimRegistrationNumber, claimRegistration, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * ClaimApplicationsApi - factory interface
 * @export
 */
export const ClaimApplicationsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Evidence record** | Evidence record | 
         * @summary Gets / downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidenceDocument(documentId: string, claimNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimEvidenceDocument(documentId, claimNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to remove a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationDelinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrationDelinkEstate(claimRegistrationNumber, estateNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets or downloads an evidence document.
         * @param {string} documentId * The unique identifier for the evidence document. 
         * @param {string} claimAppNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidenceDocument(documentId: string, claimAppNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrationEvidenceDocument(documentId, claimAppNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence associated to the claim application.
         * @param {string} claimAppNumber * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationEvidences1(claimAppNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrationEvidences1(claimAppNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to add a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-estate\",        \"rel\": \"claimapplication.link-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} estateNumber * The estate to be delinked. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationLinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrationLinkEstate(claimRegistrationNumber, estateNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to remove a previously uploaded file from the application.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Removes the specified (evidence) file.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {string} fileId * The file to be removed. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrationRemoveEvidence(claimRegistrationNumber: string, fileId: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrationRemoveEvidence(claimRegistrationNumber, fileId, options)(fetch, basePath);
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim Application  * Primarily external focussed * Could allow internal admins to view if needed, but current application does not allow this.   **Description:** Gets a pre-existing claims application. Once either submitted or withdrawn  the claim application ceases to be either viewable or editable as a distinct resource - all processing and state management transfers to the Claim object. Post submission, the concept of the claim application exists only to group claims together.  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  / not authorised to view (we don't want a 403 for this one)| | **410** | Gone  | Claim application has ascended to a higher state of being, and is now managed as a claim| | **5xx** | Server Error  | Internal / network errors|  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unsubmitted claim application** | A claim that is not yet part of the estate| | **2** | **200: Withdrawn claim application** | Previously withdrawn claim application| | **3** | **410: All other statuses** | ALL other statuses MUST result in a 410 E.g. vetted, suspended, errored only exist against the claim level and NOT at the claim application level |  <br /> ****  **Case 1** - 200: Unsubmitted claim application       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations,\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/maintain\",        \"rel\": \"claimapplications.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/withdraw\",        \"rel\": \"claimapplications.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/link-folio\",        \"rel\": \"claimapplications.link-folio\",        \"method\": \"POST\"      }            ]        <br />     **Case 2** - 200: Withdrawn claim application       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      }            ] 
         * @summary Returns the internal representation of a claim
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimRegistrations(claimRegistrationNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimRegistrations(claimRegistrationNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Adds a file as evidence agains the claim application.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimSupplyEvidence(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
            return ClaimApplicationsApiFp(configuration).claimSupplyEvidence(claimRegistrationNumber, claimRegistration, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Search for claim applications related to the current user.  ****   **UC Mapping:** Search Claim Applications   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claim applications specific to the given creditor.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearchClaimRegistrations(contactId: string, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).contactSearchClaimRegistrations(contactId, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Modifies the claim application (presupposes ability ot save).
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        modifyClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
            return ClaimApplicationsApiFp(configuration).modifyClaimRegistration(claimRegistrationNumber, claimRegistration, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Cancels an (unsubmitted) ClaimRegistration. Does not pre-suppose that Claim Applications can/will be saved - it is a way of aborting a workflow regardless of whether usubmitted claim applications are saved.   **** May only be done by the **submitting creditor**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to manage the claim application * ClaimRegistration is current / selected  * ClaimRegistration is no yet submitted ____ ### Post-conditions * claim is aborted any saved information is deleted. * no audit required (included here to avoid doubt)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Canlelled claim** | Claim cancelled / resource removed |   **** <br />        **Case 1**       \"links\":       [        {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      }      ]     
         * @summary Irretrievably cancels the application (if the creditor changes their mind, a new application is needed)
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitApplication(claimRegistrationNumber: string, options?: any) {
            return ClaimApplicationsApiFp(configuration).submitApplication(claimRegistrationNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to submit a ClaimRegistration for processing.   **** May only be done by an **Insolvency officer**.  ****   **UC Mapping:** Submit Claim Application  ____ ### Pre-conditions * User is authenticated * ClaimRegistration is current / selected  * ClaimRegistration is complete ____ ### Post-conditions * n x PotentialClaim resources are created / or appropriate error is given(Claim Application is 1:n PotentialClaims)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Active claim |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/auditlogs\",        \"rel\": \"claimapplication.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462/maintain\",        \"rel\": \"claimapplication.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/reject\",        \"rel\": \"claimapplication.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/vet\",        \"rel\": \"claimapplication.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/receive\",        \"rel\": \"claimapplication.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claimapplication.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claimapplication.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
         * @summary Submits a claim, and creates n * claims into the insolvency procedure proper.
         * @param {string} claimRegistrationNumber * The unique identifier for the claim application. 
         * @param {ClaimRegistrationRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
            return ClaimApplicationsApiFp(configuration).submitClaimRegistration(claimRegistrationNumber, claimRegistration, options)(fetch, basePath);
        },
    };
};

/**
 * ClaimApplicationsApi - object-oriented interface
 * @export
 * @class ClaimApplicationsApi
 * @extends {BaseAPI}
 */
export class ClaimApplicationsApi extends BaseAPI {
    /**
     *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Evidence record** | Evidence record | 
     * @summary Gets / downloads an evidence document.
     * @param {} documentId * The unique identifier for the evidence document. 
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimEvidenceDocument(documentId: string, claimNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimEvidenceDocument(documentId, claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to remove a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Modifies the claim application (presupposes ability ot save).
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} estateNumber * The estate to be delinked. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrationDelinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrationDelinkEstate(claimRegistrationNumber, estateNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated * Claim application record is current ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets or downloads an evidence document.
     * @param {} documentId * The unique identifier for the evidence document. 
     * @param {} claimAppNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrationEvidenceDocument(documentId: string, claimAppNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrationEvidenceDocument(documentId, claimAppNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Search for evidence documents supplied against a claim application.  ****   **UC Mapping:**  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of evidence associated to the claim application.
     * @param {} claimAppNumber * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrationEvidences1(claimAppNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrationEvidences1(claimAppNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to add a linked estate.  ****   **UC Mapping:**    ____ ### Pre-conditions * User is authenticated * Claim application is current / selected  * Claim application is linked to specified estate ____ ### Post-conditions * Authorisation checked * Claim applicaiton resource updated (specified estate is no longer linked)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **409** | Conflict  | Claim must have at least 1 associated estate |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-estate\",        \"rel\": \"claimapplication.link-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/delink-estate\",        \"rel\": \"claimapplication.delink-estate\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Modifies the claim application (presupposes ability ot save).
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} estateNumber * The estate to be delinked. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrationLinkEstate(claimRegistrationNumber: string, estateNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrationLinkEstate(claimRegistrationNumber, estateNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to remove a previously uploaded file from the application.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Removes the specified (evidence) file.
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} fileId * The file to be removed. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrationRemoveEvidence(claimRegistrationNumber: string, fileId: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrationRemoveEvidence(claimRegistrationNumber, fileId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim Application  * Primarily external focussed * Could allow internal admins to view if needed, but current application does not allow this.   **Description:** Gets a pre-existing claims application. Once either submitted or withdrawn  the claim application ceases to be either viewable or editable as a distinct resource - all processing and state management transfers to the Claim object. Post submission, the concept of the claim application exists only to group claims together.  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  / not authorised to view (we don't want a 403 for this one)| | **410** | Gone  | Claim application has ascended to a higher state of being, and is now managed as a claim| | **5xx** | Server Error  | Internal / network errors|  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unsubmitted claim application** | A claim that is not yet part of the estate| | **2** | **200: Withdrawn claim application** | Previously withdrawn claim application| | **3** | **410: All other statuses** | ALL other statuses MUST result in a 410 E.g. vetted, suspended, errored only exist against the claim level and NOT at the claim application level |  <br /> ****  **Case 1** - 200: Unsubmitted claim application       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations,\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/maintain\",        \"rel\": \"claimapplications.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/withdraw\",        \"rel\": \"claimapplications.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/link-folio\",        \"rel\": \"claimapplications.link-folio\",        \"method\": \"POST\"      }            ]        <br />     **Case 2** - 200: Withdrawn claim application       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations\",        \"rel\": \"claimapplications.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/126090/folios\",        \"rel\": \"claimapplications.folios\",        \"method\": \"GET\"      }            ] 
     * @summary Returns the internal representation of a claim
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimRegistrations(claimRegistrationNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimRegistrations(claimRegistrationNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Adds a file as evidence agains the claim application.
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} claimRegistration * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public claimSupplyEvidence(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).claimSupplyEvidence(claimRegistrationNumber, claimRegistration, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Search for claim applications related to the current user.  ****   **UC Mapping:** Search Claim Applications   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of claim applications specific to the given creditor.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} [claimType] The type of the claim
     * @param {} [estateType] The type of the claim
     * @param {} [fromDate] The date from which to search e.g 04-Dec-2017
     * @param {} [toDate] The date to which to search e.g. 07-Dec-2017
     * @param {} [creditorReference] The creditors reference identifier.
     * @param {} [estateNumber] The estate that the claim belongs to.
     * @param {} [claimStatus] The state of the insolvency procedure, leave blank for all
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public contactSearchClaimRegistrations(contactId: string, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).contactSearchClaimRegistrations(contactId, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to submit a maintain / modify the details of a claim.  ****   **UC Mapping:** Update Claim Application   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * Authorisation checked * Claim resource updated * Audit record created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Active claim application not yet submitted |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/submit\",        \"rel\": \"claimapplication.submit\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Modifies the claim application (presupposes ability ot save).
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} claimRegistration * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public modifyClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).modifyClaimRegistration(claimRegistrationNumber, claimRegistration, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Cancels an (unsubmitted) ClaimRegistration. Does not pre-suppose that Claim Applications can/will be saved - it is a way of aborting a workflow regardless of whether usubmitted claim applications are saved.   **** May only be done by the **submitting creditor**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to manage the claim application * ClaimRegistration is current / selected  * ClaimRegistration is no yet submitted ____ ### Post-conditions * claim is aborted any saved information is deleted. * no audit required (included here to avoid doubt)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Canlelled claim** | Claim cancelled / resource removed |   **** <br />        **Case 1**       \"links\":       [        {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      }      ]     
     * @summary Irretrievably cancels the application (if the creditor changes their mind, a new application is needed)
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public submitApplication(claimRegistrationNumber: string, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).submitApplication(claimRegistrationNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to submit a ClaimRegistration for processing.   **** May only be done by an **Insolvency officer**.  ****   **UC Mapping:** Submit Claim Application  ____ ### Pre-conditions * User is authenticated * ClaimRegistration is current / selected  * ClaimRegistration is complete ____ ### Post-conditions * n x PotentialClaim resources are created / or appropriate error is given(Claim Application is 1:n PotentialClaims)   ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Active claim |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claimapplicaitons\",        \"rel\": \"claimapplication.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/auditlogs\",        \"rel\": \"claimapplication.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/assets\",        \"rel\": \"claimapplication.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/folios\",        \"rel\": \"claimapplication.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/824462/maintain\",        \"rel\": \"claimapplication.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/reject\",        \"rel\": \"claimapplication.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/vet\",        \"rel\": \"claimapplication.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim-registrations/4855682/receive\",        \"rel\": \"claimapplication.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claimapplication.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claimapplication.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claimapplication.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ]     
     * @summary Submits a claim, and creates n * claims into the insolvency procedure proper.
     * @param {} claimRegistrationNumber * The unique identifier for the claim application. 
     * @param {} claimRegistration * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimApplicationsApi
     */
    public submitClaimRegistration(claimRegistrationNumber: string, claimRegistration: ClaimRegistrationRecord, options?: any) {
        return ClaimApplicationsApiFp(this.configuration).submitClaimRegistration(claimRegistrationNumber, claimRegistration, options)(this.fetch, this.basePath);
    }

}

/**
 * ClaimsApi - fetch parameter creator
 * @export
 */
export const ClaimsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling addFolio.');
            }
            const localVarPath = `/claims/{claim_number}/add-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new url.URLSearchParams();

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (upfile !== undefined) {
                localVarFormParams.set('upfile', upfile as any);
            }

            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = localVarFormParams.toString();

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Takes a vetted Claim (aka a claim with the status of \"vetted\") and 'admits' the claim into the insolvency procedure proper (so the claim will no be given a priority, be investigated and or considered for dividends if there are any).   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Admitted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/received\",        \"rel\": \"claim.receive\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Admits a claim into the management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        admitClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling admitClaim.');
            }
            const localVarPath = `/claims/{claim_number}/admit`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimAssets(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimAssets.');
            }
            const localVarPath = `/claims/{claim_number}/assets`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record createdt** | Record created |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEnterTime1(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimEnterTime1.');
            }
            const localVarPath = `/claims/{claim_number}/enter-time`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets evidence realted to a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Claim is current / selected ____ ### Post-conditions * Security permissions are checked * rearch result is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Evidence result** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Evidence result             \"links\": [            ## ----------------- Navigation links -----------------             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"self\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidences(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimEvidences.');
            }
            const localVarPath = `/claims/{claim_number}/claim-registrations/evidences`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimFolios.');
            }
            const localVarPath = `/claims/{claim_number}/folios`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimLinkAsset(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimLinkAsset.');
            }
            const localVarPath = `/claims/{claim_number}/link-asset`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimUnlinkAsset(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimUnlinkAsset.');
            }
            const localVarPath = `/claims/{claim_number}/unlink-asset`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Calim is current / se;ected ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Unsubmitted claim application             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration,\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"claimRegistrations.evidence\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimclaimRegistrations(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimclaimRegistrations.');
            }
            const localVarPath = `/claims/{claim_number}/claim-registration`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim * Internal only  **Description:** Gets a search result of claims associated to the current estate  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim detail record is returned / error is returned * Audit record is created in auditDB ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **404** | Not found  | Claim not found  / not authorised to view|  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case                             1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Returns a internal representation of a claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claims(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claims.');
            }
            const localVarPath = `/claims/{claim_number}`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Searches the insolvency register for claims.    * Privileged users only    * Public may not search for claims  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims from the insolvency register.
         * @param {string} businessService The type of the insolvency procedure, leave blank for all
         * @param {string} [creditorId] The unique identifier for the creditor.
         * @param {string} [claimId] The unique identifier for the claim.
         * @param {string} [claimStatus] The status of the claim.
         * @param {string} [claimPriority] The priority of the claim.
         * @param {boolean} [dividendsPaid] Boolean indicating whether claim has received dividends.
         * @param {string} [claimType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [sspStatus] Unknown
         * @param {string} [transactionCodeId] Linked to the claimType. Hard to represent in the swagger definition.
         * @param {string} [status] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimsSearch(businessService: string, creditorId?: string, claimId?: string, claimStatus?: string, claimPriority?: string, dividendsPaid?: boolean, claimType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, sspStatus?: string, transactionCodeId?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            // verify required parameter 'businessService' is not null or undefined
            if (businessService === null || businessService === undefined) {
                throw new RequiredError('businessService','Required parameter businessService was null or undefined when calling claimsSearch.');
            }
            const localVarPath = `/claims/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (businessService !== undefined) {
                localVarQueryParameter['businessService'] = businessService;
            }

            if (creditorId !== undefined) {
                localVarQueryParameter['creditorId'] = creditorId;
            }

            if (claimId !== undefined) {
                localVarQueryParameter['claimId'] = claimId;
            }

            if (claimStatus !== undefined) {
                localVarQueryParameter['claimStatus'] = claimStatus;
            }

            if (claimPriority !== undefined) {
                localVarQueryParameter['claimPriority'] = claimPriority;
            }

            if (dividendsPaid !== undefined) {
                localVarQueryParameter['dividendsPaid'] = dividendsPaid;
            }

            if (claimType !== undefined) {
                localVarQueryParameter['claimType'] = claimType;
            }

            if (fromDate !== undefined) {
                localVarQueryParameter['fromDate'] = (fromDate as any).toISOString();
            }

            if (toDate !== undefined) {
                localVarQueryParameter['toDate'] = (toDate as any).toISOString();
            }

            if (creditorReference !== undefined) {
                localVarQueryParameter['creditorReference'] = creditorReference;
            }

            if (estateNumber !== undefined) {
                localVarQueryParameter['estateNumber'] = estateNumber;
            }

            if (sspStatus !== undefined) {
                localVarQueryParameter['sspStatus'] = sspStatus;
            }

            if (transactionCodeId !== undefined) {
                localVarQueryParameter['transactionCodeId'] = transactionCodeId;
            }

            if (status !== undefined) {
                localVarQueryParameter['status'] = status;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  linkes a linked estate from the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected * Specified estate is linked ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is delinked ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Delinkes a linked estate from the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        delinkEstate(claimNumber: string, estateNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling delinkEstate.');
            }
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling delinkEstate.');
            }
            const localVarPath = `/claims/{claim_number}/delink-estate/{estate_number}`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)))
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Marks a claim as a duplicate and therefore inactive.  **** **Insolvency officer only**. Effectively removes the claim from the procedure, in terms of consideraion for dividends at least (audit will still be avialable).  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.   ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Claim record comments are updated to indicate which claim ws preferred to the duplicate. * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Preferred claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Duplicated claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Marks claim as a duplicate and removes from the active management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} duplicateClaimNumber * The unique identifier of the claim that is preferred as the representative claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        duplicateClaim(claimNumber: string, duplicateClaimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling duplicateClaim.');
            }
            // verify required parameter 'duplicateClaimNumber' is not null or undefined
            if (duplicateClaimNumber === null || duplicateClaimNumber === undefined) {
                throw new RequiredError('duplicateClaimNumber','Required parameter duplicateClaimNumber was null or undefined when calling duplicateClaim.');
            }
            const localVarPath = `/claims/{claim_number}/duplicate`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (duplicateClaimNumber !== undefined) {
                localVarQueryParameter['duplicate_claim_number'] = duplicateClaimNumber;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Errors a claim. Erroring a claim is used to ...?  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Errored claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Errors claim / removes from management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        errorClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling errorClaim.');
            }
            const localVarPath = `/claims/{claim_number}/error`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Adds linked estate to the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is linked  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Adds linked estate to the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkEstate(claimNumber: string, estateNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling linkEstate.');
            }
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling linkEstate.');
            }
            const localVarPath = `/claims/{claim_number}/link-estate/{estate_number}`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)))
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling linkFolio.');
            }
            // verify required parameter 'folio' is not null or undefined
            if (folio === null || folio === undefined) {
                throw new RequiredError('folio','Required parameter folio was null or undefined when calling linkFolio.');
            }
            const localVarPath = `/claims/{claim_number}/link-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(folio || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Maintains claim metadata - can only be done by an insolvency officer. State transitions are done as separate operations.   ****   **UC Mapping:** Maintain Claim   ____ ### Pre-conditions * User is authenticated * Estate is searched for and selected ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / appropriate error is given ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case 1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Maintains / modifies an existing claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {MaintainClaimRecord} claimDetail The detail of the value(s) to be updated.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainClaim(claimNumber: string, claimDetail: MaintainClaimRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling maintainClaim.');
            }
            // verify required parameter 'claimDetail' is not null or undefined
            if (claimDetail === null || claimDetail === undefined) {
                throw new RequiredError('claimDetail','Required parameter claimDetail was null or undefined when calling maintainClaim.');
            }
            const localVarPath = `/claims/{claim_number}/maintain`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimDetail || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised ____ ### Post-conditions * Claim record is created and associated to the estate * Audit record is created against claim  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | A claim waiting to be filled out by the |editor    <br /> ****  **Case 1* - 200: Potential claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />           
         * @summary Creates and links a new potential claim to an estate 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newClaim(claimNumber: string, upfile?: any, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling newClaim.');
            }
            const localVarPath = `/claims/new`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new url.URLSearchParams();

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (upfile !== undefined) {
                localVarFormParams.set('upfile', upfile as any);
            }

            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = localVarFormParams.toString();

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Takes a suspended claim and makes it a potential claim.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 1) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | Claim now has the status of potential |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'potential'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        potentialClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling potentialClaim.');
            }
            const localVarPath = `/claims/{claim_number}/potential`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Takes a potential, received or vetted claim and rejects it.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Rejects a Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Rejected claim** | Rejected claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Rejects a claim. Irretrievably removes from the insolvency procedure.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rejectClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling rejectClaim.');
            }
            const localVarPath = `/claims/{claim_number}/reject`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview  A fairly complex use case. Comes in to play where a potential claim is created by ITS, the invitation to complete it is then taken up by the creditor, and the creditor then creates a claim application with both preferential and unsecured claims. A second claim will be created containing the unsecured or secured claim detains - depending on what the original claim was.  **** Used by the system*.  ****   **UC Mapping:**  **** **QA / QC notes:** Not 100% sure that the process API needs this explicitly defined.  ****  ____ ### Pre-conditions * User is authenticated * Claim Application coming from a potential claim is submitted.   ____ ### Post-conditions * User authorisation is checked * Claim resource status is updated / or appropriate error is given  * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Split claim** | Split claim |   <br /> ****   **Case 1** - duplicated claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }       ]       
         * @summary Spawns a secondclaim as a result of a submitted claim application.
         * @param {string} claimNumber * The unique identifier for the claim to be split. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        splitClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling splitClaim.');
            }
            const localVarPath = `/claims/{claim_number}/split`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Suspends a claim from statuses of: vetted, admitted, received or potential.  **** May be done by an **Insolvency officer**.  ****   **UC Mapping:** Suspend Claim  **** ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Vetted    * Admitted    * Received    * Potential ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Suspended claim** | Suspended claim |   <br /> ****   **Case 1:** - Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Suspends a claim - removes a claim from the estate in a non-permanent way.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        suspendClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling suspendClaim.');
            }
            const localVarPath = `/claims/{claim_number}/suspend`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling unlinkFolio.');
            }
            // verify required parameter 'folio' is not null or undefined
            if (folio === null || folio === undefined) {
                throw new RequiredError('folio','Required parameter folio was null or undefined when calling unlinkFolio.');
            }
            const localVarPath = `/claims/{claim_number}/unlink-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(folio || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Returns a claim to the status of received.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Received claim** | Claim now has the status of received |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'received'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsuspendClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling unsuspendClaim.');
            }
            const localVarPath = `/claims/{claim_number}/unsuspend`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Takes a Received  Claim (aka a claim with the status of \"Received\") and 'vets' the claim ready for review by the insolvency officer.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Vetted claim** | Vetted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Vets a claim - basic checking of the claim, can be performed by processing ready for review by the officer administering the estate (see /admit).
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        vetClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling vetClaim.');
            }
            const localVarPath = `/claims/{claim_number}/vet`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ClaimsApi - functional programming interface
 * @export
 */
export const ClaimsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).addFolio(claimNumber, upfile, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Takes a vetted Claim (aka a claim with the status of \"vetted\") and 'admits' the claim into the insolvency procedure proper (so the claim will no be given a priority, be investigated and or considered for dividends if there are any).   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Admitted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/received\",        \"rel\": \"claim.receive\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Admits a claim into the management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        admitClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).admitClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimAssets(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimAssets(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record createdt** | Record created |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEnterTime1(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimEnterTime1(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets evidence realted to a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Claim is current / selected ____ ### Post-conditions * Security permissions are checked * rearch result is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Evidence result** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Evidence result             \"links\": [            ## ----------------- Navigation links -----------------             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"self\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidences(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<EvidenceSearchResults> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimEvidences(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioSearchResults> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimFolios(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimLinkAsset(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimLinkAsset(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimUnlinkAsset(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimUnlinkAsset(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Calim is current / se;ected ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Unsubmitted claim application             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration,\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"claimRegistrations.evidence\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimclaimRegistrations(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimclaimRegistrations(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim * Internal only  **Description:** Gets a search result of claims associated to the current estate  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim detail record is returned / error is returned * Audit record is created in auditDB ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **404** | Not found  | Claim not found  / not authorised to view|  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case                             1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Returns a internal representation of a claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claims(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claims(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Searches the insolvency register for claims.    * Privileged users only    * Public may not search for claims  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims from the insolvency register.
         * @param {string} businessService The type of the insolvency procedure, leave blank for all
         * @param {string} [creditorId] The unique identifier for the creditor.
         * @param {string} [claimId] The unique identifier for the claim.
         * @param {string} [claimStatus] The status of the claim.
         * @param {string} [claimPriority] The priority of the claim.
         * @param {boolean} [dividendsPaid] Boolean indicating whether claim has received dividends.
         * @param {string} [claimType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [sspStatus] Unknown
         * @param {string} [transactionCodeId] Linked to the claimType. Hard to represent in the swagger definition.
         * @param {string} [status] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimsSearch(businessService: string, creditorId?: string, claimId?: string, claimStatus?: string, claimPriority?: string, dividendsPaid?: boolean, claimType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, sspStatus?: string, transactionCodeId?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimSearchResults> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).claimsSearch(businessService, creditorId, claimId, claimStatus, claimPriority, dividendsPaid, claimType, fromDate, toDate, creditorReference, estateNumber, sspStatus, transactionCodeId, status, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  linkes a linked estate from the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected * Specified estate is linked ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is delinked ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Delinkes a linked estate from the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        delinkEstate(claimNumber: string, estateNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).delinkEstate(claimNumber, estateNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Marks a claim as a duplicate and therefore inactive.  **** **Insolvency officer only**. Effectively removes the claim from the procedure, in terms of consideraion for dividends at least (audit will still be avialable).  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.   ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Claim record comments are updated to indicate which claim ws preferred to the duplicate. * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Preferred claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Duplicated claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Marks claim as a duplicate and removes from the active management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} duplicateClaimNumber * The unique identifier of the claim that is preferred as the representative claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        duplicateClaim(claimNumber: string, duplicateClaimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).duplicateClaim(claimNumber, duplicateClaimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Errors a claim. Erroring a claim is used to ...?  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Errored claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Errors claim / removes from management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        errorClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).errorClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Adds linked estate to the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is linked  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Adds linked estate to the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkEstate(claimNumber: string, estateNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).linkEstate(claimNumber, estateNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).linkFolio(claimNumber, folio, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Maintains claim metadata - can only be done by an insolvency officer. State transitions are done as separate operations.   ****   **UC Mapping:** Maintain Claim   ____ ### Pre-conditions * User is authenticated * Estate is searched for and selected ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / appropriate error is given ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case 1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Maintains / modifies an existing claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {MaintainClaimRecord} claimDetail The detail of the value(s) to be updated.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainClaim(claimNumber: string, claimDetail: MaintainClaimRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).maintainClaim(claimNumber, claimDetail, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised ____ ### Post-conditions * Claim record is created and associated to the estate * Audit record is created against claim  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | A claim waiting to be filled out by the |editor    <br /> ****  **Case 1* - 200: Potential claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />           
         * @summary Creates and links a new potential claim to an estate 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newClaim(claimNumber: string, upfile?: any, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).newClaim(claimNumber, upfile, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Takes a suspended claim and makes it a potential claim.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 1) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | Claim now has the status of potential |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'potential'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        potentialClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).potentialClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Takes a potential, received or vetted claim and rejects it.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Rejects a Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Rejected claim** | Rejected claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Rejects a claim. Irretrievably removes from the insolvency procedure.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rejectClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).rejectClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview  A fairly complex use case. Comes in to play where a potential claim is created by ITS, the invitation to complete it is then taken up by the creditor, and the creditor then creates a claim application with both preferential and unsecured claims. A second claim will be created containing the unsecured or secured claim detains - depending on what the original claim was.  **** Used by the system*.  ****   **UC Mapping:**  **** **QA / QC notes:** Not 100% sure that the process API needs this explicitly defined.  ****  ____ ### Pre-conditions * User is authenticated * Claim Application coming from a potential claim is submitted.   ____ ### Post-conditions * User authorisation is checked * Claim resource status is updated / or appropriate error is given  * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Split claim** | Split claim |   <br /> ****   **Case 1** - duplicated claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }       ]       
         * @summary Spawns a secondclaim as a result of a submitted claim application.
         * @param {string} claimNumber * The unique identifier for the claim to be split. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        splitClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimSearchResult> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).splitClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Suspends a claim from statuses of: vetted, admitted, received or potential.  **** May be done by an **Insolvency officer**.  ****   **UC Mapping:** Suspend Claim  **** ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Vetted    * Admitted    * Received    * Potential ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Suspended claim** | Suspended claim |   <br /> ****   **Case 1:** - Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Suspends a claim - removes a claim from the estate in a non-permanent way.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        suspendClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).suspendClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).unlinkFolio(claimNumber, folio, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Returns a claim to the status of received.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Received claim** | Claim now has the status of received |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'received'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsuspendClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).unsuspendClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Takes a Received  Claim (aka a claim with the status of \"Received\") and 'vets' the claim ready for review by the insolvency officer.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Vetted claim** | Vetted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Vets a claim - basic checking of the claim, can be performed by processing ready for review by the officer administering the estate (see /admit).
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        vetClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = ClaimsApiFetchParamCreator(configuration).vetClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * ClaimsApi - factory interface
 * @export
 */
export const ClaimsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options?: any) {
            return ClaimsApiFp(configuration).addFolio(claimNumber, upfile, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Takes a vetted Claim (aka a claim with the status of \"vetted\") and 'admits' the claim into the insolvency procedure proper (so the claim will no be given a priority, be investigated and or considered for dividends if there are any).   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Admitted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/received\",        \"rel\": \"claim.receive\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Admits a claim into the management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        admitClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).admitClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimAssets(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimAssets(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record createdt** | Record created |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEnterTime1(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimEnterTime1(claimNumber, options)(fetch, basePath);
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets evidence realted to a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Claim is current / selected ____ ### Post-conditions * Security permissions are checked * rearch result is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Evidence result** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Evidence result             \"links\": [            ## ----------------- Navigation links -----------------             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"self\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimEvidences(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimEvidences(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimFolios(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimLinkAsset(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimLinkAsset(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
         * @summary HATEOAS PLACEHOLDER
         * @param {string} claimNumber The unique identifier for the claim 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimUnlinkAsset(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimUnlinkAsset(claimNumber, options)(fetch, basePath);
        },
        /**
         * ### Overview  **UC Mapping:**     **Description:** Gets a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Calim is current / se;ected ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Unsubmitted claim application             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration,\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"claimRegistrations.evidence\",        \"method\": \"GET\"      }           ]     
         * @summary Returns the original claim as submitted by the creditor.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimclaimRegistrations(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claimclaimRegistrations(claimNumber, options)(fetch, basePath);
        },
        /**
         * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim * Internal only  **Description:** Gets a search result of claims associated to the current estate  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim detail record is returned / error is returned * Audit record is created in auditDB ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **404** | Not found  | Claim not found  / not authorised to view|  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case                             1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Returns a internal representation of a claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claims(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).claims(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Searches the insolvency register for claims.    * Privileged users only    * Public may not search for claims  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims from the insolvency register.
         * @param {string} businessService The type of the insolvency procedure, leave blank for all
         * @param {string} [creditorId] The unique identifier for the creditor.
         * @param {string} [claimId] The unique identifier for the claim.
         * @param {string} [claimStatus] The status of the claim.
         * @param {string} [claimPriority] The priority of the claim.
         * @param {boolean} [dividendsPaid] Boolean indicating whether claim has received dividends.
         * @param {string} [claimType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [sspStatus] Unknown
         * @param {string} [transactionCodeId] Linked to the claimType. Hard to represent in the swagger definition.
         * @param {string} [status] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimsSearch(businessService: string, creditorId?: string, claimId?: string, claimStatus?: string, claimPriority?: string, dividendsPaid?: boolean, claimType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, sspStatus?: string, transactionCodeId?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return ClaimsApiFp(configuration).claimsSearch(businessService, creditorId, claimId, claimStatus, claimPriority, dividendsPaid, claimType, fromDate, toDate, creditorReference, estateNumber, sspStatus, transactionCodeId, status, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
        /**
         *   ### Overview  linkes a linked estate from the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected * Specified estate is linked ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is delinked ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Delinkes a linked estate from the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        delinkEstate(claimNumber: string, estateNumber: string, options?: any) {
            return ClaimsApiFp(configuration).delinkEstate(claimNumber, estateNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Marks a claim as a duplicate and therefore inactive.  **** **Insolvency officer only**. Effectively removes the claim from the procedure, in terms of consideraion for dividends at least (audit will still be avialable).  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.   ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Claim record comments are updated to indicate which claim ws preferred to the duplicate. * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Preferred claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Duplicated claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Marks claim as a duplicate and removes from the active management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} duplicateClaimNumber * The unique identifier of the claim that is preferred as the representative claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        duplicateClaim(claimNumber: string, duplicateClaimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).duplicateClaim(claimNumber, duplicateClaimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Errors a claim. Erroring a claim is used to ...?  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Errored claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Errors claim / removes from management of the estate.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        errorClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).errorClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Adds linked estate to the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is linked  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Adds linked estate to the claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {string} estateNumber The estate to be delinked
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkEstate(claimNumber: string, estateNumber: string, options?: any) {
            return ClaimsApiFp(configuration).linkEstate(claimNumber, estateNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
            return ClaimsApiFp(configuration).linkFolio(claimNumber, folio, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Maintains claim metadata - can only be done by an insolvency officer. State transitions are done as separate operations.   ****   **UC Mapping:** Maintain Claim   ____ ### Pre-conditions * User is authenticated * Estate is searched for and selected ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / appropriate error is given ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case 1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
         * @summary Maintains / modifies an existing claim
         * @param {string} claimNumber * The unique identifier for the claim. 
         * @param {MaintainClaimRecord} claimDetail The detail of the value(s) to be updated.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainClaim(claimNumber: string, claimDetail: MaintainClaimRecord, options?: any) {
            return ClaimsApiFp(configuration).maintainClaim(claimNumber, claimDetail, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised ____ ### Post-conditions * Claim record is created and associated to the estate * Audit record is created against claim  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | A claim waiting to be filled out by the |editor    <br /> ****  **Case 1* - 200: Potential claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />           
         * @summary Creates and links a new potential claim to an estate 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newClaim(claimNumber: string, upfile?: any, options?: any) {
            return ClaimsApiFp(configuration).newClaim(claimNumber, upfile, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Takes a suspended claim and makes it a potential claim.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 1) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | Claim now has the status of potential |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'potential'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        potentialClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).potentialClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Takes a potential, received or vetted claim and rejects it.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Rejects a Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Rejected claim** | Rejected claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Rejects a claim. Irretrievably removes from the insolvency procedure.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        rejectClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).rejectClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview  A fairly complex use case. Comes in to play where a potential claim is created by ITS, the invitation to complete it is then taken up by the creditor, and the creditor then creates a claim application with both preferential and unsecured claims. A second claim will be created containing the unsecured or secured claim detains - depending on what the original claim was.  **** Used by the system*.  ****   **UC Mapping:**  **** **QA / QC notes:** Not 100% sure that the process API needs this explicitly defined.  ****  ____ ### Pre-conditions * User is authenticated * Claim Application coming from a potential claim is submitted.   ____ ### Post-conditions * User authorisation is checked * Claim resource status is updated / or appropriate error is given  * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Split claim** | Split claim |   <br /> ****   **Case 1** - duplicated claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }       ]       
         * @summary Spawns a secondclaim as a result of a submitted claim application.
         * @param {string} claimNumber * The unique identifier for the claim to be split. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        splitClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).splitClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Suspends a claim from statuses of: vetted, admitted, received or potential.  **** May be done by an **Insolvency officer**.  ****   **UC Mapping:** Suspend Claim  **** ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Vetted    * Admitted    * Received    * Potential ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Suspended claim** | Suspended claim |   <br /> ****   **Case 1:** - Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Suspends a claim - removes a claim from the estate in a non-permanent way.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        suspendClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).suspendClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
            return ClaimsApiFp(configuration).unlinkFolio(claimNumber, folio, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Returns a claim to the status of received.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Received claim** | Claim now has the status of received |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Removes a claim  from suspension and gives the claim a status of 'received'.
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unsuspendClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).unsuspendClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Takes a Received  Claim (aka a claim with the status of \"Received\") and 'vets' the claim ready for review by the insolvency officer.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Vetted claim** | Vetted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
         * @summary Vets a claim - basic checking of the claim, can be performed by processing ready for review by the officer administering the estate (see /admit).
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        vetClaim(claimNumber: string, options?: any) {
            return ClaimsApiFp(configuration).vetClaim(claimNumber, options)(fetch, basePath);
        },
    };
};

/**
 * ClaimsApi - object-oriented interface
 * @export
 * @class ClaimsApi
 * @extends {BaseAPI}
 */
export class ClaimsApi extends BaseAPI {
    /**
     *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Creates and links a new folio 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} [upfile] The file to upload.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public addFolio(claimNumber: string, upfile?: any, options?: any) {
        return ClaimsApiFp(this.configuration).addFolio(claimNumber, upfile, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Takes a vetted Claim (aka a claim with the status of \"vetted\") and 'admits' the claim into the insolvency procedure proper (so the claim will no be given a priority, be investigated and or considered for dividends if there are any).   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Admitted claim** | Admitted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/received\",        \"rel\": \"claim.receive\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Admits a claim into the management of the estate.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public admitClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).admitClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
     * @summary HATEOAS PLACEHOLDER
     * @param {} claimNumber The unique identifier for the claim 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimAssets(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimAssets(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record createdt** | Record created |   <br /> ****   **Case 1** - Record created       Placeholder             
     * @summary HATEOAS PLACEHOLDER
     * @param {} claimNumber The unique identifier for the claim 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimEnterTime1(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimEnterTime1(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview  **UC Mapping:**     **Description:** Gets evidence realted to a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Claim is current / selected ____ ### Post-conditions * Security permissions are checked * rearch result is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Evidence result** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Evidence result             \"links\": [            ## ----------------- Navigation links -----------------             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"self\",        \"method\": \"GET\"      }           ]     
     * @summary Returns the original claim as submitted by the creditor.
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimEvidences(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimEvidences(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
     * @summary Returns folios associated to a claim. 
     * @param {} claimNumber The claim that we are usings as the basis for out folio search
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimFolios(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimFolios(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
     * @summary HATEOAS PLACEHOLDER
     * @param {} claimNumber The unique identifier for the claim 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimLinkAsset(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimLinkAsset(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Enters time against an estate for the purposes of cost recovery.     **** **Users:** Insolvency officers and system    ****   **UC Mapping:**  ****   ____ ### Pre-conditions * User is logged in   ____ ### Post-conditions * ...? * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Estate not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Record returned** | Record returned |   <br /> ****   **Case 1** - Record created       Placeholder             
     * @summary HATEOAS PLACEHOLDER
     * @param {} claimNumber The unique identifier for the claim 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimUnlinkAsset(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimUnlinkAsset(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview  **UC Mapping:**     **Description:** Gets a pre-existing claims application associated with the claim.  ____ ### Pre-conditions * User is authenticated * Calim is current / se;ected ____ ### Post-conditions * Security permissions are checked * Claim application detail record is returned / error is returned * Audit record is created in auditDB (do we need to audit this?)  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to view | | **404** | Not found  | Claim application not found  | | **5xx** | Server Error  | Internal / network errors |  ### HTTP codes + HATEOAS links | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim application** | Claim applications are in no way actionable or editable for an insolvency officer.|  <br /> ****  **Case 1** - 200: Unsubmitted claim application             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration,\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claim/12342/claim-registration/evidence\",        \"rel\": \"claimRegistrations.evidence\",        \"method\": \"GET\"      }           ]     
     * @summary Returns the original claim as submitted by the creditor.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimclaimRegistrations(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimclaimRegistrations(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview  **UC Mapping:**  **UC Mapping:** View Claim * Internal only  **Description:** Gets a search result of claims associated to the current estate  ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Security permissions are checked * Claim detail record is returned / error is returned * Audit record is created in auditDB ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **404** | Not found  | Claim not found  / not authorised to view|  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case                             1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
     * @summary Returns a internal representation of a claim
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claims(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).claims(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Searches the insolvency register for claims.    * Privileged users only    * Public may not search for claims  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of claims from the insolvency register.
     * @param {} businessService The type of the insolvency procedure, leave blank for all
     * @param {} [creditorId] The unique identifier for the creditor.
     * @param {} [claimId] The unique identifier for the claim.
     * @param {} [claimStatus] The status of the claim.
     * @param {} [claimPriority] The priority of the claim.
     * @param {} [dividendsPaid] Boolean indicating whether claim has received dividends.
     * @param {} [claimType] The type of the claim
     * @param {} [fromDate] The date from which to search e.g 04-Dec-2017
     * @param {} [toDate] The date to which to search e.g. 07-Dec-2017
     * @param {} [creditorReference] The creditors reference identifier.
     * @param {} [estateNumber] The estate that the claim belongs to.
     * @param {} [sspStatus] Unknown
     * @param {} [transactionCodeId] Linked to the claimType. Hard to represent in the swagger definition.
     * @param {} [status] The state of the insolvency procedure, leave blank for all
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public claimsSearch(businessService: string, creditorId?: string, claimId?: string, claimStatus?: string, claimPriority?: string, dividendsPaid?: boolean, claimType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, sspStatus?: string, transactionCodeId?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return ClaimsApiFp(this.configuration).claimsSearch(businessService, creditorId, claimId, claimStatus, claimPriority, dividendsPaid, claimType, fromDate, toDate, creditorReference, estateNumber, sspStatus, transactionCodeId, status, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  linkes a linked estate from the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected * Specified estate is linked ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is delinked ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
     * @summary Delinkes a linked estate from the claim
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {} estateNumber The estate to be delinked
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public delinkEstate(claimNumber: string, estateNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).delinkEstate(claimNumber, estateNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Marks a claim as a duplicate and therefore inactive.  **** **Insolvency officer only**. Effectively removes the claim from the procedure, in terms of consideraion for dividends at least (audit will still be avialable).  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.   ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Claim record comments are updated to indicate which claim ws preferred to the duplicate. * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Preferred claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Duplicated claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Marks claim as a duplicate and removes from the active management of the estate.
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {} duplicateClaimNumber * The unique identifier of the claim that is preferred as the representative claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public duplicateClaim(claimNumber: string, duplicateClaimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).duplicateClaim(claimNumber, duplicateClaimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Errors a claim. Erroring a claim is used to ...?  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Errored claim** | Claim now has the status of errored |   <br /> ****   **Case 1** - errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Errors claim / removes from management of the estate.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public errorClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).errorClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Adds linked estate to the claim   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / estate is linked  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated | | **500** | Server error | .. |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1** - 200: Unvetted claim             \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
     * @summary Adds linked estate to the claim
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {} estateNumber The estate to be delinked
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public linkEstate(claimNumber: string, estateNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).linkEstate(claimNumber, estateNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Links an existing folio to a claim 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} folio The folio record
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public linkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
        return ClaimsApiFp(this.configuration).linkFolio(claimNumber, folio, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Maintains claim metadata - can only be done by an insolvency officer. State transitions are done as separate operations.   ****   **UC Mapping:** Maintain Claim   ____ ### Pre-conditions * User is authenticated * Estate is searched for and selected ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / appropriate error is given ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected claim** | Previously rejected claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  | | **8** | **200: Potential claim** |**DELIBERATELY OMITTED** Potential claims aren't really claims until completed <br /> by the creditor. so these treated as a separate business object in this API definition.|  <br /> ****  **Case 1** - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ] 
     * @summary Maintains / modifies an existing claim
     * @param {} claimNumber * The unique identifier for the claim. 
     * @param {} claimDetail The detail of the value(s) to be updated.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public maintainClaim(claimNumber: string, claimDetail: MaintainClaimRecord, options?: any) {
        return ClaimsApiFp(this.configuration).maintainClaim(claimNumber, claimDetail, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised ____ ### Post-conditions * Claim record is created and associated to the estate * Audit record is created against claim  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | A claim waiting to be filled out by the |editor    <br /> ****  **Case 1* - 200: Potential claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />           
     * @summary Creates and links a new potential claim to an estate 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} [upfile] The file to upload.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public newClaim(claimNumber: string, upfile?: any, options?: any) {
        return ClaimsApiFp(this.configuration).newClaim(claimNumber, upfile, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Takes a suspended claim and makes it a potential claim.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 1) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Potential claim** | Claim now has the status of potential |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Removes a claim  from suspension and gives the claim a status of 'potential'.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public potentialClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).potentialClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Takes a potential, received or vetted claim and rejects it.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Rejects a Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Potential    * Received    * Vetted ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Rejected claim** | Rejected claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Rejects a claim. Irretrievably removes from the insolvency procedure.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public rejectClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).rejectClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview  A fairly complex use case. Comes in to play where a potential claim is created by ITS, the invitation to complete it is then taken up by the creditor, and the creditor then creates a claim application with both preferential and unsecured claims. A second claim will be created containing the unsecured or secured claim detains - depending on what the original claim was.  **** Used by the system*.  ****   **UC Mapping:**  **** **QA / QC notes:** Not 100% sure that the process API needs this explicitly defined.  ****  ____ ### Pre-conditions * User is authenticated * Claim Application coming from a potential claim is submitted.   ____ ### Post-conditions * User authorisation is checked * Claim resource status is updated / or appropriate error is given  * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Split claim** | Split claim |   <br /> ****   **Case 1** - duplicated claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }       ]       
     * @summary Spawns a secondclaim as a result of a submitted claim application.
     * @param {} claimNumber * The unique identifier for the claim to be split. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public splitClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).splitClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Suspends a claim from statuses of: vetted, admitted, received or potential.  **** May be done by an **Insolvency officer**.  ****   **UC Mapping:** Suspend Claim  **** ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status equal to one of:    * Vetted    * Admitted    * Received    * Potential ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Suspended claim** | Suspended claim |   <br /> ****   **Case 1:** - Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Suspends a claim - removes a claim from the estate in a non-permanent way.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public suspendClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).suspendClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Links an existing folio to a claim 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} folio The folio record
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
        return ClaimsApiFp(this.configuration).unlinkFolio(claimNumber, folio, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Returns a claim to the status of received.  **** **Insolvency officer only**. Removes the claim from suspension.  ****   **UC Mapping:** Unsuspend Claim (case 2) ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  * Claim has status of:    * Suspended ____ ### Post-conditions * User authorisation is checked * Claim resource is updated / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Received claim** | Claim now has the status of received |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/linkedclaims\",        \"rel\": \"claim.linked_claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.audit_logs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Removes a claim  from suspension and gives the claim a status of 'received'.
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public unsuspendClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).unsuspendClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Takes a Received  Claim (aka a claim with the status of \"Received\") and 'vets' the claim ready for review by the insolvency officer.   **** May  be done by an **Insolvency officer or vetting staff**.  ****   **UC Mapping:** Vet Claim  ****  ____ ### Pre-conditions * User is authenticated * Claim is selected / current.  ____ ### Post-conditions * User authorisation is checked * Claim resources is updated / or appropriate error is given * Workflow created * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Vetted claim** | Vetted claim |   <br /> ****   **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            ] 
     * @summary Vets a claim - basic checking of the claim, can be performed by processing ready for review by the officer administering the estate (see /admit).
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClaimsApi
     */
    public vetClaim(claimNumber: string, options?: any) {
        return ClaimsApiFp(this.configuration).vetClaim(claimNumber, options)(this.fetch, this.basePath);
    }

}

/**
 * ContactsApi - fetch parameter creator
 * @export
 */
export const ContactsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *  ____ ### Overview    Allows an insolvency officer to act for a deceased participant in an insolvency prodecure.     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated with the current contact are disabled (not deleted - leaving room for error).  * Target contact is added to all claims & estates that the current contact is a party to (target replaces current).  * Note that target contact is NOT deleted but remains as a deceased contact  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Allow executor to act in the insolvency proecedure.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        appointExecutor(contactId: number, targetAccount: number, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling appointExecutor.');
            }
            // verify required parameter 'targetAccount' is not null or undefined
            if (targetAccount === null || targetAccount === undefined) {
                throw new RequiredError('targetAccount','Required parameter targetAccount was null or undefined when calling appointExecutor.');
            }
            const localVarPath = `/contacts/{contact_id}/appoint-executor`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (targetAccount !== undefined) {
                localVarQueryParameter['target_account'] = targetAccount;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an address
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddress(contactId: string, addressId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactAddress.');
            }
            // verify required parameter 'addressId' is not null or undefined
            if (addressId === null || addressId === undefined) {
                throw new RequiredError('addressId','Required parameter addressId was null or undefined when calling contactAddress.');
            }
            const localVarPath = `/contacts/{contact_id}/addresses/{address_id}`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)))
                .replace(`{${"address_id"}}`, encodeURIComponent(String(addressId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of addresses related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of addresses related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddresses(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactAddresses.');
            }
            const localVarPath = `/contacts/{contact_id}/addresses`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the contact name. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateName(contactId: string, nameId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactAlternateName.');
            }
            // verify required parameter 'nameId' is not null or undefined
            if (nameId === null || nameId === undefined) {
                throw new RequiredError('nameId','Required parameter nameId was null or undefined when calling contactAlternateName.');
            }
            const localVarPath = `/contacts/{contact_id}/names/{name_id}`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)))
                .replace(`{${"name_id"}}`, encodeURIComponent(String(nameId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of alternate names related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary Gets a search result of alternate names related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateNames(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactAlternateNames.');
            }
            const localVarPath = `/contacts/{contact_id}/names`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview  Lists the claims associated with an individual system user.    ____ ** UC Mapping: **   ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN   ____  ### Pre-conditions  * User is authenticated & authorised  ____  ### Post-conditions  * Search result is returned  ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Search result |    ### Links        -- Not applicable --   
         * @summary Gets a search result of claims related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactClaims(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactClaims.');
            }
            const localVarPath = `/contacts/{contact_id}/claims`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ____ ### Overview    Allows an insolvency userto mark a contact as being deceased.      May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user account)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated contact are disabled (not deleted - leaving room for error).  * Suppress correspondence flag is set.  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Marks a contact record as deceased.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactDeceased(contactId: number, targetAccount: number, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactDeceased.');
            }
            // verify required parameter 'targetAccount' is not null or undefined
            if (targetAccount === null || targetAccount === undefined) {
                throw new RequiredError('targetAccount','Required parameter targetAccount was null or undefined when calling contactDeceased.');
            }
            const localVarPath = `/contacts/{contact_id}/deceased`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (targetAccount !== undefined) {
                localVarQueryParameter['target_account'] = targetAccount;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of estates related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of estates related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactEstates(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactEstates.');
            }
            const localVarPath = `/contacts/{contact_id}/estates`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of identities related to the contact      ****     **UC Mapping:**         **Permissions: ** Users can only view thier own identities      ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of identities related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactIdentities(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactIdentities.');
            }
            const localVarPath = `/contacts/{contact_id}/user-account/identities`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   * COntact record is current / selected   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Contact record |      ### Links          Placeholder    
         * @summary Maintains contact record details.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {FullContactRecord} contactRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintain(contactId: string, contactRecord: FullContactRecord, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactMaintain.');
            }
            // verify required parameter 'contactRecord' is not null or undefined
            if (contactRecord === null || contactRecord === undefined) {
                throw new RequiredError('contactRecord','Required parameter contactRecord was null or undefined when calling contactMaintain.');
            }
            const localVarPath = `/contacts/{contact_id}/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(contactRecord || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      Modifies an address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Address record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Modifies an address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAddress(contactId: string, addressId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactMaintainAddress.');
            }
            // verify required parameter 'addressId' is not null or undefined
            if (addressId === null || addressId === undefined) {
                throw new RequiredError('addressId','Required parameter addressId was null or undefined when calling contactMaintainAddress.');
            }
            const localVarPath = `/contacts/{contact_id}/addresses/{address_id}/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)))
                .replace(`{${"address_id"}}`, encodeURIComponent(String(addressId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Name record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the name record. 
         * @param {NameRecord} modifiedName * The unique identifier for the name record. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAlternateName(contactId: string, nameId: string, modifiedName: NameRecord, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactMaintainAlternateName.');
            }
            // verify required parameter 'nameId' is not null or undefined
            if (nameId === null || nameId === undefined) {
                throw new RequiredError('nameId','Required parameter nameId was null or undefined when calling contactMaintainAlternateName.');
            }
            // verify required parameter 'modifiedName' is not null or undefined
            if (modifiedName === null || modifiedName === undefined) {
                throw new RequiredError('modifiedName','Required parameter modifiedName was null or undefined when calling contactMaintainAlternateName.');
            }
            const localVarPath = `/contacts/{contact_id}/names/{name_id}/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)))
                .replace(`{${"name_id"}}`, encodeURIComponent(String(nameId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(modifiedName || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Address record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Creates a new address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} alternateNameId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAddress(contactId: string, alternateNameId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactNewAddress.');
            }
            // verify required parameter 'alternateNameId' is not null or undefined
            if (alternateNameId === null || alternateNameId === undefined) {
                throw new RequiredError('alternateNameId','Required parameter alternateNameId was null or undefined when calling contactNewAddress.');
            }
            const localVarPath = `/contacts/{contact_id}/addresses/new`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)))
                .replace(`{${"alternate_name_id"}}`, encodeURIComponent(String(alternateNameId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {NameRecord} newName * The json name record payload 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAlternateName(contactId: string, newName: NameRecord, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactNewAlternateName.');
            }
            // verify required parameter 'newName' is not null or undefined
            if (newName === null || newName === undefined) {
                throw new RequiredError('newName','Required parameter newName was null or undefined when calling contactNewAlternateName.');
            }
            const localVarPath = `/contacts/{contact_id}/names/new`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(newName || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of organisations relted to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of organisations related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactOrganisations(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactOrganisations.');
            }
            const localVarPath = `/contacts/{contact_id}/organisations`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves current payment detail settings settings for the contact record      ****     **UC Mapping: **     ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN     ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment-details record |      ### Links          Placeholder    
         * @summary Retrieves current payment detail settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPaymentSettings(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactPaymentSettings.');
            }
            const localVarPath = `/contacts/{contact_id}/payment-details`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves current preferences / communication settings for the contact record      ****     **UC Mapping: **       ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Preferences record |      ### Links          Placeholder    
         * @summary Retrieves current preferences / communication settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPreferences(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactPreferences.');
            }
            const localVarPath = `/contacts/{contact_id}/preferences`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles available to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactRoles(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactRoles.');
            }
            const localVarPath = `/contacts/{contact_id}/roles`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * **Search the insolvency & SIO registers for a contact.**   * Objective is to avoid duplication & encourage re-use   * Aid positive identification   * UX-UI flows should make it harder to create a contact than to re-use one    **NOTES FOR SEARCH INDEX POPULATION:**   * Aliases and names should be peers in terms of search, with a minor preference given to a primary name where there are multiple matches   * Contact name should be returned next to alias in search result string(s)   * Index to return a **graph** of contacts (people), phone numbers, addresses, and organisations associated to the contact       * Contact to contact graph       * Address to contact graph       * Company to contact graph       * Phone number to contact graph        **Intended behaviour:** it is intended that this functionality be used to implement typeahead searches possibly as a single search combo box - *in the short term it is possibly simpler but a lot less elegant and a lot less fun to implement as multiple typeaheads*.          --- SOME SEARCH PARAMETERS NOT IMPLEMENTED ---         The following booleans have not been carried over into this design:         * Show all addresses         * Withhold         * Main contact         * Protect from edit         
         * @summary Search for a contact
         * @param {string} [addresses] **Single search combo box for:** * Physical &amp; Postal Addresses (only those populated against a contact - not all of PAF / NZAD)   *__Traceability to existing search parameters:__*   * Street Name   * Region   * Suburb   * Country   * City / Town * Email addresses (in use on a contact) * Social media addresses (in use on a contact) * Phone numbers 
         * @param {string} [names] * Searches **both** primary contact and alias records. * Ideally implemented as typeahead  **Traceability to current search:** This parameter is intended to implement all of the following existing search parameters... * Last Name * First Name * Middle Name(s) * Organisation Name  and, in addition, should search any associated aliases for these same fields. 
         * @param {boolean} [excludeNotInUse] * Excludes contacts that are not in use (so; not associated to an estate) from the scope of the search. 
         * @param {boolean} [excludeBranches] * Excludes branches from the scope of the search. 
         * @param {boolean} [excludeAlternate] * Excludes aliases and secondary addresses from the scope of the search. * Very bad idea, would like to deprecate if possible. 
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearch(addresses?: string, names?: string, excludeNotInUse?: boolean, excludeBranches?: boolean, excludeAlternate?: boolean, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            const localVarPath = `/contacts/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (addresses !== undefined) {
                localVarQueryParameter['addresses'] = addresses;
            }

            if (names !== undefined) {
                localVarQueryParameter['names'] = names;
            }

            if (excludeNotInUse !== undefined) {
                localVarQueryParameter['excludeNotInUse'] = excludeNotInUse;
            }

            if (excludeBranches !== undefined) {
                localVarQueryParameter['excludeBranches'] = excludeBranches;
            }

            if (excludeAlternate !== undefined) {
                localVarQueryParameter['excludeAlternate'] = excludeAlternate;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview      Retrieves a contact record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets a contact record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contacts(contactId: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contacts.');
            }
            const localVarPath = `/contacts/{contact_id}`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  # ------------------------------ # Not in scope of current phase # ------------------------------ ____ ### Overview    Allows a user to link / merge together multiple identities if they have ended up with multiple OASIS accounts for whatever reason      User will be required to authenticate to the target account      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses from the target are added to the current contact.      ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * Target contact is marked as deleted.  * All authentication tokens and links are deleted from target contact  * All authentication tokens and links are copied to current contact  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary FUTURE  links an addtional identity to the contact record
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkAccount(contactId: number, targetAccount: number, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling linkAccount.');
            }
            // verify required parameter 'targetAccount' is not null or undefined
            if (targetAccount === null || targetAccount === undefined) {
                throw new RequiredError('targetAccount','Required parameter targetAccount was null or undefined when calling linkAccount.');
            }
            const localVarPath = `/contacts/{contact_id}/link-account`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (targetAccount !== undefined) {
                localVarQueryParameter['target_account'] = targetAccount;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Updates adjudication details related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates adjudication details related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainAdjudicationDetails(contactId: string, paymentDetails: PlaceHolderModel, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling maintainAdjudicationDetails.');
            }
            // verify required parameter 'paymentDetails' is not null or undefined
            if (paymentDetails === null || paymentDetails === undefined) {
                throw new RequiredError('paymentDetails','Required parameter paymentDetails was null or undefined when calling maintainAdjudicationDetails.');
            }
            const localVarPath = `/contacts/{contact_id}/adjudication-details/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(paymentDetails || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates payment settings related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {ContactPaymentDetailRecord} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPaymentSettings(contactId: string, paymentDetails: ContactPaymentDetailRecord, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling maintainContactPaymentSettings.');
            }
            // verify required parameter 'paymentDetails' is not null or undefined
            if (paymentDetails === null || paymentDetails === undefined) {
                throw new RequiredError('paymentDetails','Required parameter paymentDetails was null or undefined when calling maintainContactPaymentSettings.');
            }
            const localVarPath = `/contacts/{contact_id}/payment-detail/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(paymentDetails || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Updates comminication preferrences      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary TO BE REMOVED (TBC) - as per conversation with Jenny on the 26/1/18
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPreferences(contactId: string, paymentDetails: PlaceHolderModel, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling maintainContactPreferences.');
            }
            // verify required parameter 'paymentDetails' is not null or undefined
            if (paymentDetails === null || paymentDetails === undefined) {
                throw new RequiredError('paymentDetails','Required parameter paymentDetails was null or undefined when calling maintainContactPreferences.');
            }
            const localVarPath = `/contacts/{contact_id}/preferences/maintain`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(paymentDetails || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ____ ### Overview    Allows an insolvency user merge together multiple contacts.       May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user aacount)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  * Target contact does not have an active user account associated.  ____  ### Post-conditions  * Target contact is marked as deleted.  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Joins contact records together.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        mergeContact(contactId: number, targetAccount: number, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling mergeContact.');
            }
            // verify required parameter 'targetAccount' is not null or undefined
            if (targetAccount === null || targetAccount === undefined) {
                throw new RequiredError('targetAccount','Required parameter targetAccount was null or undefined when calling mergeContact.');
            }
            const localVarPath = `/contacts/{contact_id}/merge-contact`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (targetAccount !== undefined) {
                localVarQueryParameter['target_account'] = targetAccount;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview  Create a new contact record.     **** **Users:** Insolvency officers and system  * Create contact from investagative activity - Insolvency Officer * Create contact from statement of affairs - System * Create contact from claim application - Creditor (this is a bit of an assumption that the user will be forced into a discreet account creation activity, UI/UX may see this done by the 'system')  ****   **UC Mapping:** New Contact  **** **QA / QC notes:** We are beginning the process of refactoring contact into more discreet and contained impllementations. There may be more to be done here. ****  ____ ### Pre-conditions * none   ____ ### Post-conditions * User authorisation is checked * Contact resource is created / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Contact not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: New contact** | New contact |   <br /> ****   **Case 1** - New contact created       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact\",        \"rel\": \"contact.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/auditlogs\",        \"rel\": \"contact.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/estates\",        \"rel\": \"contact.estates\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/claims\",        \"rel\": \"contact.claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/organisations\",        \"rel\": \"contact.organisations\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/accounts\",        \"rel\": \"contact.accounts\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462/maintain\",        \"rel\": \"contact.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"POST\"      },       {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/linkaccount\",        \"rel\": \"contact.linkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.unlinkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.mergecontact\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/deceased\",        \"rel\": \"contact.deceased\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.supresscorrespondence\",        \"method\": \"POST\"                # move this one into preferences maybe?      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/protectfromedit\",        \"rel\": \"contact.protectfromedit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/withholdadress\",        \"rel\": \"contact.wihtholdaddress\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/appointexecutor\",        \"rel\": \"contact.appointexecutor\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      }      ]       
         * @summary Creates a contact record for a human or organisation to be used in an insolvency.
         * @param {FullContactRecord} contactRecord The detail of the new contact record to be created. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newContact(contactRecord: FullContactRecord, options: any = {}): FetchArgs {
            // verify required parameter 'contactRecord' is not null or undefined
            if (contactRecord === null || contactRecord === undefined) {
                throw new RequiredError('contactRecord','Required parameter contactRecord was null or undefined when calling newContact.');
            }
            const localVarPath = `/contacts/new`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(contactRecord || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ContactsApi - functional programming interface
 * @export
 */
export const ContactsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *  ____ ### Overview    Allows an insolvency officer to act for a deceased participant in an insolvency prodecure.     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated with the current contact are disabled (not deleted - leaving room for error).  * Target contact is added to all claims & estates that the current contact is a party to (target replaces current).  * Note that target contact is NOT deleted but remains as a deceased contact  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Allow executor to act in the insolvency proecedure.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        appointExecutor(contactId: number, targetAccount: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).appointExecutor(contactId, targetAccount, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an address
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddress(contactId: string, addressId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactAddress(contactId, addressId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of addresses related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of addresses related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddresses(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactAddresses(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the contact name. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateName(contactId: string, nameId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NameRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactAlternateName(contactId, nameId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of alternate names related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary Gets a search result of alternate names related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateNames(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NameSearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactAlternateNames(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview  Lists the claims associated with an individual system user.    ____ ** UC Mapping: **   ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN   ____  ### Pre-conditions  * User is authenticated & authorised  ____  ### Post-conditions  * Search result is returned  ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Search result |    ### Links        -- Not applicable --   
         * @summary Gets a search result of claims related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactClaims(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimSearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactClaims(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ____ ### Overview    Allows an insolvency userto mark a contact as being deceased.      May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user account)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated contact are disabled (not deleted - leaving room for error).  * Suppress correspondence flag is set.  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Marks a contact record as deceased.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactDeceased(contactId: number, targetAccount: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactDeceased(contactId, targetAccount, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of estates related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of estates related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactEstates(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactEstates(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of identities related to the contact      ****     **UC Mapping:**         **Permissions: ** Users can only view thier own identities      ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of identities related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactIdentities(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<IdentitySearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactIdentities(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   * COntact record is current / selected   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Contact record |      ### Links          Placeholder    
         * @summary Maintains contact record details.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {FullContactRecord} contactRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintain(contactId: string, contactRecord: FullContactRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactMaintain(contactId, contactRecord, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      Modifies an address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Address record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Modifies an address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAddress(contactId: string, addressId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactMaintainAddress(contactId, addressId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Name record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the name record. 
         * @param {NameRecord} modifiedName * The unique identifier for the name record. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAlternateName(contactId: string, nameId: string, modifiedName: NameRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NameRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactMaintainAlternateName(contactId, nameId, modifiedName, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Address record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Creates a new address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} alternateNameId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAddress(contactId: string, alternateNameId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactNewAddress(contactId, alternateNameId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {NameRecord} newName * The json name record payload 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAlternateName(contactId: string, newName: NameRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NameRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactNewAlternateName(contactId, newName, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of organisations relted to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of organisations related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactOrganisations(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrganisationSearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactOrganisations(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves current payment detail settings settings for the contact record      ****     **UC Mapping: **     ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN     ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment-details record |      ### Links          Placeholder    
         * @summary Retrieves current payment detail settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPaymentSettings(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ContactPaymentDetailRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactPaymentSettings(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves current preferences / communication settings for the contact record      ****     **UC Mapping: **       ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Preferences record |      ### Links          Placeholder    
         * @summary Retrieves current preferences / communication settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPreferences(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactPreferences(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles available to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactRoles(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleSearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactRoles(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * **Search the insolvency & SIO registers for a contact.**   * Objective is to avoid duplication & encourage re-use   * Aid positive identification   * UX-UI flows should make it harder to create a contact than to re-use one    **NOTES FOR SEARCH INDEX POPULATION:**   * Aliases and names should be peers in terms of search, with a minor preference given to a primary name where there are multiple matches   * Contact name should be returned next to alias in search result string(s)   * Index to return a **graph** of contacts (people), phone numbers, addresses, and organisations associated to the contact       * Contact to contact graph       * Address to contact graph       * Company to contact graph       * Phone number to contact graph        **Intended behaviour:** it is intended that this functionality be used to implement typeahead searches possibly as a single search combo box - *in the short term it is possibly simpler but a lot less elegant and a lot less fun to implement as multiple typeaheads*.          --- SOME SEARCH PARAMETERS NOT IMPLEMENTED ---         The following booleans have not been carried over into this design:         * Show all addresses         * Withhold         * Main contact         * Protect from edit         
         * @summary Search for a contact
         * @param {string} [addresses] **Single search combo box for:** * Physical &amp; Postal Addresses (only those populated against a contact - not all of PAF / NZAD)   *__Traceability to existing search parameters:__*   * Street Name   * Region   * Suburb   * Country   * City / Town * Email addresses (in use on a contact) * Social media addresses (in use on a contact) * Phone numbers 
         * @param {string} [names] * Searches **both** primary contact and alias records. * Ideally implemented as typeahead  **Traceability to current search:** This parameter is intended to implement all of the following existing search parameters... * Last Name * First Name * Middle Name(s) * Organisation Name  and, in addition, should search any associated aliases for these same fields. 
         * @param {boolean} [excludeNotInUse] * Excludes contacts that are not in use (so; not associated to an estate) from the scope of the search. 
         * @param {boolean} [excludeBranches] * Excludes branches from the scope of the search. 
         * @param {boolean} [excludeAlternate] * Excludes aliases and secondary addresses from the scope of the search. * Very bad idea, would like to deprecate if possible. 
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearch(addresses?: string, names?: string, excludeNotInUse?: boolean, excludeBranches?: boolean, excludeAlternate?: boolean, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ContactSearchResults> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contactSearch(addresses, names, excludeNotInUse, excludeBranches, excludeAlternate, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview      Retrieves a contact record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets a contact record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contacts(contactId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).contacts(contactId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  # ------------------------------ # Not in scope of current phase # ------------------------------ ____ ### Overview    Allows a user to link / merge together multiple identities if they have ended up with multiple OASIS accounts for whatever reason      User will be required to authenticate to the target account      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses from the target are added to the current contact.      ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * Target contact is marked as deleted.  * All authentication tokens and links are deleted from target contact  * All authentication tokens and links are copied to current contact  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary FUTURE  links an addtional identity to the contact record
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkAccount(contactId: number, targetAccount: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).linkAccount(contactId, targetAccount, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Updates adjudication details related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates adjudication details related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainAdjudicationDetails(contactId: string, paymentDetails: PlaceHolderModel, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).maintainAdjudicationDetails(contactId, paymentDetails, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates payment settings related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {ContactPaymentDetailRecord} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPaymentSettings(contactId: string, paymentDetails: ContactPaymentDetailRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).maintainContactPaymentSettings(contactId, paymentDetails, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Updates comminication preferrences      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary TO BE REMOVED (TBC) - as per conversation with Jenny on the 26/1/18
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPreferences(contactId: string, paymentDetails: PlaceHolderModel, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).maintainContactPreferences(contactId, paymentDetails, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ____ ### Overview    Allows an insolvency user merge together multiple contacts.       May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user aacount)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  * Target contact does not have an active user account associated.  ____  ### Post-conditions  * Target contact is marked as deleted.  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Joins contact records together.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        mergeContact(contactId: number, targetAccount: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).mergeContact(contactId, targetAccount, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview  Create a new contact record.     **** **Users:** Insolvency officers and system  * Create contact from investagative activity - Insolvency Officer * Create contact from statement of affairs - System * Create contact from claim application - Creditor (this is a bit of an assumption that the user will be forced into a discreet account creation activity, UI/UX may see this done by the 'system')  ****   **UC Mapping:** New Contact  **** **QA / QC notes:** We are beginning the process of refactoring contact into more discreet and contained impllementations. There may be more to be done here. ****  ____ ### Pre-conditions * none   ____ ### Post-conditions * User authorisation is checked * Contact resource is created / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Contact not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: New contact** | New contact |   <br /> ****   **Case 1** - New contact created       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact\",        \"rel\": \"contact.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/auditlogs\",        \"rel\": \"contact.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/estates\",        \"rel\": \"contact.estates\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/claims\",        \"rel\": \"contact.claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/organisations\",        \"rel\": \"contact.organisations\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/accounts\",        \"rel\": \"contact.accounts\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462/maintain\",        \"rel\": \"contact.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"POST\"      },       {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/linkaccount\",        \"rel\": \"contact.linkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.unlinkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.mergecontact\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/deceased\",        \"rel\": \"contact.deceased\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.supresscorrespondence\",        \"method\": \"POST\"                # move this one into preferences maybe?      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/protectfromedit\",        \"rel\": \"contact.protectfromedit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/withholdadress\",        \"rel\": \"contact.wihtholdaddress\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/appointexecutor\",        \"rel\": \"contact.appointexecutor\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      }      ]       
         * @summary Creates a contact record for a human or organisation to be used in an insolvency.
         * @param {FullContactRecord} contactRecord The detail of the new contact record to be created. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newContact(contactRecord: FullContactRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FullContactRecord> {
            const localVarFetchArgs = ContactsApiFetchParamCreator(configuration).newContact(contactRecord, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * ContactsApi - factory interface
 * @export
 */
export const ContactsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *  ____ ### Overview    Allows an insolvency officer to act for a deceased participant in an insolvency prodecure.     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated with the current contact are disabled (not deleted - leaving room for error).  * Target contact is added to all claims & estates that the current contact is a party to (target replaces current).  * Note that target contact is NOT deleted but remains as a deceased contact  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Allow executor to act in the insolvency proecedure.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        appointExecutor(contactId: number, targetAccount: number, options?: any) {
            return ContactsApiFp(configuration).appointExecutor(contactId, targetAccount, options)(fetch, basePath);
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an address
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddress(contactId: string, addressId: string, options?: any) {
            return ContactsApiFp(configuration).contactAddress(contactId, addressId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of addresses related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of addresses related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAddresses(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactAddresses(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the contact name. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateName(contactId: string, nameId: string, options?: any) {
            return ContactsApiFp(configuration).contactAlternateName(contactId, nameId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of alternate names related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary Gets a search result of alternate names related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactAlternateNames(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactAlternateNames(contactId, options)(fetch, basePath);
        },
        /**
         *  ### Overview  Lists the claims associated with an individual system user.    ____ ** UC Mapping: **   ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN   ____  ### Pre-conditions  * User is authenticated & authorised  ____  ### Post-conditions  * Search result is returned  ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Search result |    ### Links        -- Not applicable --   
         * @summary Gets a search result of claims related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactClaims(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactClaims(contactId, options)(fetch, basePath);
        },
        /**
         *  ____ ### Overview    Allows an insolvency userto mark a contact as being deceased.      May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user account)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated contact are disabled (not deleted - leaving room for error).  * Suppress correspondence flag is set.  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Marks a contact record as deceased.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactDeceased(contactId: number, targetAccount: number, options?: any) {
            return ContactsApiFp(configuration).contactDeceased(contactId, targetAccount, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of estates related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of estates related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactEstates(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactEstates(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of identities related to the contact      ****     **UC Mapping:**         **Permissions: ** Users can only view thier own identities      ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of identities related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactIdentities(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactIdentities(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   * COntact record is current / selected   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Contact record |      ### Links          Placeholder    
         * @summary Maintains contact record details.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {FullContactRecord} contactRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintain(contactId: string, contactRecord: FullContactRecord, options?: any) {
            return ContactsApiFp(configuration).contactMaintain(contactId, contactRecord, options)(fetch, basePath);
        },
        /**
         * ### Overview      Modifies an address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Address record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Modifies an address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} addressId * The unique identifier for the address. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAddress(contactId: string, addressId: string, options?: any) {
            return ContactsApiFp(configuration).contactMaintainAddress(contactId, addressId, options)(fetch, basePath);
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Name record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} nameId * The unique identifier for the name record. 
         * @param {NameRecord} modifiedName * The unique identifier for the name record. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactMaintainAlternateName(contactId: string, nameId: string, modifiedName: NameRecord, options?: any) {
            return ContactsApiFp(configuration).contactMaintainAlternateName(contactId, nameId, modifiedName, options)(fetch, basePath);
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Address record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Creates a new address record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} alternateNameId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAddress(contactId: string, alternateNameId: string, options?: any) {
            return ContactsApiFp(configuration).contactNewAddress(contactId, alternateNameId, options)(fetch, basePath);
        },
        /**
         * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets an alternate name
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {NameRecord} newName * The json name record payload 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactNewAlternateName(contactId: string, newName: NameRecord, options?: any) {
            return ContactsApiFp(configuration).contactNewAlternateName(contactId, newName, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of organisations relted to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of organisations related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactOrganisations(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactOrganisations(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves current payment detail settings settings for the contact record      ****     **UC Mapping: **     ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN     ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment-details record |      ### Links          Placeholder    
         * @summary Retrieves current payment detail settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPaymentSettings(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactPaymentSettings(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves current preferences / communication settings for the contact record      ****     **UC Mapping: **       ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Preferences record |      ### Links          Placeholder    
         * @summary Retrieves current preferences / communication settings for the contact
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactPreferences(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactPreferences(contactId, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
         * @summary PLACEHOLDER - gets a search result of roles available to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactRoles(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contactRoles(contactId, options)(fetch, basePath);
        },
        /**
         * **Search the insolvency & SIO registers for a contact.**   * Objective is to avoid duplication & encourage re-use   * Aid positive identification   * UX-UI flows should make it harder to create a contact than to re-use one    **NOTES FOR SEARCH INDEX POPULATION:**   * Aliases and names should be peers in terms of search, with a minor preference given to a primary name where there are multiple matches   * Contact name should be returned next to alias in search result string(s)   * Index to return a **graph** of contacts (people), phone numbers, addresses, and organisations associated to the contact       * Contact to contact graph       * Address to contact graph       * Company to contact graph       * Phone number to contact graph        **Intended behaviour:** it is intended that this functionality be used to implement typeahead searches possibly as a single search combo box - *in the short term it is possibly simpler but a lot less elegant and a lot less fun to implement as multiple typeaheads*.          --- SOME SEARCH PARAMETERS NOT IMPLEMENTED ---         The following booleans have not been carried over into this design:         * Show all addresses         * Withhold         * Main contact         * Protect from edit         
         * @summary Search for a contact
         * @param {string} [addresses] **Single search combo box for:** * Physical &amp; Postal Addresses (only those populated against a contact - not all of PAF / NZAD)   *__Traceability to existing search parameters:__*   * Street Name   * Region   * Suburb   * Country   * City / Town * Email addresses (in use on a contact) * Social media addresses (in use on a contact) * Phone numbers 
         * @param {string} [names] * Searches **both** primary contact and alias records. * Ideally implemented as typeahead  **Traceability to current search:** This parameter is intended to implement all of the following existing search parameters... * Last Name * First Name * Middle Name(s) * Organisation Name  and, in addition, should search any associated aliases for these same fields. 
         * @param {boolean} [excludeNotInUse] * Excludes contacts that are not in use (so; not associated to an estate) from the scope of the search. 
         * @param {boolean} [excludeBranches] * Excludes branches from the scope of the search. 
         * @param {boolean} [excludeAlternate] * Excludes aliases and secondary addresses from the scope of the search. * Very bad idea, would like to deprecate if possible. 
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactSearch(addresses?: string, names?: string, excludeNotInUse?: boolean, excludeBranches?: boolean, excludeAlternate?: boolean, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return ContactsApiFp(configuration).contactSearch(addresses, names, excludeNotInUse, excludeBranches, excludeAlternate, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
        /**
         * ### Overview      Retrieves a contact record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
         * @summary Gets a contact record
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contacts(contactId: string, options?: any) {
            return ContactsApiFp(configuration).contacts(contactId, options)(fetch, basePath);
        },
        /**
         *  # ------------------------------ # Not in scope of current phase # ------------------------------ ____ ### Overview    Allows a user to link / merge together multiple identities if they have ended up with multiple OASIS accounts for whatever reason      User will be required to authenticate to the target account      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses from the target are added to the current contact.      ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * Target contact is marked as deleted.  * All authentication tokens and links are deleted from target contact  * All authentication tokens and links are copied to current contact  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary FUTURE  links an addtional identity to the contact record
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkAccount(contactId: number, targetAccount: number, options?: any) {
            return ContactsApiFp(configuration).linkAccount(contactId, targetAccount, options)(fetch, basePath);
        },
        /**
         * ### Overview     Updates adjudication details related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates adjudication details related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainAdjudicationDetails(contactId: string, paymentDetails: PlaceHolderModel, options?: any) {
            return ContactsApiFp(configuration).maintainAdjudicationDetails(contactId, paymentDetails, options)(fetch, basePath);
        },
        /**
         * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary Updates payment settings related to the contact.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {ContactPaymentDetailRecord} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPaymentSettings(contactId: string, paymentDetails: ContactPaymentDetailRecord, options?: any) {
            return ContactsApiFp(configuration).maintainContactPaymentSettings(contactId, paymentDetails, options)(fetch, basePath);
        },
        /**
         * ### Overview     Updates comminication preferrences      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
         * @summary TO BE REMOVED (TBC) - as per conversation with Jenny on the 26/1/18
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {PlaceHolderModel} paymentDetails 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainContactPreferences(contactId: string, paymentDetails: PlaceHolderModel, options?: any) {
            return ContactsApiFp(configuration).maintainContactPreferences(contactId, paymentDetails, options)(fetch, basePath);
        },
        /**
         *  ____ ### Overview    Allows an insolvency user merge together multiple contacts.       May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user aacount)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  * Target contact does not have an active user account associated.  ____  ### Post-conditions  * Target contact is marked as deleted.  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
         * @summary Joins contact records together.
         * @param {number} contactId * The unique identifier for the contact. 
         * @param {number} targetAccount 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        mergeContact(contactId: number, targetAccount: number, options?: any) {
            return ContactsApiFp(configuration).mergeContact(contactId, targetAccount, options)(fetch, basePath);
        },
        /**
         *  ### Overview  Create a new contact record.     **** **Users:** Insolvency officers and system  * Create contact from investagative activity - Insolvency Officer * Create contact from statement of affairs - System * Create contact from claim application - Creditor (this is a bit of an assumption that the user will be forced into a discreet account creation activity, UI/UX may see this done by the 'system')  ****   **UC Mapping:** New Contact  **** **QA / QC notes:** We are beginning the process of refactoring contact into more discreet and contained impllementations. There may be more to be done here. ****  ____ ### Pre-conditions * none   ____ ### Post-conditions * User authorisation is checked * Contact resource is created / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Contact not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: New contact** | New contact |   <br /> ****   **Case 1** - New contact created       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact\",        \"rel\": \"contact.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/auditlogs\",        \"rel\": \"contact.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/estates\",        \"rel\": \"contact.estates\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/claims\",        \"rel\": \"contact.claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/organisations\",        \"rel\": \"contact.organisations\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/accounts\",        \"rel\": \"contact.accounts\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462/maintain\",        \"rel\": \"contact.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"POST\"      },       {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/linkaccount\",        \"rel\": \"contact.linkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.unlinkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.mergecontact\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/deceased\",        \"rel\": \"contact.deceased\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.supresscorrespondence\",        \"method\": \"POST\"                # move this one into preferences maybe?      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/protectfromedit\",        \"rel\": \"contact.protectfromedit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/withholdadress\",        \"rel\": \"contact.wihtholdaddress\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/appointexecutor\",        \"rel\": \"contact.appointexecutor\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      }      ]       
         * @summary Creates a contact record for a human or organisation to be used in an insolvency.
         * @param {FullContactRecord} contactRecord The detail of the new contact record to be created. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newContact(contactRecord: FullContactRecord, options?: any) {
            return ContactsApiFp(configuration).newContact(contactRecord, options)(fetch, basePath);
        },
    };
};

/**
 * ContactsApi - object-oriented interface
 * @export
 * @class ContactsApi
 * @extends {BaseAPI}
 */
export class ContactsApi extends BaseAPI {
    /**
     *  ____ ### Overview    Allows an insolvency officer to act for a deceased participant in an insolvency prodecure.     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated with the current contact are disabled (not deleted - leaving room for error).  * Target contact is added to all claims & estates that the current contact is a party to (target replaces current).  * Note that target contact is NOT deleted but remains as a deceased contact  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
     * @summary Allow executor to act in the insolvency proecedure.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} targetAccount 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public appointExecutor(contactId: number, targetAccount: number, options?: any) {
        return ContactsApiFp(this.configuration).appointExecutor(contactId, targetAccount, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Gets an address
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} addressId * The unique identifier for the address. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactAddress(contactId: string, addressId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactAddress(contactId, addressId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of addresses related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of addresses related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactAddresses(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactAddresses(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Gets an alternate name
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} nameId * The unique identifier for the contact name. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactAlternateName(contactId: string, nameId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactAlternateName(contactId, nameId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of alternate names related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary Gets a search result of alternate names related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactAlternateNames(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactAlternateNames(contactId, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview  Lists the claims associated with an individual system user.    ____ ** UC Mapping: **   ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN   ____  ### Pre-conditions  * User is authenticated & authorised  ____  ### Post-conditions  * Search result is returned  ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Search result |    ### Links        -- Not applicable --   
     * @summary Gets a search result of claims related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactClaims(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactClaims(contactId, options)(this.fetch, this.basePath);
    }

    /**
     *  ____ ### Overview    Allows an insolvency userto mark a contact as being deceased.      May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user account)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * User accounts associated contact are disabled (not deleted - leaving room for error).  * Suppress correspondence flag is set.  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
     * @summary Marks a contact record as deceased.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} targetAccount 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactDeceased(contactId: number, targetAccount: number, options?: any) {
        return ContactsApiFp(this.configuration).contactDeceased(contactId, targetAccount, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of estates related to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of estates related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactEstates(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactEstates(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of identities related to the contact      ****     **UC Mapping:**         **Permissions: ** Users can only view thier own identities      ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of identities related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactIdentities(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactIdentities(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   * COntact record is current / selected   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Contact record |      ### Links          Placeholder    
     * @summary Maintains contact record details.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} contactRecord 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactMaintain(contactId: string, contactRecord: FullContactRecord, options?: any) {
        return ContactsApiFp(this.configuration).contactMaintain(contactId, contactRecord, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      Modifies an address record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Address record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Modifies an address record
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} addressId * The unique identifier for the address. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactMaintainAddress(contactId: string, addressId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactMaintainAddress(contactId, addressId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated & authorised    ____    ### Post-conditions    * Name record is updated    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Gets an alternate name
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} nameId * The unique identifier for the name record. 
     * @param {} modifiedName * The unique identifier for the name record. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactMaintainAlternateName(contactId: string, nameId: string, modifiedName: NameRecord, options?: any) {
        return ContactsApiFp(this.configuration).contactMaintainAlternateName(contactId, nameId, modifiedName, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Address record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Creates a new address record
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} alternateNameId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactNewAddress(contactId: string, alternateNameId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactNewAddress(contactId, alternateNameId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      An alternate name record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Name record is created    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Gets an alternate name
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} newName * The json name record payload 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactNewAlternateName(contactId: string, newName: NameRecord, options?: any) {
        return ContactsApiFp(this.configuration).contactNewAlternateName(contactId, newName, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of organisations relted to the contact      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of organisations related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactOrganisations(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactOrganisations(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves current payment detail settings settings for the contact record      ****     **UC Mapping: **     ** Other notes: **  This would be a good place for future NZBN integration - when businesses are able to list thier account details under the NZBN     ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment-details record |      ### Links          Placeholder    
     * @summary Retrieves current payment detail settings for the contact
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactPaymentSettings(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactPaymentSettings(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves current preferences / communication settings for the contact record      ****     **UC Mapping: **       ____   ### Pre-conditions   * User is authenticated   * Contact being requested belongs / matches the authenticated account   ____   ### Post-conditions   * Search result is returned   * Audit record is created against the contact / preferences    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Preferences record |      ### Links          Placeholder    
     * @summary Retrieves current preferences / communication settings for the contact
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactPreferences(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactPreferences(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of roles available to the contact      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Search result |      ### Links          Placeholder    
     * @summary PLACEHOLDER - gets a search result of roles available to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactRoles(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contactRoles(contactId, options)(this.fetch, this.basePath);
    }

    /**
     * **Search the insolvency & SIO registers for a contact.**   * Objective is to avoid duplication & encourage re-use   * Aid positive identification   * UX-UI flows should make it harder to create a contact than to re-use one    **NOTES FOR SEARCH INDEX POPULATION:**   * Aliases and names should be peers in terms of search, with a minor preference given to a primary name where there are multiple matches   * Contact name should be returned next to alias in search result string(s)   * Index to return a **graph** of contacts (people), phone numbers, addresses, and organisations associated to the contact       * Contact to contact graph       * Address to contact graph       * Company to contact graph       * Phone number to contact graph        **Intended behaviour:** it is intended that this functionality be used to implement typeahead searches possibly as a single search combo box - *in the short term it is possibly simpler but a lot less elegant and a lot less fun to implement as multiple typeaheads*.          --- SOME SEARCH PARAMETERS NOT IMPLEMENTED ---         The following booleans have not been carried over into this design:         * Show all addresses         * Withhold         * Main contact         * Protect from edit         
     * @summary Search for a contact
     * @param {} [addresses] **Single search combo box for:** * Physical &amp; Postal Addresses (only those populated against a contact - not all of PAF / NZAD)   *__Traceability to existing search parameters:__*   * Street Name   * Region   * Suburb   * Country   * City / Town * Email addresses (in use on a contact) * Social media addresses (in use on a contact) * Phone numbers 
     * @param {} [names] * Searches **both** primary contact and alias records. * Ideally implemented as typeahead  **Traceability to current search:** This parameter is intended to implement all of the following existing search parameters... * Last Name * First Name * Middle Name(s) * Organisation Name  and, in addition, should search any associated aliases for these same fields. 
     * @param {} [excludeNotInUse] * Excludes contacts that are not in use (so; not associated to an estate) from the scope of the search. 
     * @param {} [excludeBranches] * Excludes branches from the scope of the search. 
     * @param {} [excludeAlternate] * Excludes aliases and secondary addresses from the scope of the search. * Very bad idea, would like to deprecate if possible. 
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contactSearch(addresses?: string, names?: string, excludeNotInUse?: boolean, excludeBranches?: boolean, excludeAlternate?: boolean, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return ContactsApiFp(this.configuration).contactSearch(addresses, names, excludeNotInUse, excludeBranches, excludeAlternate, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview      Retrieves a contact record.        ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Contact record returned** | Contact record | 
     * @summary Gets a contact record
     * @param {} contactId * The unique identifier for the contact. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public contacts(contactId: string, options?: any) {
        return ContactsApiFp(this.configuration).contacts(contactId, options)(this.fetch, this.basePath);
    }

    /**
     *  # ------------------------------ # Not in scope of current phase # ------------------------------ ____ ### Overview    Allows a user to link / merge together multiple identities if they have ended up with multiple OASIS accounts for whatever reason      User will be required to authenticate to the target account      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses from the target are added to the current contact.      ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  ____  ### Post-conditions  * Target contact is marked as deleted.  * All authentication tokens and links are deleted from target contact  * All authentication tokens and links are copied to current contact  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
     * @summary FUTURE  links an addtional identity to the contact record
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} targetAccount 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public linkAccount(contactId: number, targetAccount: number, options?: any) {
        return ContactsApiFp(this.configuration).linkAccount(contactId, targetAccount, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Updates adjudication details related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
     * @summary Updates adjudication details related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} paymentDetails 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public maintainAdjudicationDetails(contactId: string, paymentDetails: PlaceHolderModel, options?: any) {
        return ContactsApiFp(this.configuration).maintainAdjudicationDetails(contactId, paymentDetails, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Updates payment settings related to the contact.       ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
     * @summary Updates payment settings related to the contact.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} paymentDetails 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public maintainContactPaymentSettings(contactId: string, paymentDetails: ContactPaymentDetailRecord, options?: any) {
        return ContactsApiFp(this.configuration).maintainContactPaymentSettings(contactId, paymentDetails, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Updates comminication preferrences      ****     **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated & authorised   ____   ### Post-conditions   * Settings are updated   * Audit record created    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Payment record |      ### Links          Placeholder    
     * @summary TO BE REMOVED (TBC) - as per conversation with Jenny on the 26/1/18
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} paymentDetails 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public maintainContactPreferences(contactId: string, paymentDetails: PlaceHolderModel, options?: any) {
        return ContactsApiFp(this.configuration).maintainContactPreferences(contactId, paymentDetails, options)(this.fetch, this.basePath);
    }

    /**
     *  ____ ### Overview    Allows an insolvency user merge together multiple contacts.       May only be on contacts that do not have an associated user account (that is to say, only one of the contact record may have an active user aacount)      Once authentication is sucessful, the contact record will be merged, meaning the following;   - Target contact is marked as deleted.   - All authentication tokens and links are deleted from target contact   - Current contact is joined to all estates that target is currently joined to (current replaces target).   - Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).   - All addresses are added to the current contact     ****    **UC Mapping:**     ____  ### Pre-conditions  * User is authenticated & authorised  * Contact record is current / selected  * Target contact does not have an active user account associated.  ____  ### Post-conditions  * Target contact is marked as deleted.  * Current contact is joined to all estates that target is currently joined to (current replaces target).  * Current contact is joined to all claims and claim-registrations that the target is joined to (current replaces target).  * Audit record created   ____  ### Error messages  | Code| Message | Description|  |----|-----|------|  | **400** | Not authenticated | Bad request |  | **401** | Not authenticated  | User must be logged in to perform this action |  | **403** | Not authorised  | User not authorised to perform this action |  | **5XX** | System error  | System error |    ### HATEOAS \"links\" element examples  | Case \\# | Case | Description / rules |  |----|-----|------|  | **1** | **201: OK** | Contact record |    ### Links        Placeholder   
     * @summary Joins contact records together.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} targetAccount 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public mergeContact(contactId: number, targetAccount: number, options?: any) {
        return ContactsApiFp(this.configuration).mergeContact(contactId, targetAccount, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview  Create a new contact record.     **** **Users:** Insolvency officers and system  * Create contact from investagative activity - Insolvency Officer * Create contact from statement of affairs - System * Create contact from claim application - Creditor (this is a bit of an assumption that the user will be forced into a discreet account creation activity, UI/UX may see this done by the 'system')  ****   **UC Mapping:** New Contact  **** **QA / QC notes:** We are beginning the process of refactoring contact into more discreet and contained impllementations. There may be more to be done here. ****  ____ ### Pre-conditions * none   ____ ### Post-conditions * User authorisation is checked * Contact resource is created / or appropriate error is given * Audit record created ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request | Bad request | | **404** | Not found  | Contact not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: New contact** | New contact |   <br /> ****   **Case 1** - New contact created       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact\",        \"rel\": \"contact.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/auditlogs\",        \"rel\": \"contact.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/estates\",        \"rel\": \"contact.estates\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/claims\",        \"rel\": \"contact.claims\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/organisations\",        \"rel\": \"contact.organisations\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/accounts\",        \"rel\": \"contact.accounts\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/824462/maintain\",        \"rel\": \"contact.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/preferences\",        \"rel\": \"contact.preferences\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.paymentdetails\",        \"method\": \"POST\"      },       {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/alternate-names\",        \"rel\": \"contact.alternate-names\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/linkaccount\",        \"rel\": \"contact.linkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.unlinkaccount\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.mergecontact\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/deceased\",        \"rel\": \"contact.deceased\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/paymentdetails\",        \"rel\": \"contact.supresscorrespondence\",        \"method\": \"POST\"                # move this one into preferences maybe?      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/protectfromedit\",        \"rel\": \"contact.protectfromedit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/withholdadress\",        \"rel\": \"contact.wihtholdaddress\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/appointexecutor\",        \"rel\": \"contact.appointexecutor\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/contact/4855682/modifyadjudicationdetails\",        \"rel\": \"contact.modify-adjudication-details\",        \"method\": \"POST\"      }      ]       
     * @summary Creates a contact record for a human or organisation to be used in an insolvency.
     * @param {} contactRecord The detail of the new contact record to be created. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContactsApi
     */
    public newContact(contactRecord: FullContactRecord, options?: any) {
        return ContactsApiFp(this.configuration).newContact(contactRecord, options)(this.fetch, this.basePath);
    }

}

/**
 * CreditorClaimsApi - fetch parameter creator
 * @export
 */
export const CreditorClaimsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *  ### Overview   Searches the insolvency register for claims  - creditor view. Will search for and return only those claims directly associated with the creditor  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims (creditor view) from the insolvency register.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [estateName] A.k.a. debtor name - search on the name of the insolvent party.
         * @param {string} [claimValueFrom] Min value &gt;&#x3D;
         * @param {string} [claimValueTo] Max value &lt;&#x3D;
         * @param {boolean} [onlyMyClaims] Boolean for use with organisations (key creditors) - applies search criteria to show only those claims made by the logged in user.
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactCreditorClaimsSearch(contactId: string, estateName?: string, claimValueFrom?: string, claimValueTo?: string, onlyMyClaims?: boolean, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            // verify required parameter 'contactId' is not null or undefined
            if (contactId === null || contactId === undefined) {
                throw new RequiredError('contactId','Required parameter contactId was null or undefined when calling contactCreditorClaimsSearch.');
            }
            const localVarPath = `/contacts/{contact_id}/creditor-claims/search`
                .replace(`{${"contact_id"}}`, encodeURIComponent(String(contactId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (estateName !== undefined) {
                localVarQueryParameter['estate_name'] = estateName;
            }

            if (claimValueFrom !== undefined) {
                localVarQueryParameter['claim_value_from'] = claimValueFrom;
            }

            if (claimValueTo !== undefined) {
                localVarQueryParameter['claim_value_to'] = claimValueTo;
            }

            if (onlyMyClaims !== undefined) {
                localVarQueryParameter['only_my_claims'] = onlyMyClaims;
            }

            if (claimType !== undefined) {
                localVarQueryParameter['claim_type'] = claimType;
            }

            if (estateType !== undefined) {
                localVarQueryParameter['estate_type'] = estateType;
            }

            if (fromDate !== undefined) {
                localVarQueryParameter['from_date'] = (fromDate as any).toISOString();
            }

            if (toDate !== undefined) {
                localVarQueryParameter['to_date'] = (toDate as any).toISOString();
            }

            if (creditorReference !== undefined) {
                localVarQueryParameter['creditor_reference'] = creditorReference;
            }

            if (estateNumber !== undefined) {
                localVarQueryParameter['estate_number'] = estateNumber;
            }

            if (claimStatus !== undefined) {
                localVarQueryParameter['claim_status'] = claimStatus;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Gets a search result of evidence documents supplied against a claim  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimEvidences(claimId: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimId' is not null or undefined
            if (claimId === null || claimId === undefined) {
                throw new RequiredError('claimId','Required parameter claimId was null or undefined when calling creditorClaimEvidences.');
            }
            const localVarPath = `/creditor-claims/{claim_id}/evidences`
                .replace(`{${"claim_id"}}`, encodeURIComponent(String(claimId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Removes uploaded file. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {string} fileId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimRemoveEvidence(claimNumber: string, fileId: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling creditorClaimRemoveEvidence.');
            }
            // verify required parameter 'fileId' is not null or undefined
            if (fileId === null || fileId === undefined) {
                throw new RequiredError('fileId','Required parameter fileId was null or undefined when calling creditorClaimRemoveEvidence.');
            }
            const localVarPath = `/creditor-claims/{claim_number}/remove-evidence/{file_id}`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)))
                .replace(`{${"file_id"}}`, encodeURIComponent(String(fileId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Adds a file as evidence against the claim.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to application  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | File uploaded |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.supply-evidence\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/remove-evidence\",        \"rel\": \"creditorclaims.remove-evidence\",        \"method\": \"GET\"      }            ]           
         * @summary Uploads & links a file to an in-progress claim  
         * @param {any} upfile The file to upload.
         * @param {string} claimAppNumber The claim that the folio will be associated with
         * @param {string} claimRegistrationType The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimSupplyEvidence(upfile: any, claimAppNumber: string, claimRegistrationType: string, options: any = {}): FetchArgs {
            // verify required parameter 'upfile' is not null or undefined
            if (upfile === null || upfile === undefined) {
                throw new RequiredError('upfile','Required parameter upfile was null or undefined when calling creditorClaimSupplyEvidence.');
            }
            // verify required parameter 'claimAppNumber' is not null or undefined
            if (claimAppNumber === null || claimAppNumber === undefined) {
                throw new RequiredError('claimAppNumber','Required parameter claimAppNumber was null or undefined when calling creditorClaimSupplyEvidence.');
            }
            // verify required parameter 'claimRegistrationType' is not null or undefined
            if (claimRegistrationType === null || claimRegistrationType === undefined) {
                throw new RequiredError('claimRegistrationType','Required parameter claimRegistrationType was null or undefined when calling creditorClaimSupplyEvidence.');
            }
            const localVarPath = `/creditor-claims/{claim_app_number}/supply-evidence`
                .replace(`{${"claim_app_number"}}`, encodeURIComponent(String(claimAppNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new url.URLSearchParams();

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (upfile !== undefined) {
                localVarFormParams.set('upfile', upfile as any);
            }

            if (claimRegistrationType !== undefined) {
                localVarFormParams.set('claim_registration_type', claimRegistrationType as any);
            }

            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = localVarFormParams.toString();

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview   Gets the originating claim application detain that was used to create the claim record.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Cliam context is provided ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorclaimRegistration(claimId: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimId' is not null or undefined
            if (claimId === null || claimId === undefined) {
                throw new RequiredError('claimId','Required parameter claimId was null or undefined when calling creditorclaimRegistration.');
            }
            const localVarPath = `/creditor-claims/{claim_id}/claim-registration`
                .replace(`{${"claim_id"}}`, encodeURIComponent(String(claimId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Retrieves a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   **UI Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Claim application |   **** <br />        **Case 1** - Claim Retrieved       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Gets a creditor view of claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreditorClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling getCreditorClaim.');
            }
            const localVarPath = `/creditor-claims/{claim_number}`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Links claim to another estate.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Links laim to another estate 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling linkCreditorClaim.');
            }
            // verify required parameter 'claimRegistration' is not null or undefined
            if (claimRegistration === null || claimRegistration === undefined) {
                throw new RequiredError('claimRegistration','Required parameter claimRegistration was null or undefined when calling linkCreditorClaim.');
            }
            const localVarPath = `/creditor-claims/{claim_number}/link-estate`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimRegistration || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Modfifies a claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling submitCreditorClaim.');
            }
            // verify required parameter 'claimRegistration' is not null or undefined
            if (claimRegistration === null || claimRegistration === undefined) {
                throw new RequiredError('claimRegistration','Required parameter claimRegistration was null or undefined when calling submitCreditorClaim.');
            }
            const localVarPath = `/creditor-claims/{claim_number}/maintain`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimRegistration || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Allows a creditor to withdraw a claim.   **** May only be done by an **creditor or agent**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected   ____ ### Post-conditions * Claim is withdrawn * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Withdrawn claim** | Withdrawn claim |   **** <br />        **Case 1** - Withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },              ]     
         * @summary Withdraws an already submitted claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        withdrawCreditorClaim(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling withdrawCreditorClaim.');
            }
            const localVarPath = `/creditor-claims/{claim_number}/withdraw`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CreditorClaimsApi - functional programming interface
 * @export
 */
export const CreditorClaimsApiFp = function(configuration?: Configuration) {
    return {
        /**
         *  ### Overview   Searches the insolvency register for claims  - creditor view. Will search for and return only those claims directly associated with the creditor  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims (creditor view) from the insolvency register.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [estateName] A.k.a. debtor name - search on the name of the insolvent party.
         * @param {string} [claimValueFrom] Min value &gt;&#x3D;
         * @param {string} [claimValueTo] Max value &lt;&#x3D;
         * @param {boolean} [onlyMyClaims] Boolean for use with organisations (key creditors) - applies search criteria to show only those claims made by the logged in user.
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactCreditorClaimsSearch(contactId: string, estateName?: string, claimValueFrom?: string, claimValueTo?: string, onlyMyClaims?: boolean, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimSearchResults> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).contactCreditorClaimsSearch(contactId, estateName, claimValueFrom, claimValueTo, onlyMyClaims, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Gets a search result of evidence documents supplied against a claim  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimEvidences(claimId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioSearchResults> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).creditorClaimEvidences(claimId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Removes uploaded file. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {string} fileId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimRemoveEvidence(claimNumber: string, fileId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).creditorClaimRemoveEvidence(claimNumber, fileId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Adds a file as evidence against the claim.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to application  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | File uploaded |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.supply-evidence\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/remove-evidence\",        \"rel\": \"creditorclaims.remove-evidence\",        \"method\": \"GET\"      }            ]           
         * @summary Uploads & links a file to an in-progress claim  
         * @param {any} upfile The file to upload.
         * @param {string} claimAppNumber The claim that the folio will be associated with
         * @param {string} claimRegistrationType The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimSupplyEvidence(upfile: any, claimAppNumber: string, claimRegistrationType: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).creditorClaimSupplyEvidence(upfile, claimAppNumber, claimRegistrationType, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview   Gets the originating claim application detain that was used to create the claim record.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Cliam context is provided ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorclaimRegistration(claimId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRegistrationRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).creditorclaimRegistration(claimId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Retrieves a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   **UI Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Claim application |   **** <br />        **Case 1** - Claim Retrieved       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Gets a creditor view of claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreditorClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).getCreditorClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Links claim to another estate.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Links laim to another estate 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).linkCreditorClaim(claimNumber, claimRegistration, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Modfifies a claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).submitCreditorClaim(claimNumber, claimRegistration, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Allows a creditor to withdraw a claim.   **** May only be done by an **creditor or agent**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected   ____ ### Post-conditions * Claim is withdrawn * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Withdrawn claim** | Withdrawn claim |   **** <br />        **Case 1** - Withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },              ]     
         * @summary Withdraws an already submitted claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        withdrawCreditorClaim(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimRecord> {
            const localVarFetchArgs = CreditorClaimsApiFetchParamCreator(configuration).withdrawCreditorClaim(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * CreditorClaimsApi - factory interface
 * @export
 */
export const CreditorClaimsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *  ### Overview   Searches the insolvency register for claims  - creditor view. Will search for and return only those claims directly associated with the creditor  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of claims (creditor view) from the insolvency register.
         * @param {string} contactId * The unique identifier for the contact. 
         * @param {string} [estateName] A.k.a. debtor name - search on the name of the insolvent party.
         * @param {string} [claimValueFrom] Min value &gt;&#x3D;
         * @param {string} [claimValueTo] Max value &lt;&#x3D;
         * @param {boolean} [onlyMyClaims] Boolean for use with organisations (key creditors) - applies search criteria to show only those claims made by the logged in user.
         * @param {string} [claimType] The type of the claim
         * @param {string} [estateType] The type of the claim
         * @param {Date} [fromDate] The date from which to search e.g 04-Dec-2017
         * @param {Date} [toDate] The date to which to search e.g. 07-Dec-2017
         * @param {string} [creditorReference] The creditors reference identifier.
         * @param {string} [estateNumber] The estate that the claim belongs to.
         * @param {string} [claimStatus] The state of the insolvency procedure, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        contactCreditorClaimsSearch(contactId: string, estateName?: string, claimValueFrom?: string, claimValueTo?: string, onlyMyClaims?: boolean, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return CreditorClaimsApiFp(configuration).contactCreditorClaimsSearch(contactId, estateName, claimValueFrom, claimValueTo, onlyMyClaims, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Gets a search result of evidence documents supplied against a claim  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimEvidences(claimId: string, options?: any) {
            return CreditorClaimsApiFp(configuration).creditorClaimEvidences(claimId, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Removes uploaded file. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {string} fileId 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimRemoveEvidence(claimNumber: string, fileId: string, options?: any) {
            return CreditorClaimsApiFp(configuration).creditorClaimRemoveEvidence(claimNumber, fileId, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Adds a file as evidence against the claim.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to application  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | File uploaded |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.supply-evidence\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/remove-evidence\",        \"rel\": \"creditorclaims.remove-evidence\",        \"method\": \"GET\"      }            ]           
         * @summary Uploads & links a file to an in-progress claim  
         * @param {any} upfile The file to upload.
         * @param {string} claimAppNumber The claim that the folio will be associated with
         * @param {string} claimRegistrationType The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorClaimSupplyEvidence(upfile: any, claimAppNumber: string, claimRegistrationType: string, options?: any) {
            return CreditorClaimsApiFp(configuration).creditorClaimSupplyEvidence(upfile, claimAppNumber, claimRegistrationType, options)(fetch, basePath);
        },
        /**
         *  ### Overview   Gets the originating claim application detain that was used to create the claim record.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Cliam context is provided ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
         * @summary Gets a search result of evidence documents supplied against a claim
         * @param {string} claimId * The unique identifier for the claim. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        creditorclaimRegistration(claimId: string, options?: any) {
            return CreditorClaimsApiFp(configuration).creditorclaimRegistration(claimId, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Retrieves a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   **UI Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Claim application |   **** <br />        **Case 1** - Claim Retrieved       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Gets a creditor view of claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCreditorClaim(claimNumber: string, options?: any) {
            return CreditorClaimsApiFp(configuration).getCreditorClaim(claimNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Links claim to another estate.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Links laim to another estate 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any) {
            return CreditorClaimsApiFp(configuration).linkCreditorClaim(claimNumber, claimRegistration, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
         * @summary Modfifies a claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {CreditorClaimRecord} claimRegistration * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        submitCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any) {
            return CreditorClaimsApiFp(configuration).submitCreditorClaim(claimNumber, claimRegistration, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Allows a creditor to withdraw a claim.   **** May only be done by an **creditor or agent**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected   ____ ### Post-conditions * Claim is withdrawn * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Withdrawn claim** | Withdrawn claim |   **** <br />        **Case 1** - Withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },              ]     
         * @summary Withdraws an already submitted claim. 
         * @param {string} claimNumber * The unique identifier for the claim application. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        withdrawCreditorClaim(claimNumber: string, options?: any) {
            return CreditorClaimsApiFp(configuration).withdrawCreditorClaim(claimNumber, options)(fetch, basePath);
        },
    };
};

/**
 * CreditorClaimsApi - object-oriented interface
 * @export
 * @class CreditorClaimsApi
 * @extends {BaseAPI}
 */
export class CreditorClaimsApi extends BaseAPI {
    /**
     *  ### Overview   Searches the insolvency register for claims  - creditor view. Will search for and return only those claims directly associated with the creditor  ****   **UC Mapping:** Search Claims   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of claims (creditor view) from the insolvency register.
     * @param {} contactId * The unique identifier for the contact. 
     * @param {} [estateName] A.k.a. debtor name - search on the name of the insolvent party.
     * @param {} [claimValueFrom] Min value &gt;&#x3D;
     * @param {} [claimValueTo] Max value &lt;&#x3D;
     * @param {} [onlyMyClaims] Boolean for use with organisations (key creditors) - applies search criteria to show only those claims made by the logged in user.
     * @param {} [claimType] The type of the claim
     * @param {} [estateType] The type of the claim
     * @param {} [fromDate] The date from which to search e.g 04-Dec-2017
     * @param {} [toDate] The date to which to search e.g. 07-Dec-2017
     * @param {} [creditorReference] The creditors reference identifier.
     * @param {} [estateNumber] The estate that the claim belongs to.
     * @param {} [claimStatus] The state of the insolvency procedure, leave blank for all
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public contactCreditorClaimsSearch(contactId: string, estateName?: string, claimValueFrom?: string, claimValueTo?: string, onlyMyClaims?: boolean, claimType?: string, estateType?: string, fromDate?: Date, toDate?: Date, creditorReference?: string, estateNumber?: string, claimStatus?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).contactCreditorClaimsSearch(contactId, estateName, claimValueFrom, claimValueTo, onlyMyClaims, claimType, estateType, fromDate, toDate, creditorReference, estateNumber, claimStatus, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Gets a search result of evidence documents supplied against a claim  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of evidence documents supplied against a claim
     * @param {} claimId * The unique identifier for the claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public creditorClaimEvidences(claimId: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).creditorClaimEvidences(claimId, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
     * @summary Removes uploaded file. 
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {} fileId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public creditorClaimRemoveEvidence(claimNumber: string, fileId: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).creditorClaimRemoveEvidence(claimNumber, fileId, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Adds a file as evidence against the claim.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to application  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | File uploaded |   **** <br />        **Case 1**       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaims.supply-evidence\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/remove-evidence\",        \"rel\": \"creditorclaims.remove-evidence\",        \"method\": \"GET\"      }            ]           
     * @summary Uploads & links a file to an in-progress claim  
     * @param {} upfile The file to upload.
     * @param {} claimAppNumber The claim that the folio will be associated with
     * @param {} claimRegistrationType The claim that the folio will be associated with
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public creditorClaimSupplyEvidence(upfile: any, claimAppNumber: string, claimRegistrationType: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).creditorClaimSupplyEvidence(upfile, claimAppNumber, claimRegistrationType, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview   Gets the originating claim application detain that was used to create the claim record.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Cliam context is provided ____ ### Post-conditions * User authorisation is checked * Search result is returned ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **5XX** | System error  | System error |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **201: Search result** | Search results | 
     * @summary Gets a search result of evidence documents supplied against a claim
     * @param {} claimId * The unique identifier for the claim. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public creditorclaimRegistration(claimId: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).creditorclaimRegistration(claimId, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Retrieves a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   **UI Mapping:**   ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Claim application |   **** <br />        **Case 1** - Claim Retrieved       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
     * @summary Gets a creditor view of claim. 
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public getCreditorClaim(claimNumber: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).getCreditorClaim(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Links claim to another estate.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
     * @summary Links laim to another estate 
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {} claimRegistration * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public linkCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any) {
        return CreditorClaimsApiFp(this.configuration).linkCreditorClaim(claimNumber, claimRegistration, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Modifies a claim record. Reduced permissions / actions available to creditors as opposed to ITS staff.   ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected  * Claim is complete ____ ### Post-conditions * Claim resource is modified.  * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Claim modified** | Modified claim application |   **** <br />        **Case 1** - Claim Modified       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462/maintain\",        \"rel\": \"creditorclaim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/withdraw\",        \"rel\": \"creditorclaim.withdraw\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.link-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/link-folio\",        \"rel\": \"creditorclaim.unlink-folio\",        \"method\": \"POST\"      }      ]     
     * @summary Modfifies a claim. 
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {} claimRegistration * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public submitCreditorClaim(claimNumber: string, claimRegistration: CreditorClaimRecord, options?: any) {
        return CreditorClaimsApiFp(this.configuration).submitCreditorClaim(claimNumber, claimRegistration, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Allows a creditor to withdraw a claim.   **** May only be done by an **creditor or agent**.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * Claim is current / selected   ____ ### Post-conditions * Claim is withdrawn * Audit record is created  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Withdrawn claim** | Withdrawn claim |   **** <br />        **Case 1** - Withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims\",        \"rel\": \"creditorclaim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/creditorclaims/4855682/folios\",        \"rel\": \"creditorclaim.folios\",        \"method\": \"GET\"      },              ]     
     * @summary Withdraws an already submitted claim. 
     * @param {} claimNumber * The unique identifier for the claim application. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CreditorClaimsApi
     */
    public withdrawCreditorClaim(claimNumber: string, options?: any) {
        return CreditorClaimsApiFp(this.configuration).withdrawCreditorClaim(claimNumber, options)(this.fetch, this.basePath);
    }

}

/**
 * EstatesApi - fetch parameter creator
 * @export
 */
export const EstatesApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * **UC Map:** Create Claim  Creates a new claim against an estate - can only be done by an insolvency officer - claims from other participants need to be vetted and accepted - going through the embryonic stage of being a claim application or a potential claim first. 
         * @summary Creates a new claim against the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {ClaimRecord} claimDetail The detail of the new claim record.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClaim(estateNumber: number, claimDetail: ClaimRecord, options: any = {}): FetchArgs {
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling createClaim.');
            }
            // verify required parameter 'claimDetail' is not null or undefined
            if (claimDetail === null || claimDetail === undefined) {
                throw new RequiredError('claimDetail','Required parameter claimDetail was null or undefined when calling createClaim.');
            }
            const localVarPath = `/estates/{estate_number}/claims/`
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(claimDetail || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * By passing in the estate_number, the details of the estate are returned 
         * @summary ---- PLACEHOLDER ---- Gets details of the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEstateDetails1(estateNumber: number, options: any = {}): FetchArgs {
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling getEstateDetails1.');
            }
            const localVarPath = `/estates/{estate_number}`
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview  **UC Mapping:** View Claim  Get result matching estate_number ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * The ringfence area has been checked * Individual permissions have been checked * The claim record is returned if it exists    * An audit record for the read has been created (asynchronously) in mongoDB  ____ ### --- Error messages --- | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case | Case | Description / Rules | |----|-----|------| | **1** | New claim | Where claim has not yet been vetted, admitted or withdrawn |   **1. New Claim**       \"links\": [      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"self,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"claim.maintain,\",        \"method\": \"PUT\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend,\",        \"rel\": \"claim.suspend,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet,\",        \"rel\": \"claim.vet,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit,\",        \"rel\": \"claim.admit,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject,\",        \"rel\": \"claim.reject,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets,\",        \"rel\": \"claim.assets,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link,\",        \"rel\": \"claim.assets.link,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios,\",        \"rel\": \"claim.folios,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio,\",        \"rel\": \"claim.link.folio,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link_claim,\",        \"rel\": \"claim.link.claim,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history,\",        \"rel\": \"claim.history,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history/64,\",        \"rel\": \"claim.view_history_record,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/audit_log,\",        \"rel\": \"claim.search_audit,\",        \"method\": \"GET\"      }      ] 
         * @summary Returns for all claims associated to the current estate
         * @param {number} estateNumber the unique number of the estate resource
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstateClaims(estateNumber: number, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            // verify required parameter 'estateNumber' is not null or undefined
            if (estateNumber === null || estateNumber === undefined) {
                throw new RequiredError('estateNumber','Required parameter estateNumber was null or undefined when calling searchEstateClaims.');
            }
            const localVarPath = `/estates/{estate_number}/claims/`
                .replace(`{${"estate_number"}}`, encodeURIComponent(String(estateNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Search the insolvency register for a bankrupt (current or discharged) person Question: do I need to split into SIO and Insolvency search 
         * @summary ---- PLACEHOLDER ---- Gets a search result of Insolvencies
         * @param {string} [surname] Surname of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [middleName] Middle name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [firstName] First Name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [status] The status of the Insolvency, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstates(surname?: string, middleName?: string, firstName?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options: any = {}): FetchArgs {
            const localVarPath = `/estates`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (surname !== undefined) {
                localVarQueryParameter['surname'] = surname;
            }

            if (middleName !== undefined) {
                localVarQueryParameter['middle-name'] = middleName;
            }

            if (firstName !== undefined) {
                localVarQueryParameter['first-name'] = firstName;
            }

            if (status !== undefined) {
                localVarQueryParameter['status'] = status;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page-size'] = pageSize;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sort-order'] = sortOrder;
            }

            if (sortBy !== undefined) {
                localVarQueryParameter['sort-by'] = sortBy;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * EstatesApi - functional programming interface
 * @export
 */
export const EstatesApiFp = function(configuration?: Configuration) {
    return {
        /**
         * **UC Map:** Create Claim  Creates a new claim against an estate - can only be done by an insolvency officer - claims from other participants need to be vetted and accepted - going through the embryonic stage of being a claim application or a potential claim first. 
         * @summary Creates a new claim against the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {ClaimRecord} claimDetail The detail of the new claim record.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClaim(estateNumber: number, claimDetail: ClaimRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimRecord> {
            const localVarFetchArgs = EstatesApiFetchParamCreator(configuration).createClaim(estateNumber, claimDetail, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * By passing in the estate_number, the details of the estate are returned 
         * @summary ---- PLACEHOLDER ---- Gets details of the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEstateDetails1(estateNumber: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<EstateDetail> {
            const localVarFetchArgs = EstatesApiFetchParamCreator(configuration).getEstateDetails1(estateNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview  **UC Mapping:** View Claim  Get result matching estate_number ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * The ringfence area has been checked * Individual permissions have been checked * The claim record is returned if it exists    * An audit record for the read has been created (asynchronously) in mongoDB  ____ ### --- Error messages --- | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case | Case | Description / Rules | |----|-----|------| | **1** | New claim | Where claim has not yet been vetted, admitted or withdrawn |   **1. New Claim**       \"links\": [      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"self,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"claim.maintain,\",        \"method\": \"PUT\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend,\",        \"rel\": \"claim.suspend,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet,\",        \"rel\": \"claim.vet,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit,\",        \"rel\": \"claim.admit,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject,\",        \"rel\": \"claim.reject,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets,\",        \"rel\": \"claim.assets,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link,\",        \"rel\": \"claim.assets.link,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios,\",        \"rel\": \"claim.folios,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio,\",        \"rel\": \"claim.link.folio,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link_claim,\",        \"rel\": \"claim.link.claim,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history,\",        \"rel\": \"claim.history,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history/64,\",        \"rel\": \"claim.view_history_record,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/audit_log,\",        \"rel\": \"claim.search_audit,\",        \"method\": \"GET\"      }      ] 
         * @summary Returns for all claims associated to the current estate
         * @param {number} estateNumber the unique number of the estate resource
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstateClaims(estateNumber: number, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ClaimSearchResults> {
            const localVarFetchArgs = EstatesApiFetchParamCreator(configuration).searchEstateClaims(estateNumber, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * Search the insolvency register for a bankrupt (current or discharged) person Question: do I need to split into SIO and Insolvency search 
         * @summary ---- PLACEHOLDER ---- Gets a search result of Insolvencies
         * @param {string} [surname] Surname of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [middleName] Middle name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [firstName] First Name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [status] The status of the Insolvency, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstates(surname?: string, middleName?: string, firstName?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {
            const localVarFetchArgs = EstatesApiFetchParamCreator(configuration).searchEstates(surname, middleName, firstName, status, page, pageSize, sortOrder, sortBy, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response;
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * EstatesApi - factory interface
 * @export
 */
export const EstatesApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * **UC Map:** Create Claim  Creates a new claim against an estate - can only be done by an insolvency officer - claims from other participants need to be vetted and accepted - going through the embryonic stage of being a claim application or a potential claim first. 
         * @summary Creates a new claim against the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {ClaimRecord} claimDetail The detail of the new claim record.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createClaim(estateNumber: number, claimDetail: ClaimRecord, options?: any) {
            return EstatesApiFp(configuration).createClaim(estateNumber, claimDetail, options)(fetch, basePath);
        },
        /**
         * By passing in the estate_number, the details of the estate are returned 
         * @summary ---- PLACEHOLDER ---- Gets details of the insolvent estate
         * @param {number} estateNumber The unique estate number of the insolvency 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getEstateDetails1(estateNumber: number, options?: any) {
            return EstatesApiFp(configuration).getEstateDetails1(estateNumber, options)(fetch, basePath);
        },
        /**
         * ### Overview  **UC Mapping:** View Claim  Get result matching estate_number ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * The ringfence area has been checked * Individual permissions have been checked * The claim record is returned if it exists    * An audit record for the read has been created (asynchronously) in mongoDB  ____ ### --- Error messages --- | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case | Case | Description / Rules | |----|-----|------| | **1** | New claim | Where claim has not yet been vetted, admitted or withdrawn |   **1. New Claim**       \"links\": [      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"self,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"claim.maintain,\",        \"method\": \"PUT\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend,\",        \"rel\": \"claim.suspend,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet,\",        \"rel\": \"claim.vet,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit,\",        \"rel\": \"claim.admit,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject,\",        \"rel\": \"claim.reject,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets,\",        \"rel\": \"claim.assets,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link,\",        \"rel\": \"claim.assets.link,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios,\",        \"rel\": \"claim.folios,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio,\",        \"rel\": \"claim.link.folio,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link_claim,\",        \"rel\": \"claim.link.claim,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history,\",        \"rel\": \"claim.history,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history/64,\",        \"rel\": \"claim.view_history_record,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/audit_log,\",        \"rel\": \"claim.search_audit,\",        \"method\": \"GET\"      }      ] 
         * @summary Returns for all claims associated to the current estate
         * @param {number} estateNumber the unique number of the estate resource
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstateClaims(estateNumber: number, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return EstatesApiFp(configuration).searchEstateClaims(estateNumber, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
        /**
         * Search the insolvency register for a bankrupt (current or discharged) person Question: do I need to split into SIO and Insolvency search 
         * @summary ---- PLACEHOLDER ---- Gets a search result of Insolvencies
         * @param {string} [surname] Surname of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [middleName] Middle name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [firstName] First Name of the Bankrupt Person (requires one name to be searched) 
         * @param {string} [status] The status of the Insolvency, leave blank for all
         * @param {number} [page] The page in the collection to return. Default is page 1.
         * @param {number} [pageSize] The requested number of items to include in each page returned. Default is 20. 
         * @param {string} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
         * @param {string} [sortBy] The property to sort the collection by.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchEstates(surname?: string, middleName?: string, firstName?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
            return EstatesApiFp(configuration).searchEstates(surname, middleName, firstName, status, page, pageSize, sortOrder, sortBy, options)(fetch, basePath);
        },
    };
};

/**
 * EstatesApi - object-oriented interface
 * @export
 * @class EstatesApi
 * @extends {BaseAPI}
 */
export class EstatesApi extends BaseAPI {
    /**
     * **UC Map:** Create Claim  Creates a new claim against an estate - can only be done by an insolvency officer - claims from other participants need to be vetted and accepted - going through the embryonic stage of being a claim application or a potential claim first. 
     * @summary Creates a new claim against the insolvent estate
     * @param {} estateNumber The unique estate number of the insolvency 
     * @param {} claimDetail The detail of the new claim record.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EstatesApi
     */
    public createClaim(estateNumber: number, claimDetail: ClaimRecord, options?: any) {
        return EstatesApiFp(this.configuration).createClaim(estateNumber, claimDetail, options)(this.fetch, this.basePath);
    }

    /**
     * By passing in the estate_number, the details of the estate are returned 
     * @summary ---- PLACEHOLDER ---- Gets details of the insolvent estate
     * @param {} estateNumber The unique estate number of the insolvency 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EstatesApi
     */
    public getEstateDetails1(estateNumber: number, options?: any) {
        return EstatesApiFp(this.configuration).getEstateDetails1(estateNumber, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview  **UC Mapping:** View Claim  Get result matching estate_number ____ ### Pre-conditions * User is authenticated ____ ### Post-conditions * The ringfence area has been checked * Individual permissions have been checked * The claim record is returned if it exists    * An audit record for the read has been created (asynchronously) in mongoDB  ____ ### --- Error messages --- | Code| Message | Description| |----|-----|------| | **400** | Not authenticated | Agent not authenticated |  ### HATEOAS \"links\" element examples | Case | Case | Description / Rules | |----|-----|------| | **1** | New claim | Where claim has not yet been vetted, admitted or withdrawn |   **1. New Claim**       \"links\": [      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"self,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682,\",        \"rel\": \"claim.maintain,\",        \"method\": \"PUT\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend,\",        \"rel\": \"claim.suspend,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet,\",        \"rel\": \"claim.vet,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/admit,\",        \"rel\": \"claim.admit,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject,\",        \"rel\": \"claim.reject,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets,\",        \"rel\": \"claim.assets,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link,\",        \"rel\": \"claim.assets.link,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios,\",        \"rel\": \"claim.folios,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio,\",        \"rel\": \"claim.link.folio,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link_claim,\",        \"rel\": \"claim.link.claim,\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history,\",        \"rel\": \"claim.history,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/history/64,\",        \"rel\": \"claim.view_history_record,\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/audit_log,\",        \"rel\": \"claim.search_audit,\",        \"method\": \"GET\"      }      ] 
     * @summary Returns for all claims associated to the current estate
     * @param {} estateNumber the unique number of the estate resource
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EstatesApi
     */
    public searchEstateClaims(estateNumber: number, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return EstatesApiFp(this.configuration).searchEstateClaims(estateNumber, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

    /**
     * Search the insolvency register for a bankrupt (current or discharged) person Question: do I need to split into SIO and Insolvency search 
     * @summary ---- PLACEHOLDER ---- Gets a search result of Insolvencies
     * @param {} [surname] Surname of the Bankrupt Person (requires one name to be searched) 
     * @param {} [middleName] Middle name of the Bankrupt Person (requires one name to be searched) 
     * @param {} [firstName] First Name of the Bankrupt Person (requires one name to be searched) 
     * @param {} [status] The status of the Insolvency, leave blank for all
     * @param {} [page] The page in the collection to return. Default is page 1.
     * @param {} [pageSize] The requested number of items to include in each page returned. Default is 20. 
     * @param {} [sortOrder] The order to sort the collection in. Can be &#39;asc&#39; or &#39;desc&#39;.
     * @param {} [sortBy] The property to sort the collection by.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EstatesApi
     */
    public searchEstates(surname?: string, middleName?: string, firstName?: string, status?: string, page?: number, pageSize?: number, sortOrder?: string, sortBy?: string, options?: any) {
        return EstatesApiFp(this.configuration).searchEstates(surname, middleName, firstName, status, page, pageSize, sortOrder, sortBy, options)(this.fetch, this.basePath);
    }

}

/**
 * FoliosApi - fetch parameter creator
 * @export
 */
export const FoliosApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to folio * Audit record is created against file * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | TBD |  <br /> ****  **Case 1** - 200: TBD      Not in scope of drop 1.       
         * @summary Uploads & links a file to a folio 
         * @param {any} upfile The file to upload.
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {string} folioNumber The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addAttachment(upfile: any, claimNumber: string, folioNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'upfile' is not null or undefined
            if (upfile === null || upfile === undefined) {
                throw new RequiredError('upfile','Required parameter upfile was null or undefined when calling addAttachment.');
            }
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling addAttachment.');
            }
            // verify required parameter 'folioNumber' is not null or undefined
            if (folioNumber === null || folioNumber === undefined) {
                throw new RequiredError('folioNumber','Required parameter folioNumber was null or undefined when calling addAttachment.');
            }
            const localVarPath = `/claims/{claim_number}/folios/{folio_number}/add-attachment`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)))
                .replace(`{${"folio_number"}}`, encodeURIComponent(String(folioNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new url.URLSearchParams();

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (upfile !== undefined) {
                localVarFormParams.set('upfile', upfile as any);
            }

            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = localVarFormParams.toString();

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling addFolio.');
            }
            const localVarPath = `/claims/{claim_number}/add-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;
            const localVarFormParams = new url.URLSearchParams();

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (upfile !== undefined) {
                localVarFormParams.set('upfile', upfile as any);
            }

            localVarHeaderParameter['Content-Type'] = 'application/x-www-form-urlencoded';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = localVarFormParams.toString();

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling claimFolios.');
            }
            const localVarPath = `/claims/{claim_number}/folios`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling linkFolio.');
            }
            // verify required parameter 'folio' is not null or undefined
            if (folio === null || folio === undefined) {
                throw new RequiredError('folio','Required parameter folio was null or undefined when calling linkFolio.');
            }
            const localVarPath = `/claims/{claim_number}/link-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(folio || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options: any = {}): FetchArgs {
            // verify required parameter 'claimNumber' is not null or undefined
            if (claimNumber === null || claimNumber === undefined) {
                throw new RequiredError('claimNumber','Required parameter claimNumber was null or undefined when calling unlinkFolio.');
            }
            // verify required parameter 'folio' is not null or undefined
            if (folio === null || folio === undefined) {
                throw new RequiredError('folio','Required parameter folio was null or undefined when calling unlinkFolio.');
            }
            const localVarPath = `/claims/{claim_number}/unlink-folio`
                .replace(`{${"claim_number"}}`, encodeURIComponent(String(claimNumber)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(folio || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * FoliosApi - functional programming interface
 * @export
 */
export const FoliosApiFp = function(configuration?: Configuration) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to folio * Audit record is created against file * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | TBD |  <br /> ****  **Case 1** - 200: TBD      Not in scope of drop 1.       
         * @summary Uploads & links a file to a folio 
         * @param {any} upfile The file to upload.
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {string} folioNumber The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addAttachment(upfile: any, claimNumber: string, folioNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FileMetadataRecord> {
            const localVarFetchArgs = FoliosApiFetchParamCreator(configuration).addAttachment(upfile, claimNumber, folioNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = FoliosApiFetchParamCreator(configuration).addFolio(claimNumber, upfile, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioSearchResults> {
            const localVarFetchArgs = FoliosApiFetchParamCreator(configuration).claimFolios(claimNumber, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = FoliosApiFetchParamCreator(configuration).linkFolio(claimNumber, folio, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<FolioRecord> {
            const localVarFetchArgs = FoliosApiFetchParamCreator(configuration).unlinkFolio(claimNumber, folio, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * FoliosApi - factory interface
 * @export
 */
export const FoliosApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to folio * Audit record is created against file * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | TBD |  <br /> ****  **Case 1** - 200: TBD      Not in scope of drop 1.       
         * @summary Uploads & links a file to a folio 
         * @param {any} upfile The file to upload.
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {string} folioNumber The claim that the folio will be associated with
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addAttachment(upfile: any, claimNumber: string, folioNumber: string, options?: any) {
            return FoliosApiFp(configuration).addAttachment(upfile, claimNumber, folioNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Creates and links a new folio 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {any} [upfile] The file to upload.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFolio(claimNumber: string, upfile?: any, options?: any) {
            return FoliosApiFp(configuration).addFolio(claimNumber, upfile, options)(fetch, basePath);
        },
        /**
         *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
         * @summary Returns folios associated to a claim. 
         * @param {string} claimNumber The claim that we are usings as the basis for out folio search
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        claimFolios(claimNumber: string, options?: any) {
            return FoliosApiFp(configuration).claimFolios(claimNumber, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
            return FoliosApiFp(configuration).linkFolio(claimNumber, folio, options)(fetch, basePath);
        },
        /**
         *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
         * @summary Links an existing folio to a claim 
         * @param {string} claimNumber The claim that the folio will be associated with
         * @param {FolioRecord} folio The folio record
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
            return FoliosApiFp(configuration).unlinkFolio(claimNumber, folio, options)(fetch, basePath);
        },
    };
};

/**
 * FoliosApi - object-oriented interface
 * @export
 * @class FoliosApi
 * @extends {BaseAPI}
 */
export class FoliosApi extends BaseAPI {
    /**
     *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authrosied to administer the claim * Folio resource is current / selected   ____ ### Post-conditions * File is uploaded * File is linked to folio * Audit record is created against file * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Folio not found |   ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: OK ** | TBD |  <br /> ****  **Case 1** - 200: TBD      Not in scope of drop 1.       
     * @summary Uploads & links a file to a folio 
     * @param {} upfile The file to upload.
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} folioNumber The claim that the folio will be associated with
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoliosApi
     */
    public addAttachment(upfile: any, claimNumber: string, folioNumber: string, options?: any) {
        return FoliosApiFp(this.configuration).addAttachment(upfile, claimNumber, folioNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Adds a folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Creates and links a new folio 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} [upfile] The file to upload.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoliosApi
     */
    public addFolio(claimNumber: string, upfile?: any, options?: any) {
        return FoliosApiFp(this.configuration).addFolio(claimNumber, upfile, options)(this.fetch, this.basePath);
    }

    /**
     *  ### Overview  Returns array of folios.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised  ____ ### Post-conditions * Array of folios is returned  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples        Not applicable to array fo search results  ____        
     * @summary Returns folios associated to a claim. 
     * @param {} claimNumber The claim that we are usings as the basis for out folio search
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoliosApi
     */
    public claimFolios(claimNumber: string, options?: any) {
        return FoliosApiFp(this.configuration).claimFolios(claimNumber, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Links an existing folio to a claim 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} folio The folio record
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoliosApi
     */
    public linkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
        return FoliosApiFp(this.configuration).linkFolio(claimNumber, folio, options)(this.fetch, this.basePath);
    }

    /**
     *   ### Overview  Links existing folio - essentially a folder with extended metadata - to the claim / estate.   **** May  be done by an **insolvency officer** or the system actor as an automated action.  ****   **UC Mapping:**   ____ ### Pre-conditions * User is authenticated * User is authorised to administer the claim * Claim resource is current / selected   ____ ### Post-conditions * Folio is linked to claim * Audit record is created against claim * Audit record is created against folio  ____ ### Error messages | Code| Message | Description| |----|-----|------| | **400** | Bad request  | Bad request | | **401** | Not authenticated  | User must be logged in to perform this action | | **403** | Not authorised  | User not authorised to perform this action | | **404** | Not found  | Claim not found |  ### HATEOAS \"links\" element examples | Case \\# | Case | Description / Rules | |----|-----|------| | **1** | **200: Unvetted claim** | A claim that is not yet part of the estate| | **2** | **200: Rejected or withdrawn claim** | Previously rejected or withdrawn claim| | **3** | **200: Errored claim** | Previously errored claim| | **4** | **200: Admitted claim** | Active claim | | **5** | **200: Vetted claim** |  Active claim | | **6** | **200: Suspended claim** | Active claim | | **7** | **200: Received claim** | Active claim  |   <br /> ****  **Case 1* - 200: Unvetted claim       {      \"links\": [            ## ----------------- Navigation links -----------------            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims,\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      }      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/add-folio\",        \"rel\": \"claim.addfolio\",        \"method\": \"POST\"      },            ## ----------------- Other -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs/2481b952-e12e-11e7-80c1-9a214cf093ae\",        \"rel\": \"claim.view-audit-log-detail,\",        \"method\": \"GET\"      }            ]        <br />     **Case 2** - 200: Rejected or withdrawn claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },             {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      }            <br />     **Case 3** - 200: Errored claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      }          <br />     **Case 4** - 200: Admitted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },      ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 5** - 200: Vetted Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/admit\",        \"rel\": \"claim.admit\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }          <br />     **Case 6** - 200: Suspended Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/receive\",        \"rel\": \"claim.receive\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/potential\",        \"rel\": \"claim.potential\",        \"method\": \"POST\"      },           {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/523623/unlink-folio\",        \"rel\": \"claim.unlink-folio\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }            <br />     **Case 7** - 200: Received Claim       \"links\": [        ## ----------------- Navigation links -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462\",        \"rel\": \"self\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims\",        \"rel\": \"claim.search\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/auditlogs\",        \"rel\": \"claim.auditlogs\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets\",        \"rel\": \"claim.assets\",        \"method\": \"GET\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/folios\",        \"rel\": \"claim.folios\",        \"method\": \"GET\"      },            ## ----------------- Modify self / status changes -----------------      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/824462/maintain\",        \"rel\": \"claim.maintain\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/vet\",        \"rel\": \"claim.vet\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/suspend\",        \"rel\": \"claim.suspend\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/error\",        \"rel\": \"claim.error\",        \"method\": \"POST\"      },            {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/reject\",        \"rel\": \"claim.reject\",        \"method\": \"POST\"      },      {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/assets/4855682/link\",        \"rel\": \"claim.link-assets\",        \"method\": \"POST\"      },                {        \"href\": \"https://app.insolvency.govt.nz/v1/oasis4/estates/883785/claims/4855682/link-folio\",        \"rel\": \"claim.link-folio\",        \"method\": \"POST\"      }      ]       
     * @summary Links an existing folio to a claim 
     * @param {} claimNumber The claim that the folio will be associated with
     * @param {} folio The folio record
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FoliosApi
     */
    public unlinkFolio(claimNumber: string, folio: FolioRecord, options?: any) {
        return FoliosApiFp(this.configuration).unlinkFolio(claimNumber, folio, options)(this.fetch, this.basePath);
    }

}

/**
 * OrganisationsApi - fetch parameter creator
 * @export
 */
export const OrganisationsApiFetchParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrg(orgId: string, options: any = {}): FetchArgs {
            // verify required parameter 'orgId' is not null or undefined
            if (orgId === null || orgId === undefined) {
                throw new RequiredError('orgId','Required parameter orgId was null or undefined when calling getOrg.');
            }
            const localVarPath = `/organisations/{org_id}`
                .replace(`{${"org_id"}}`, encodeURIComponent(String(orgId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a search result of claims related to an organisation
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgClaims(orgId: string, options: any = {}): FetchArgs {
            // verify required parameter 'orgId' is not null or undefined
            if (orgId === null || orgId === undefined) {
                throw new RequiredError('orgId','Required parameter orgId was null or undefined when calling getOrgClaims.');
            }
            const localVarPath = `/organisations/{org_id}/claims`
                .replace(`{${"org_id"}}`, encodeURIComponent(String(orgId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the organision. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgContacts(orgId: string, options: any = {}): FetchArgs {
            // verify required parameter 'orgId' is not null or undefined
            if (orgId === null || orgId === undefined) {
                throw new RequiredError('orgId','Required parameter orgId was null or undefined when calling getOrgContacts.');
            }
            const localVarPath = `/organisations/{org_id}/contacts`
                .replace(`{${"org_id"}}`, encodeURIComponent(String(orgId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview         ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a role record
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {OrganisationRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainOrg(orgId: string, updatedRole: OrganisationRecord, options: any = {}): FetchArgs {
            // verify required parameter 'orgId' is not null or undefined
            if (orgId === null || orgId === undefined) {
                throw new RequiredError('orgId','Required parameter orgId was null or undefined when calling maintainOrg.');
            }
            // verify required parameter 'updatedRole' is not null or undefined
            if (updatedRole === null || updatedRole === undefined) {
                throw new RequiredError('updatedRole','Required parameter updatedRole was null or undefined when calling maintainOrg.');
            }
            const localVarPath = `/organisations/{org_id}/maintain`
                .replace(`{${"org_id"}}`, encodeURIComponent(String(orgId)));
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(updatedRole || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Creates a new organisation record
         * @param {OrganisationRecord} orgRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newOrg(orgRecord: OrganisationRecord, options: any = {}): FetchArgs {
            // verify required parameter 'orgRecord' is not null or undefined
            if (orgRecord === null || orgRecord === undefined) {
                throw new RequiredError('orgRecord','Required parameter orgRecord was null or undefined when calling newOrg.');
            }
            const localVarPath = `/organisations/new`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'POST' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            localVarHeaderParameter['Content-Type'] = 'application/json';

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            localVarRequestOptions.body = JSON.stringify(orgRecord || {});

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * ### Overview     Retrieves a search result of organisations available to the for internal users of the application      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Org search result |      ### Links          Placeholder    
         * @summary Search organisations / key creditors.
         * @param {string} [organsationName] * The name of the organisation. 
         * @param {string} [organsationId] * The unique id of the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchOrgs(organsationName?: string, organsationId?: string, options: any = {}): FetchArgs {
            const localVarPath = `/organisations/search`;
            const localVarUrlObj = url.parse(localVarPath, true);
            const localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication jwt required
            if (configuration && configuration.apiKey) {
                const localVarApiKeyValue = typeof configuration.apiKey === 'function'
					? configuration.apiKey("Authorization")
					: configuration.apiKey;
                localVarHeaderParameter["Authorization"] = localVarApiKeyValue;
            }

            if (organsationName !== undefined) {
                localVarQueryParameter['organsation_name'] = organsationName;
            }

            if (organsationId !== undefined) {
                localVarQueryParameter['organsation_id'] = organsationId;
            }

            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);

            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * OrganisationsApi - functional programming interface
 * @export
 */
export const OrganisationsApiFp = function(configuration?: Configuration) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrg(orgId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrganisationRecord> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).getOrg(orgId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a search result of claims related to an organisation
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgClaims(orgId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CreditorClaimSearchResults> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).getOrgClaims(orgId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the organision. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgContacts(orgId: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ContactSearchResults> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).getOrgContacts(orgId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview         ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a role record
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {OrganisationRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainOrg(orgId: string, updatedRole: OrganisationRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<RoleRecord> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).maintainOrg(orgId, updatedRole, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Creates a new organisation record
         * @param {OrganisationRecord} orgRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newOrg(orgRecord: OrganisationRecord, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<OrganisationRecord> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).newOrg(orgRecord, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
        /**
         * ### Overview     Retrieves a search result of organisations available to the for internal users of the application      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Org search result |      ### Links          Placeholder    
         * @summary Search organisations / key creditors.
         * @param {string} [organsationName] * The name of the organisation. 
         * @param {string} [organsationId] * The unique id of the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchOrgs(organsationName?: string, organsationId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<PlaceHolderModel> {
            const localVarFetchArgs = OrganisationsApiFetchParamCreator(configuration).searchOrgs(organsationName, organsationId, options);
            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    } else {
                        throw response;
                    }
                });
            };
        },
    }
};

/**
 * OrganisationsApi - factory interface
 * @export
 */
export const OrganisationsApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {
    return {
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the role. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrg(orgId: string, options?: any) {
            return OrganisationsApiFp(configuration).getOrg(orgId, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a search result of claims related to an organisation
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgClaims(orgId: string, options?: any) {
            return OrganisationsApiFp(configuration).getOrgClaims(orgId, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets an organisation record
         * @param {string} orgId * The unique identifier for the organision. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOrgContacts(orgId: string, options?: any) {
            return OrganisationsApiFp(configuration).getOrgContacts(orgId, options)(fetch, basePath);
        },
        /**
         * ### Overview         ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Gets a role record
         * @param {string} orgId * The unique identifier for the organisation. 
         * @param {OrganisationRecord} updatedRole 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        maintainOrg(orgId: string, updatedRole: OrganisationRecord, options?: any) {
            return OrganisationsApiFp(configuration).maintainOrg(orgId, updatedRole, options)(fetch, basePath);
        },
        /**
         * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
         * @summary Creates a new organisation record
         * @param {OrganisationRecord} orgRecord 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        newOrg(orgRecord: OrganisationRecord, options?: any) {
            return OrganisationsApiFp(configuration).newOrg(orgRecord, options)(fetch, basePath);
        },
        /**
         * ### Overview     Retrieves a search result of organisations available to the for internal users of the application      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Org search result |      ### Links          Placeholder    
         * @summary Search organisations / key creditors.
         * @param {string} [organsationName] * The name of the organisation. 
         * @param {string} [organsationId] * The unique id of the organisation. 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchOrgs(organsationName?: string, organsationId?: string, options?: any) {
            return OrganisationsApiFp(configuration).searchOrgs(organsationName, organsationId, options)(fetch, basePath);
        },
    };
};

/**
 * OrganisationsApi - object-oriented interface
 * @export
 * @class OrganisationsApi
 * @extends {BaseAPI}
 */
export class OrganisationsApi extends BaseAPI {
    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
     * @summary Gets an organisation record
     * @param {} orgId * The unique identifier for the role. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public getOrg(orgId: string, options?: any) {
        return OrganisationsApiFp(this.configuration).getOrg(orgId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
     * @summary Gets a search result of claims related to an organisation
     * @param {} orgId * The unique identifier for the organisation. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public getOrgClaims(orgId: string, options?: any) {
        return OrganisationsApiFp(this.configuration).getOrgClaims(orgId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
     * @summary Gets an organisation record
     * @param {} orgId * The unique identifier for the organision. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public getOrgContacts(orgId: string, options?: any) {
        return OrganisationsApiFp(this.configuration).getOrgContacts(orgId, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview         ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Contact record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
     * @summary Gets a role record
     * @param {} orgId * The unique identifier for the organisation. 
     * @param {} updatedRole 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public maintainOrg(orgId: string, updatedRole: OrganisationRecord, options?: any) {
        return OrganisationsApiFp(this.configuration).maintainOrg(orgId, updatedRole, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview              ****      **UC Mapping:**        ____    ### Pre-conditions    * User is authenticated    ____    ### Post-conditions    * Org record is returned    * Audit record created    ____    ### Error messages    | Code| Message | Description|    |----|-----|------|    | **400** | Not authenticated | Bad request |    | **401** | Not authenticated  | User must be logged in to perform this action |    | **403** | Not authorised  | User not authorised to perform this action |    | **5XX** | System error  | System error |        ### HATEOAS \"links\" element examples    | Case \\# | Case | Description / Rules |    |----|-----|------|    | **1** | **201: Org record returned** |    | 
     * @summary Creates a new organisation record
     * @param {} orgRecord 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public newOrg(orgRecord: OrganisationRecord, options?: any) {
        return OrganisationsApiFp(this.configuration).newOrg(orgRecord, options)(this.fetch, this.basePath);
    }

    /**
     * ### Overview     Retrieves a search result of organisations available to the for internal users of the application      ____    **UC Mapping:**      ____   ### Pre-conditions   * User is authenticated   ____   ### Post-conditions   * Search result is returned    ____   ### Error messages   | Code| Message | Description|   |----|-----|------|   | **400** | Not authenticated | Bad request |   | **401** | Not authenticated  | User must be logged in to perform this action |   | **403** | Not authorised  | User not authorised to perform this action |   | **5XX** | System error  | System error |      ### HATEOAS \"links\" element examples   | Case \\# | Case | Description / rules |   |----|-----|------|   | **1** | **201: OK** | Org search result |      ### Links          Placeholder    
     * @summary Search organisations / key creditors.
     * @param {} [organsationName] * The name of the organisation. 
     * @param {} [organsationId] * The unique id of the organisation. 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganisationsApi
     */
    public searchOrgs(organsationName?: string, organsationId?: string, options?: any) {
        return OrganisationsApiFp(this.configuration).searchOrgs(organsationName, organsationId, options)(this.fetch, this.basePath);
    }

}

